%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: mag_logo.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Matt Newell
%%CreationDate: 9/3/08
%%BoundingBox: 0 0 756 178
%%HiResBoundingBox: 0 0 755.8662 177.9814
%%CropBox: 0 0 755.8662 177.9814
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2008-09-03T09:48:02-04:00</xap:CreateDate>
         <xap:ModifyDate>2008-09-03T09:48:02-04:00</xap:ModifyDate>
         <xap:MetadataDate>2008-09-03T09:48:02-04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>60</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAPAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXnXnb8+vy+8qvL&#xA;bNdnVNTjqpsrGknFwOkkpIjXfY/EWH8uZmHQ5J78h5uNl1UIeZeLeZf+cqvO18zJoVnbaPBX4ZGH&#xA;1qf/AIKQCP8A5J5scfZkB9W7hT10jy2eeat+aP5i6sX+veYr90k+3DHO8MR3r/dRFE/DMuOnxx5R&#xA;DjyzzPMljc1xcTtymleVvF2LH8cupqJtknkj8tPOPnS69LRLFnt1YLPfy/u7aLcV5SHqRWvFat7Z&#xA;Tm1EMY9RbcWGU+QfRnkH/nGvQ9BMV3rmo3Gp3yUb6vA8lrao2x/YYSvxboSwB7rmpz9oyltEUHY4&#xA;tGI7k29kREjRURQqKAqqNgANgBmtc1vFUs/xP5f/AE82gNfRJrIjWYWLnhI8bVIaMNT1B8JrxrTv&#xA;lnhS4eKvSx4xdXumeVsnYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUDret6V&#xA;oelXOq6rcpaWFonOed+gHQAAblidgBuTsMlCBkaHNjKQiLPJ8m/mn/zkD5i81yz6boryaT5dqUCI&#xA;eNxcJ0rM6nZWH+61NPHlm+02hjj3O8nU59WZ7DYPJsz3DdiqY+X/AC5rnmLU49M0Wykvr6X7MUQ6&#xA;CtCzsaKiiu7MQBkJ5IwFyNBnCBkaD6Q/L3/nF3RrBYr/AM4zDU7zZhpsBZbVDvs7/C8p6fyr2+IZ&#xA;p8/aRO0NvN2WHQgby3e5WdlZ2VrHaWUEdtawrxht4UWONFHZUUBQPlmsMiTZc4ADYK2BLAfO/wCe&#xA;H5f+UJ/ql7dvfagp4y2OnhZpY+oPqEskaEU+yz8vbMvDosmTcCh5uPl1MIc+aSeQv+cifLvm/wA1&#xA;x+XotNubGS65fUbiV42DmONpGWRVPwGinjQtXLM+gljhxXbDFrIzlw08N/5yK1X6z+bep+hLX6gl&#xA;tAkkbVoyQq7AEHYq7kHwObPQRrEHA1kryHyZZ+Uv/OSOoWE0OjedZmu9OY8ItYarzw+HrUq0q/5X&#xA;2h75Rquzwd4bHubtPrCNpcu99OQzQzwpNC6ywyqHilQhlZWFVZWGxBHQ5pSKdovwK7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+Sv+ckfzIudd80y+WbOYjRtFkMcyKSBLeLtIzDv6Rq&#xA;i+/I983/AGfpxGHEecvudRrM3FLhHIPG82DhOxV6/wDlZ/zjxrvmuODVtcZ9J0CUCSHYfWrhD0MS&#xA;sCEQjcO432opBrmv1Ovjj2jvJzMGkM9zsH1D5W8n+W/KunDT9BsI7KDb1GQVkkIr8Ushq7nf9o/L&#xA;NJlzSmbkbdrDHGIoBOcrZpd5i8w6R5d0a51jV5xbWFovKWQ1J3NFVQN2ZiaADJ48ZnLhHNjOYiLL&#xA;5g/NX/nIfVvNAOi+VVn0zSJPgmmqFu7nlQcfgr6aV24qxLd/5c3el0AhvLcurz6sy2jsEi8s/wDO&#xA;O/5n67Es72Mek27iqSak5hY/88lWSZf9kgyzJr8Uet+5rho8kule9k4/5xf/ADG0mH9KaXrFn+lr&#xA;Mma3jtpJopCyAkelKUSjnoK0HvlP8pY5bEGm38jMbg7vEbyS7lu55Lxne7eRmuHlJMhkJJcuW35c&#xA;utc2QqtnBPmpYUPpD/nF78ybicyeSNSl5iJGuNGkY1IVd5YPkK818Pi9s0/aWn/jHxdnoc38J+D6&#xA;JzUOxdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVfnVc3EtzcS3EzcpZnaSRj3ZjUn&#xA;7znXAU84TaceT/JPmTzfqq6ZoVo1xNsZpT8MUKH9uWQ7KPxPQAnK8uaOMXIs8eKUzQfTX5ff841e&#xA;VNAMF/r7fpvVo+LiNgVs43FD8MfWSh7ybH+UZps/aMpbR9I+12mHRRjudy9jzXOY7FWAfmp+cHl/&#xA;yJYNGzrea/MhNnpiGpBI+GSeh+COv0t+z3Iy9NpJZT3R73Hz6iOMeb5ymn/N7859UoqPdWcD7RoP&#xA;q+nWxPiSeJYBu5aQjxzbgYtOO77y628mY/in0B+Uv5I6J5Hto768EeoeZXX97fUrHDXYpbBgCooa&#xA;FyOTewNM1Wq1ksmw2j+ObsNPphAWfqemZhOU7FXwd+aNxp9x+Y3mSWwThatqNxx3DBmEhEjgjs7h&#xA;mHsc6jTgjHG+50OcgzNd7F8vaWX/AJQ3txZ/md5Zlt3KO+oQwsR/JO3pSD6UcjMfVAHFL3N2nNZB&#xA;733VnMO+dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVfCPmHyHqGnfmRL5NA4XEuoJ&#xA;Z2btsrJcyAW8nyZHU51EMwOPj8nQzxET4fN9peTPJuheUNCg0fR4BFDEAZpqfvJ5aANLK3dmp9HQ&#xA;UAAznM2aWSVl3WPGICgnmVNjsVeEfm3+fuoWWrT+UPJEDXGtpJ9WuL9UExSXoYraIcucgb4SWGxq&#xA;KHqNppdCCOOfL8c3A1GrIPDDmk35e/8AONmpapcjX/zDuJWe4b1m0z1Ga4lZjUm6nqSte6qeW+7K&#xA;dssz9oCPpx/P9TDFoid5vobTNM07SrCGw062js7K3XjDbwqERR12A8Tuc1MpGRs7l2IiAKDEovzm&#xA;/L+4822nlay1D67qV3I8Qlt15W6SKpYK0xIUlqcRw5b9aZkHR5BAyIoNP5iHFwg7s3zFb3Yq+Sfz&#xA;S/IDzrYeYtR1LQbFtW0a7me4hFsQ08QlYt6TQk+o3EmgZeVRuaHbN/ptdCUQJGpOoz6SQkSBYSPy&#xA;z/zj9+Z+uTIH0s6Vak0e51A+hxp/xVvMfaiU98sya7FHrfua4aTJLpT2jy1/zjdo/lzV/Lepw3c1&#xA;/fafem41K4fjHGUSJ2i9OH4qcZlj/aJ3P0a7J2gZiQqgRs50NGIkF7Vmtc12KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV5j+cH5ZTa9Np3mrQogfNGgyxTxRV4/WooJBKISTsHDCqH3IP&#xA;amdpNTw3CX0y+xxdRh4qkPqDPPLeq3Wr6FZaldWEul3F3EJJNPuKGWIn9lqffuAfEA7ZiZICMiAb&#xA;ciErANUmWQZOIBBB6HY4qlWh+VPLOgoV0bS7XT+Qo728SI7f67gcm/2RyyeWU/qJLCOOMeQpBedv&#xA;zA8r+TNMN/rl0IiwP1a0SjXE7AfZijqK/wCsaKO5GSw4JZDUQjLljAWXyt+YP/OQHnTzfbTabH6e&#xA;kaPKzBra1LerLG2wSeYmrCnUKFB7g5vMGhhjN8y6nNq5TFcgwHy5qz6N5g0zV03fT7qG6AHf0ZA9&#xA;Pp45lTjxRI73HhLhIPc/QHTtRsdTsINQsJ0ubK6QS288ZqrowqCDnKyiYmjzehBBFhEZFLsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVUby9s7K1ku72eO2tYV5T&#xA;XEzrHGijuzsQoHzwiJJoIJA3LwT81v8AnJeygt5NJ8izeteseM2tFB6UYHUQLIPjY9OTLxHblWo2&#xA;um7OPPJ8nAz60cofN846pq2p6teyX2p3c17eS/3lxcO0jmnT4mJNB2zbxiIihsHWykSbKFyTF2Ks&#xA;2/L/APODzp5HJh0u4W40xm5SaZdAyQVNaslCrRnf9hhXvXMbPpYZOfPvb8WolDlyepj/AJy6vJES&#xA;OLyopuSQK/XWYMe/FBADv23zB/kofzvscv8AlD+j9r0zyz5y/NHzRHHLF5Vh8s2bULXurTyTuRtU&#xA;R2iJbSk+BdlB8cw8mHFDnLiPl+vdyYZMkv4eH3/qegW0csUCJNMZ5QPjlYKpYnfooAA8MxCd3JCp&#xA;gV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVgH5uf8AKqP0dbf8rA4e&#xA;jV/qX+9Hq8qCvD6v8X37fjmXpPFs+G4+o8OvW+YfNv8AypKj/wCGv079YqePr/Vvq1K/s1/fffm6&#xA;xeN/Fw/a6vJ4X8PEwR+HM8K8K/Dy6096ZlOO1iqpb/VvVH1jn6X7Xp05fRXbAUh6X5N/6F59S3/x&#xA;D+nPWqPX9f0/qfX/AJdf9Ip8t8w835j+Hh/T+pysfg9b/HufRv5c/wDKmeKf4I/Rn1ijU9Hj9d40&#xA;+Ll6v+k0/wBbNRqPG/jv9H6nY4fC/gpnuYjkOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:8573E1BA2F7BDD11859AF732E47FBB57</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:8673E1BA2F7BDD11859AF732E47FBB57</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:F33052D863D711DA9972DC22FD8A994C</stRef:instanceID>
            <stRef:documentID>uuid:F33052D763D711DA9972DC22FD8A994C</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>792.000000</stDim:w>
            <stDim:h>612.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 288 CVC</xapG:swatchName>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>65.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>30.000002</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -177.981 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 177.981 li
755.866 177.981 li
755.866 0 li
cp
clp
[1 0 0 1 0 0 ]ct
349.875 67.5659 mo
366.146 38.7842 li
368.206 38.7842 370.678 39.0044 373.149 39.0044 cv
375.554 39.0044 378.025 38.7842 380.428 38.7842 cv
380.428 40.4346 li
379.812 40.4346 li
377.752 40.4346 373.563 40.5454 373.424 42.9668 cv
373.356 44.3979 373.631 46.0493 373.769 47.2593 cv
376.378 72.4653 li
376.652 75.2163 378.369 75.4365 382.488 75.5469 cv
382.488 77.1982 li
379.261 77.0879 375.896 76.9771 372.6 76.9771 cv
368.825 76.9771 365.048 77.0879 361.272 77.1982 cv
361.272 75.5469 li
364.843 75.3818 367.176 75.3818 367.176 72.9604 cv
367.176 72.2998 367.176 71.6943 367.108 70.2632 cv
365.186 47.0391 li
365.048 47.0391 li
347.54 78.0229 li
345.893 78.0229 li
329.275 47.645 li
329.139 47.645 li
326.804 71.8042 li
326.804 73.5649 327.354 74.4463 328.247 74.9414 cv
329.275 75.4365 330.718 75.4922 332.64 75.5469 cv
333.464 75.5469 li
333.464 77.1982 li
330.374 77.0879 327.216 76.9771 324.127 76.9771 cv
321.449 76.9771 318.703 77.0879 316.024 77.1982 cv
316.024 75.5469 li
316.985 75.5469 li
322.41 75.3818 322.615 73.5112 323.234 69.5479 cv
325.293 54.2485 li
325.843 50.3418 326.117 46.7642 326.117 44.562 cv
326.117 41.4814 323.165 40.4346 320.145 40.4346 cv
319.252 40.4346 li
319.252 38.7842 li
322.067 38.7842 324.813 39.0044 327.628 39.0044 cv
329.688 39.0044 331.747 38.7842 333.808 38.7842 cv
349.875 67.5659 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
405.766 44.9478 mo
405.627 44.9478 li
399.242 60.5225 li
412.083 60.5225 li
405.766 44.9478 li
cp
395.741 69.3281 mo
395.053 71.1992 394.229 72.6309 394.229 73.6206 cv
394.229 75.272 397.114 75.5469 399.38 75.5469 cv
400.135 75.5469 li
400.135 77.1982 li
397.389 77.0879 394.573 76.9771 391.827 76.9771 cv
389.354 76.9771 386.884 77.0879 384.412 77.1982 cv
384.412 75.5469 li
384.823 75.5469 li
387.502 75.5469 389.768 74.2803 390.797 71.9692 cv
401.783 46.7085 li
402.675 44.6738 403.912 41.9209 404.323 39.8848 cv
406.521 39.2793 409.267 38.1787 410.572 37.5186 cv
410.777 37.4634 410.915 37.4087 411.122 37.4087 cv
411.327 37.4087 411.465 37.4087 411.6 37.5737 cv
411.808 38.0137 412.014 38.5083 412.22 38.9492 cv
424.854 67.7314 li
425.677 69.6587 426.5 71.6943 427.394 73.3457 cv
428.218 74.8867 429.659 75.5469 431.925 75.5469 cv
432.337 75.5469 li
432.337 77.1982 li
429.247 77.0879 426.157 76.9771 422.86 76.9771 cv
419.497 76.9771 416.063 77.0879 412.563 77.1982 cv
412.563 75.5469 li
413.318 75.5469 li
414.896 75.5469 417.574 75.3267 417.574 73.9502 cv
417.574 73.2354 416.957 71.75 416.202 69.9893 cv
413.523 63.605 li
397.938 63.605 li
395.741 69.3281 li
cp
f
449.639 57.3857 mo
453.003 57.3857 li
459.87 57.3857 463.577 55.2939 463.577 48.8003 cv
463.577 43.9019 459.664 40.7656 453.552 40.7656 cv
451.493 40.7656 450.601 40.9307 449.639 40.9849 cv
449.639 57.3857 li
cp
440.85 44.6182 mo
440.85 40.6006 438.104 40.4346 435.976 40.4346 cv
434.739 40.4346 li
434.739 38.7842 li
436.937 38.7842 441.193 39.0044 445.382 39.0044 cv
449.503 39.0044 452.797 38.7842 456.437 38.7842 cv
465.088 38.7842 472.778 40.6548 472.778 48.4697 cv
472.778 53.4229 468.659 56.4497 463.235 58.1558 cv
474.975 72.2451 li
476.897 74.5562 478.271 75.2163 481.636 75.5469 cv
481.636 77.1982 li
479.369 77.1982 477.172 76.9771 474.906 76.9771 cv
472.777 76.9771 470.581 77.1982 468.452 77.1982 cv
463.165 71.6387 458.634 65.6953 454.171 59.3667 cv
449.639 59.3667 li
449.639 71.1436 li
449.639 75.3818 452.111 75.5469 455.27 75.5469 cv
456.506 75.5469 li
456.506 77.1982 li
452.592 77.1982 448.61 76.9771 444.696 76.9771 cv
441.399 76.9771 438.173 77.1982 434.739 77.1982 cv
434.739 75.5469 li
435.976 75.5469 li
438.517 75.5469 440.85 74.6118 440.85 72.5747 cv
440.85 44.6182 li
cp
f
511.914 38.7842 mo
514.866 38.7842 517.75 39.0044 520.703 39.0044 cv
523.793 39.0044 526.813 38.7842 529.903 38.7842 cv
529.903 40.4346 li
529.01 40.4346 li
524.479 40.4346 520.772 42.9111 517.957 45.333 cv
507.107 54.7441 li
524.754 72.52 li
526.194 74.1714 528.393 75.5469 531.002 75.5469 cv
531.001 77.1982 li
528.736 77.1982 526.334 77.0879 523.998 77.0879 cv
521.801 77.0879 519.673 77.1982 517.475 77.1982 cv
516.857 76.1523 514.866 73.9502 513.907 73.0698 cv
499.075 58.2114 li
513.493 45.333 li
514.386 44.6182 516.515 42.7461 516.515 41.5908 cv
516.515 40.4902 513.562 40.4346 512.669 40.4346 cv
511.914 40.4346 li
511.914 38.7842 li
cp
484.038 75.5469 mo
484.999 75.5469 li
487.472 75.5469 490.08 75.272 490.08 72.4097 cv
490.08 43.5723 li
490.08 40.71 487.472 40.4346 484.999 40.4346 cv
484.038 40.4346 li
484.038 38.7842 li
486.784 38.7842 490.905 39.0044 494.405 39.0044 cv
498.113 39.0044 502.508 38.7842 505.322 38.7842 cv
505.322 40.4346 li
504.498 40.4346 li
502.438 40.4346 498.868 40.4902 498.868 43.5723 cv
498.868 72.4097 li
498.868 75.4922 502.438 75.5469 504.498 75.5469 cv
505.322 75.5469 li
505.322 77.1982 li
502.508 77.1982 498.113 76.9771 494.405 76.9771 cv
490.905 76.9771 486.784 77.1982 484.038 77.1982 cv
484.038 75.5469 li
cp
f
533.61 75.5469 mo
534.572 75.5469 li
537.045 75.5469 539.653 75.272 539.653 72.4097 cv
539.653 43.5723 li
539.653 40.71 537.045 40.4346 534.572 40.4346 cv
533.61 40.4346 li
533.61 38.7842 li
537.799 38.7842 544.938 39.0044 550.706 39.0044 cv
556.475 39.0044 563.615 38.7842 568.283 38.7842 cv
568.147 41.1499 568.217 44.7832 568.422 47.2036 cv
566.362 47.645 li
566.019 44.0674 565.194 41.2056 557.985 41.2056 cv
548.44 41.2056 li
548.44 55.625 li
556.611 55.625 li
560.731 55.625 561.624 53.7534 562.036 50.7813 cv
564.097 50.7813 li
563.96 52.9277 563.89 55.0742 563.89 57.2207 cv
563.89 59.312 563.96 61.4028 564.097 63.4941 cv
562.036 63.8242 li
561.624 60.5225 561.419 58.376 556.681 58.376 cv
548.44 58.376 li
548.44 71.1992 li
548.44 74.7769 552.424 74.7769 556.817 74.7769 cv
565.058 74.7769 568.696 74.3359 570.756 68.063 cv
572.68 68.4473 li
571.786 71.3647 570.963 74.2803 570.345 77.1982 cv
565.95 77.1982 558.055 76.9771 551.875 76.9771 cv
545.695 76.9771 537.523 77.1982 533.61 77.1982 cv
533.61 75.5469 li
cp
f
583.596 41.5356 mo
578.447 41.5356 578.24 42.5269 577.21 46.5444 cv
575.15 46.5444 li
575.425 45.0034 575.769 43.4614 575.975 41.8657 cv
576.249 40.3247 576.387 38.7842 576.387 37.1885 cv
578.035 37.1885 li
578.584 38.8389 580.301 38.7842 582.154 38.7842 cv
617.584 38.7842 li
619.437 38.7842 621.152 38.729 621.291 37.0776 cv
622.938 37.2979 li
622.664 38.7842 622.39 40.2695 622.185 41.7559 cv
622.046 43.2422 622.046 44.7275 622.046 46.2134 cv
619.986 46.8184 li
619.849 44.7832 619.506 41.5356 614.905 41.5356 cv
603.646 41.5356 li
603.646 70.814 li
603.646 75.0508 606.049 75.5469 609.343 75.5469 cv
610.648 75.5469 li
610.648 77.1982 li
607.97 77.1982 603.163 76.9771 599.456 76.9771 cv
595.337 76.9771 590.531 77.1982 587.854 77.1982 cv
587.854 75.5469 li
589.158 75.5469 li
592.935 75.5469 594.855 75.272 594.855 70.9233 cv
594.855 41.5356 li
583.596 41.5356 li
cp
f
624.793 75.5469 mo
625.754 75.5469 li
628.225 75.5469 630.835 75.272 630.835 72.4097 cv
630.835 43.5723 li
630.835 40.71 628.225 40.4346 625.754 40.4346 cv
624.793 40.4346 li
624.793 38.7842 li
627.47 38.7842 631.589 39.0044 634.954 39.0044 cv
638.386 39.0044 642.507 38.7842 645.734 38.7842 cv
645.734 40.4346 li
644.772 40.4346 li
642.3 40.4346 639.691 40.71 639.691 43.5723 cv
639.691 72.4097 li
639.691 75.272 642.3 75.5469 644.772 75.5469 cv
645.734 75.5469 li
645.734 77.1982 li
642.438 77.1982 638.318 76.9771 634.885 76.9771 cv
631.521 76.9771 627.47 77.1982 624.793 77.1982 cv
624.793 75.5469 li
cp
f
692.217 66.356 mo
692.354 66.2461 li
692.354 45.6079 li
692.354 41.0962 688.44 40.4346 686.381 40.4346 cv
684.871 40.4346 li
684.871 38.7842 li
688.098 38.7842 691.256 39.0044 694.482 39.0044 cv
697.299 39.0044 700.113 38.7842 702.928 38.7842 cv
702.928 40.4346 li
701.898 40.4346 li
699.015 40.4346 695.787 40.8755 695.787 47.4248 cv
695.787 72.4653 li
695.787 74.3916 695.856 76.3169 696.199 78.0229 cv
693.591 78.0229 li
658.229 46.4346 li
658.229 69.1079 li
658.229 73.8955 659.397 75.5469 664.685 75.5469 cv
665.85 75.5469 li
665.85 77.1982 li
662.897 77.1982 659.945 76.9771 656.993 76.9771 cv
653.904 76.9771 650.745 77.1982 647.655 77.1982 cv
647.655 75.5469 li
648.617 75.5469 li
653.355 75.5469 654.797 72.9604 654.797 68.5581 cv
654.797 45.3877 li
654.797 42.3062 651.638 40.4346 648.549 40.4346 cv
647.655 40.4346 li
647.655 38.7842 li
650.265 38.7842 652.943 39.0044 655.552 39.0044 cv
657.612 39.0044 659.604 38.7842 661.663 38.7842 cv
692.217 66.356 li
cp
f
750.579 49.5151 mo
748.519 42.7461 742.684 40.3804 734.649 40.3804 cv
722.359 40.3804 716.316 47.645 716.316 56.835 cv
716.316 65.9165 721.741 75.6016 734.855 75.6016 cv
738.151 75.6577 741.584 75.2163 742.477 74.5562 cv
742.477 65.5859 li
742.477 63.3291 739.799 62.7783 737.258 62.7783 cv
736.366 62.7783 li
736.366 61.1279 li
739.799 61.2383 743.232 61.3477 746.666 61.3477 cv
749.755 61.3477 752.777 61.2383 755.866 61.1279 cv
755.866 62.7783 li
754.974 62.7783 li
752.57 62.7783 751.267 63.6597 751.267 65.5859 cv
751.267 73.9502 li
752.845 74.6655 li
752.845 75.6577 li
746.734 77.0332 740.76 78.0229 733.688 78.0229 cv
718.31 78.0229 706.704 70.6484 706.704 57.3857 cv
706.704 44.6182 720.3 37.958 734.169 37.958 cv
738.427 37.958 741.379 38.4541 744.057 38.9492 cv
746.734 39.4448 749.068 39.9395 751.815 39.9951 cv
751.815 42.0303 751.815 46.2134 752.639 49.4058 cv
750.579 49.5151 li
cp
f
344.475 100.044 mo
344.305 100.044 li
336.417 119.283 li
352.278 119.283 li
344.475 100.044 li
cp
332.093 130.162 mo
331.243 132.474 330.225 134.24 330.225 135.466 cv
330.225 137.503 333.788 137.844 336.587 137.844 cv
337.521 137.844 li
337.521 139.883 li
334.127 139.747 330.649 139.612 327.257 139.612 cv
324.203 139.612 321.15 139.747 318.097 139.883 cv
318.097 137.844 li
318.606 137.844 li
321.914 137.844 324.711 136.281 325.985 133.425 cv
339.556 102.22 li
340.658 99.7051 342.185 96.3057 342.694 93.7891 cv
345.407 93.041 348.8 91.6816 350.412 90.8662 cv
350.667 90.7988 350.836 90.7305 351.091 90.7305 cv
351.345 90.7305 351.515 90.7305 351.684 90.9336 cv
351.938 91.4775 352.193 92.0898 352.447 92.6338 cv
368.054 128.189 li
369.072 130.569 370.089 133.086 371.193 135.124 cv
372.211 137.028 373.991 137.844 376.79 137.844 cv
377.299 137.844 li
377.299 139.883 li
373.482 139.747 369.666 139.612 365.595 139.612 cv
361.438 139.612 357.197 139.747 352.871 139.883 cv
352.871 137.844 li
353.805 137.844 li
355.756 137.844 359.063 137.572 359.063 135.873 cv
359.063 134.989 358.3 133.153 357.367 130.978 cv
354.06 123.091 li
334.806 123.091 li
332.093 130.162 li
cp
f
398.673 133.221 mo
398.673 135.939 401.048 136.757 403.761 137.028 cv
407.238 137.232 411.056 137.232 414.956 136.892 cv
418.519 136.552 421.573 134.921 423.099 133.221 cv
424.455 131.727 425.221 129.821 425.729 128.326 cv
428.189 128.326 li
427.256 132.201 426.067 136.009 425.05 139.883 cv
417.587 139.883 410.123 139.612 402.66 139.612 cv
395.195 139.612 387.73 139.883 380.266 139.883 cv
380.266 137.844 li
381.454 137.844 li
384.508 137.844 387.815 137.503 387.815 133.289 cv
387.815 98.3438 li
387.815 94.8086 384.508 94.4697 381.454 94.4697 cv
380.266 94.4697 li
380.266 92.4297 li
384.762 92.4297 389.172 92.7021 393.668 92.7021 cv
397.993 92.7021 402.235 92.4297 406.561 92.4297 cv
406.561 94.4697 li
404.439 94.4697 li
401.217 94.4697 398.673 94.5381 398.673 98.1406 cv
398.673 133.221 li
cp
f
450.495 133.221 mo
450.495 135.939 452.87 136.757 455.584 137.028 cv
459.062 137.232 462.879 137.232 466.78 136.892 cv
470.343 136.552 473.396 134.921 474.923 133.221 cv
476.279 131.727 477.043 129.821 477.552 128.326 cv
480.012 128.326 li
479.078 132.201 477.892 136.009 476.874 139.883 cv
469.409 139.883 461.944 139.612 454.482 139.612 cv
447.018 139.612 439.553 139.883 432.09 139.883 cv
432.09 137.844 li
433.278 137.844 li
436.331 137.844 439.638 137.503 439.638 133.289 cv
439.638 98.3438 li
439.638 94.8086 436.331 94.4697 433.278 94.4697 cv
432.09 94.4697 li
432.09 92.4297 li
436.585 92.4297 440.995 92.7021 445.49 92.7021 cv
449.817 92.7021 454.058 92.4297 458.384 92.4297 cv
458.384 94.4697 li
456.263 94.4697 li
453.04 94.4697 450.495 94.5381 450.495 98.1406 cv
450.495 133.221 li
cp
f
483.148 137.844 mo
484.337 137.844 li
487.392 137.844 490.613 137.503 490.613 133.969 cv
490.613 98.3438 li
490.613 94.8086 487.392 94.4697 484.337 94.4697 cv
483.148 94.4697 li
483.148 92.4297 li
486.457 92.4297 491.546 92.7021 495.702 92.7021 cv
499.944 92.7021 505.032 92.4297 509.019 92.4297 cv
509.019 94.4697 li
507.831 94.4697 li
504.778 94.4697 501.555 94.8086 501.555 98.3438 cv
501.555 133.969 li
501.555 137.503 504.778 137.844 507.831 137.844 cv
509.019 137.844 li
509.019 139.883 li
504.947 139.883 499.858 139.612 495.617 139.612 cv
491.462 139.612 486.457 139.883 483.148 139.883 cv
483.148 137.844 li
cp
f
537.602 100.044 mo
537.432 100.044 li
529.545 119.283 li
545.404 119.283 li
537.602 100.044 li
cp
525.218 130.162 mo
524.37 132.474 523.352 134.24 523.352 135.466 cv
523.352 137.503 526.915 137.844 529.713 137.844 cv
530.646 137.844 li
530.646 139.883 li
527.254 139.747 523.776 139.612 520.384 139.612 cv
517.33 139.612 514.277 139.747 511.224 139.883 cv
511.224 137.844 li
511.732 137.844 li
515.04 137.844 517.84 136.281 519.111 133.425 cv
532.682 102.22 li
533.784 99.7051 535.312 96.3057 535.819 93.7891 cv
538.535 93.041 541.927 91.6816 543.539 90.8662 cv
543.793 90.7988 543.963 90.7305 544.218 90.7305 cv
544.472 90.7305 544.642 90.7305 544.811 90.9336 cv
545.064 91.4775 545.319 92.0898 545.573 92.6338 cv
561.181 128.189 li
562.198 130.569 563.216 133.086 564.319 135.124 cv
565.337 137.028 567.118 137.844 569.916 137.844 cv
570.425 137.844 li
570.425 139.883 li
566.608 139.747 562.792 139.612 558.722 139.612 cv
554.563 139.612 550.323 139.747 545.999 139.883 cv
545.999 137.844 li
546.932 137.844 li
548.882 137.844 552.189 137.572 552.189 135.873 cv
552.189 134.989 551.426 133.153 550.494 130.978 cv
547.187 123.091 li
527.933 123.091 li
525.218 130.162 li
cp
f
627.677 126.491 mo
627.846 126.354 li
627.846 100.859 li
627.846 95.2852 623.011 94.4697 620.467 94.4697 cv
618.601 94.4697 li
618.601 92.4297 li
622.588 92.4297 626.488 92.7021 630.476 92.7021 cv
633.952 92.7021 637.43 92.4297 640.907 92.4297 cv
640.907 94.4697 li
639.635 94.4697 li
636.072 94.4697 632.087 95.0137 632.087 103.104 cv
632.087 134.037 li
632.087 136.416 632.172 138.796 632.595 140.903 cv
629.373 140.903 li
585.692 101.88 li
585.692 129.89 li
585.692 135.805 587.134 137.844 593.664 137.844 cv
595.106 137.844 li
595.106 139.883 li
591.459 139.883 587.812 139.612 584.165 139.612 cv
580.348 139.612 576.448 139.883 572.63 139.883 cv
572.63 137.844 li
573.816 137.844 li
579.67 137.844 581.451 134.648 581.451 129.21 cv
581.451 100.589 li
581.451 96.7813 577.55 94.4697 573.733 94.4697 cv
572.63 94.4697 li
572.63 92.4297 li
575.853 92.4297 579.161 92.7021 582.385 92.7021 cv
584.929 92.7021 587.388 92.4297 589.933 92.4297 cv
627.677 126.491 li
cp
f
697.65 106.435 mo
695.275 99.8398 691.373 94.4014 678.651 94.4014 cv
664.741 94.4014 657.446 103.171 657.446 115.068 cv
657.446 126.423 664.656 137.911 680.686 137.911 cv
689.762 137.911 695.784 133.356 697.99 126.559 cv
700.364 126.83 li
699.261 130.501 698.667 134.172 698.244 137.844 cv
693.324 139.544 686.624 140.903 678.821 140.903 cv
659.736 140.903 645.572 132.541 645.572 115.478 cv
645.572 100.247 660.924 91.4092 678.396 91.4092 cv
688.32 91.4092 691.542 93.8574 699.516 94.8086 cv
699.432 98.5488 699.601 102.356 700.195 106.163 cv
697.65 106.435 li
cp
f
704.943 137.844 mo
706.131 137.844 li
709.185 137.844 712.407 137.503 712.407 133.969 cv
712.407 98.3438 li
712.407 94.8086 709.185 94.4697 706.131 94.4697 cv
704.943 94.4697 li
704.943 92.4297 li
710.117 92.4297 718.938 92.7021 726.063 92.7021 cv
733.188 92.7021 742.008 92.4297 747.775 92.4297 cv
747.606 95.3525 747.691 99.8398 747.946 102.831 cv
745.401 103.376 li
744.978 98.9561 743.96 95.4209 735.053 95.4209 cv
723.264 95.4209 li
723.264 113.233 li
733.357 113.233 li
738.446 113.233 739.549 110.922 740.059 107.251 cv
742.603 107.251 li
742.434 109.902 742.348 112.554 742.348 115.205 cv
742.348 117.789 742.434 120.372 742.603 122.955 cv
740.059 123.363 li
739.549 119.283 739.294 116.633 733.442 116.633 cv
723.264 116.633 li
723.264 132.474 li
723.264 136.892 728.185 136.892 733.612 136.892 cv
743.789 136.892 748.284 136.349 750.829 128.598 cv
753.205 129.073 li
752.102 132.678 751.084 136.281 750.32 139.883 cv
744.893 139.883 735.138 139.612 727.505 139.612 cv
719.872 139.612 709.778 139.883 704.943 139.883 cv
704.943 137.844 li
cp
f
243.217 153.541 mo
242.401 153.617 241.584 153.693 240.769 153.771 cv
238.275 153.157 235.78 152.543 233.286 151.929 cv
232.13 152.108 230.973 152.286 229.817 152.467 cv
226.024 153.245 221.33 153.781 217.301 152.927 cv
208.379 151.031 202.027 147.553 196.01 142.567 cv
193.141 140.188 190.102 137.308 188.596 133.433 cv
188.033 131.984 188.063 130.65 187.712 128.752 cv
186.938 124.582 185.994 120.102 184.923 116.166 cv
184.56 114.657 184.197 113.148 183.835 111.64 cv
182.973 110.668 182.111 109.695 181.25 108.724 cv
179.527 109.465 177.803 110.207 176.08 110.949 cv
173.791 111.895 171.5 112.842 169.21 113.788 cv
164.585 117.217 159.958 120.644 155.333 124.072 cv
154.018 124.813 152.704 125.556 151.389 126.297 cv
149.71 126.553 148.032 126.81 146.355 127.065 cv
144.382 128.752 142.41 130.44 140.437 132.13 cv
135.985 135.678 131.284 139.075 126.289 141.952 cv
123.719 143.433 121.032 144.797 118.263 146.02 cv
116.812 146.531 115.359 147.043 113.908 147.554 cv
113.387 148.22 112.865 148.884 112.344 149.55 cv
110.916 150.828 109.487 152.108 108.059 153.387 cv
101.958 158.237 94.6772 161.672 87.2437 164.975 cv
85.0327 165.957 82.7539 166.803 80.3926 167.562 cv
101.634 174.209 125.884 177.981 151.637 177.981 cv
196.927 177.981 237.572 166.325 265.357 147.851 cv
261.132 149.343 256.721 150.612 252.332 151.852 cv
249.466 152.661 246.466 152.928 243.217 153.541 cv
cp
1 0.65 0 0.3 cmyk
f
22.6245 130.058 mo
22.4121 124.73 20.3315 116.765 21.6719 111.793 cv
23.0923 106.522 26.3564 102.364 29.7656 99.2842 cv
37.9556 91.8838 47.2837 85.4297 57.5186 80.3291 cv
61.0557 78.5898 64.5928 76.8496 68.1304 75.1104 cv
69.0825 74.062 70.0342 73.0122 70.9873 71.9639 cv
73.4326 69.7935 76.0122 67.6426 78.6733 65.7476 cv
85.3184 61.0181 92.3896 56.9287 99.2837 52.396 cv
102.48 50.5537 105.679 48.7114 108.875 46.8691 cv
117.793 40.9321 127.307 35.0635 137.037 30.2168 cv
146.24 25.1523 155.448 20.0864 164.653 15.0225 cv
168.279 13.4102 171.908 11.7993 175.536 10.188 cv
180.795 7.85938 186.057 5.53174 191.318 3.2041 cv
192.246 3.35742 193.176 3.51074 194.105 3.66406 cv
194.155 3.63232 194.206 3.6001 194.255 3.56885 cv
180.735 1.24951 166.436 0 151.637 0 cv
67.8901 0 0 39.8423 0 88.9902 cv
0 107.624 9.76514 124.917 26.4473 139.211 cv
27.4629 137.593 28.4785 135.975 29.4937 134.355 cv
28.7505 131.446 25.7495 130.141 22.6245 130.058 cv
cp
f
243.83 24.6152 mo
243.692 25.5059 243.134 25.9297 242.945 26.5332 cv
242.968 28.4512 242.991 30.3706 243.013 32.2891 cv
242.593 35.0308 242.395 38.1069 241.857 40.6538 cv
241.698 41.7021 241.54 42.7515 241.381 43.7998 cv
240.833 45.2915 239.706 46.6699 238.864 47.8677 cv
238.044 49.0317 237.897 50.4224 236.415 50.8608 cv
235.697 51.0732 235.048 50.7905 234.51 50.6299 cv
231.452 49.7139 231.8 46.8872 230.973 43.4932 cv
230.678 42.6494 230.384 41.8047 230.089 40.9604 cv
229.936 40.3193 230.006 39.6138 229.613 39.2725 cv
227.392 37.3408 222.913 35.3384 218.934 36.0493 cv
217.936 36.4585 216.938 36.8682 215.941 37.2769 cv
213.274 37.7964 210.596 37.4634 207.981 38.1211 cv
203.398 39.2754 199.767 41.752 196.078 43.8774 cv
192.706 45.8198 188.544 47.1582 185.331 49.3257 cv
182.905 51.1665 180.479 53.0088 178.053 54.8511 cv
176.547 56.1621 175.219 57.7412 173.563 58.918 cv
171.615 60.3032 169.415 61.5234 167.102 62.4478 cv
165.718 62.8828 164.335 63.3184 162.952 63.7529 cv
162.362 64.5205 161.772 65.2881 161.184 66.0557 cv
159.709 68.1167 157.188 70.8037 155.265 72.3481 cv
152.115 74.2402 148.962 76.1328 145.811 78.0269 cv
143.884 78.8447 141.956 79.6641 140.029 80.4834 cv
139.599 81.0195 139.167 81.5566 138.736 82.0938 cv
137.761 83.0146 136.787 83.9365 135.812 84.8574 cv
131.332 88.585 126.576 92.084 121.799 95.4463 cv
116.729 99.0166 111.769 102.634 106.766 106.19 cv
104.726 107.624 102.685 109.056 100.644 110.488 cv
99.5791 112.329 98.5127 114.172 97.4473 116.014 cv
95.9111 118.284 93.4521 119.215 92.5503 122.307 cv
95.4814 123.452 101.125 121.697 104.317 120.695 cv
108.344 119.432 112.081 118.373 115.609 116.628 cv
120.438 113.508 125.269 110.386 130.098 107.265 cv
134.905 104.222 139.712 101.177 144.518 98.1328 cv
148.889 95.2324 153.525 92.2041 158.258 89.8447 cv
160.435 88.7715 162.613 87.6963 164.789 86.6221 cv
166.059 86.1621 167.328 85.7012 168.598 85.2402 cv
169.482 84.2686 170.366 83.2969 171.25 82.3242 cv
173.404 80.4053 175.559 78.4873 177.712 76.5684 cv
184.508 71.1587 192.285 67.3164 201.248 64.2896 cv
204.485 63.1978 207.814 62.835 211.383 62.064 cv
214.5 61.3916 217.853 61.6938 221.314 61.0674 cv
223.083 61.0161 224.852 60.9644 226.62 60.9131 cv
228.791 61.3149 230.594 61.5518 232.13 62.6016 cv
234.873 64.4775 238.178 70.936 239.272 74.8809 cv
239.861 76.9019 240.451 78.9229 241.041 80.9434 cv
240.769 81.8135 240.497 82.6826 240.224 83.5518 cv
238.92 88.1904 236.335 94.0518 237.572 99.5908 cv
239.441 107.962 245.016 111.383 252.332 113.635 cv
264.63 117.421 277.184 111.168 285.934 106.805 cv
288.079 105.735 290.093 104.587 292.057 103.274 cv
292.782 102.764 293.507 102.251 294.233 101.74 cv
294.924 101.547 296.361 102.426 296.682 102.814 cv
297.389 103.667 297.396 108.44 297.634 110.027 cv
297.714 110.88 297.796 111.733 297.876 112.585 cv
301.389 105.07 303.274 97.1602 303.274 88.9902 cv
303.274 60.0762 279.771 34.3867 243.37 18.1318 cv
243.885 20.1587 244.133 22.6533 243.83 24.6152 cv
cp
f
297.876 112.585 mo
297.796 111.733 297.714 110.88 297.634 110.027 cv
297.396 108.44 297.389 103.667 296.682 102.814 cv
296.361 102.426 294.924 101.547 294.233 101.74 cv
293.507 102.251 292.782 102.764 292.057 103.274 cv
290.093 104.587 288.079 105.735 285.934 106.805 cv
277.184 111.168 264.63 117.421 252.332 113.635 cv
245.016 111.383 239.441 107.962 237.572 99.5908 cv
236.335 94.0518 238.92 88.1904 240.224 83.5518 cv
240.497 82.6826 240.769 81.8135 241.041 80.9434 cv
240.451 78.9229 239.861 76.9019 239.272 74.8809 cv
238.178 70.936 234.873 64.4775 232.13 62.6016 cv
230.594 61.5518 228.791 61.3149 226.62 60.9131 cv
224.852 60.9644 223.083 61.0161 221.314 61.0674 cv
217.853 61.6938 214.5 61.3916 211.383 62.064 cv
207.814 62.835 204.485 63.1978 201.248 64.2896 cv
192.285 67.3164 184.508 71.1587 177.712 76.5684 cv
175.559 78.4873 173.404 80.4053 171.25 82.3242 cv
170.366 83.2969 169.482 84.2686 168.598 85.2402 cv
167.328 85.7012 166.059 86.1621 164.789 86.6221 cv
162.613 87.6963 160.435 88.7715 158.258 89.8447 cv
153.525 92.2041 148.889 95.2324 144.518 98.1328 cv
139.712 101.177 134.905 104.222 130.098 107.265 cv
125.269 110.386 120.438 113.508 115.609 116.628 cv
112.081 118.373 108.344 119.432 104.317 120.695 cv
101.125 121.697 95.4814 123.452 92.5503 122.307 cv
93.4521 119.215 95.9111 118.284 97.4473 116.014 cv
98.5127 114.172 99.5791 112.329 100.644 110.488 cv
102.685 109.056 104.726 107.624 106.766 106.19 cv
111.769 102.634 116.729 99.0166 121.799 95.4463 cv
126.576 92.084 131.332 88.585 135.812 84.8574 cv
136.787 83.9365 137.761 83.0146 138.736 82.0938 cv
139.167 81.5566 139.599 81.0195 140.029 80.4834 cv
141.956 79.6641 143.884 78.8447 145.811 78.0269 cv
148.962 76.1328 152.115 74.2402 155.265 72.3481 cv
157.188 70.8037 159.709 68.1167 161.184 66.0557 cv
161.772 65.2881 162.362 64.5205 162.952 63.7529 cv
164.335 63.3184 165.718 62.8828 167.102 62.4478 cv
169.415 61.5234 171.615 60.3032 173.563 58.918 cv
175.219 57.7412 176.547 56.1621 178.053 54.8511 cv
180.479 53.0088 182.905 51.1665 185.331 49.3257 cv
188.544 47.1582 192.706 45.8198 196.078 43.8774 cv
199.767 41.752 203.398 39.2754 207.981 38.1211 cv
210.596 37.4634 213.274 37.7964 215.941 37.2769 cv
216.938 36.8682 217.936 36.4585 218.934 36.0493 cv
222.913 35.3384 227.392 37.3408 229.613 39.2725 cv
230.006 39.6138 229.936 40.3193 230.089 40.9604 cv
230.384 41.8047 230.678 42.6494 230.973 43.4932 cv
231.8 46.8872 231.452 49.7139 234.51 50.6299 cv
235.048 50.7905 235.697 51.0732 236.415 50.8608 cv
237.897 50.4224 238.044 49.0317 238.864 47.8677 cv
239.706 46.6699 240.833 45.2915 241.381 43.7998 cv
241.54 42.7515 241.698 41.7021 241.857 40.6538 cv
242.395 38.1069 242.593 35.0308 243.013 32.2891 cv
242.991 30.3706 242.968 28.4512 242.945 26.5332 cv
243.134 25.9297 243.692 25.5059 243.83 24.6152 cv
244.133 22.6533 243.885 20.1587 243.37 18.1318 cv
228.832 11.6387 212.236 6.65381 194.255 3.56885 cv
194.206 3.6001 194.155 3.63232 194.105 3.66406 cv
193.176 3.51074 192.246 3.35742 191.318 3.2041 cv
186.057 5.53174 180.795 7.85938 175.536 10.188 cv
171.908 11.7993 168.279 13.4102 164.653 15.0225 cv
155.448 20.0864 146.24 25.1523 137.037 30.2168 cv
127.307 35.0635 117.793 40.9321 108.875 46.8691 cv
105.679 48.7114 102.48 50.5537 99.2837 52.396 cv
92.3896 56.9287 85.3184 61.0181 78.6733 65.7476 cv
76.0122 67.6426 73.4326 69.7935 70.9873 71.9639 cv
70.0342 73.0122 69.0825 74.062 68.1304 75.1104 cv
64.5928 76.8496 61.0557 78.5898 57.5186 80.3291 cv
47.2837 85.4297 37.9556 91.8838 29.7656 99.2842 cv
26.3564 102.364 23.0923 106.522 21.6719 111.793 cv
20.3315 116.765 22.4121 124.73 22.6245 130.058 cv
25.7495 130.141 28.7505 131.446 29.4937 134.355 cv
28.4785 135.975 27.4629 137.593 26.4473 139.211 cv
40.2344 151.026 58.749 160.788 80.3926 167.562 cv
82.7539 166.803 85.0327 165.957 87.2437 164.975 cv
94.6772 161.672 101.958 158.237 108.059 153.387 cv
109.487 152.108 110.916 150.828 112.344 149.55 cv
112.865 148.884 113.387 148.22 113.908 147.554 cv
115.359 147.043 116.812 146.531 118.263 146.02 cv
121.032 144.797 123.719 143.433 126.289 141.952 cv
131.284 139.075 135.985 135.678 140.437 132.13 cv
142.41 130.44 144.382 128.752 146.355 127.065 cv
148.032 126.81 149.71 126.553 151.389 126.297 cv
152.704 125.556 154.018 124.813 155.333 124.072 cv
159.958 120.644 164.585 117.217 169.21 113.788 cv
171.5 112.842 173.791 111.895 176.08 110.949 cv
177.803 110.207 179.527 109.465 181.25 108.724 cv
182.111 109.695 182.973 110.668 183.835 111.64 cv
184.197 113.148 184.56 114.657 184.923 116.166 cv
185.994 120.102 186.938 124.582 187.712 128.752 cv
188.063 130.65 188.033 131.984 188.596 133.433 cv
190.102 137.308 193.141 140.188 196.01 142.567 cv
202.027 147.553 208.379 151.031 217.301 152.927 cv
221.33 153.781 226.024 153.245 229.817 152.467 cv
230.973 152.286 232.13 152.108 233.286 151.929 cv
235.78 152.543 238.275 153.157 240.769 153.771 cv
241.584 153.693 242.401 153.617 243.217 153.541 cv
246.466 152.928 249.466 152.661 252.332 151.852 cv
256.721 150.612 261.132 149.343 265.357 147.851 cv
280.411 137.842 291.685 125.831 297.876 112.585 cv
cp
0 0 0 0 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.2%%For: (Matt Newell) ()%%Title: (mag_logo.eps)%%CreationDate: 9/3/08 9:48 AM%AI9_DataStream%Gb"-6CNCN<E@CSiqELK'MU6TBgj22l$:b($JCeR=;J>,m3,U,m%OLWP+;GlV[(=#$/"]hlh$4Gl@ukbhQA4TkF`hh,<k^BU7mFT[%nD3t[hS&sF`J=K^-\kb`+'ae\<6QNHYl*]Ts3J;a^AW6*-CmS=FV^K#LQq+m:W^$<r[aH#gI%;LhL'PApALmrI/NKrmC1so5MU__%q!Ciea1o99J,#qn^MA=EICQe8rT4X6O3[bKrqcKImG$q;+7ENc3n,qf0^F19n_Lh3DgqE9h/D/!r5g,W!+>hBm-:4XD1/eZi-,8&%_tuC%hgP+i(Tl#mhu(Atqt%;dL\trcrTgqb5./eI&_K"Oj$3M>5E5h]d"=>OnR1'8rp\rTSH%qW5QBEe_3K%#rlai4p;m9aRaC`f%s7k^1hnAp\e&U(4hL0YK5JNrEs6B"-+)bM9HAhCT%EslOo+T1%\RkY;RHaF3=3gRsR-r]->C3\?JT(S\md6WrdUqmk]D%p]I/A8Z%JR?':6W84.n^H+Yrcaij>hpQ+8'kUlGPh*o5JM^BWI6OR.R!K$+23#Ib923+qXud?Mo!U1s&+JV^&If=\"DCNJ%5Fe55-F[@e``9%@;]EOjm>R,;g?.)s7l<dY<MjlNqQH]q-]3TD+5cJ&eEZ_K1e1ZYH6"J@"$u-=a[-DNhIEU7!d0rqL?oDnE1nNrU/M=T=hJLSb_9f%JUYendR+!4a*6G5FjBDOkWei&B4^jfQ2f=CgD#&3o_(Ft7mjrL5P9Ja3W#_XgBat=IrkO,#:n6ll:2X""l;0P])D+[qO@JEIqasn%pIG&u]`7ZN5.&mXq-'E6cgWULf>"ioY5RVR5CWCqO8n_K[i^nXT7?Ik2fB5AGl?n$D/6e4s38#[*>h8T#C<+1Dr1HW/]#_=^\d%m%p\+?^O+94)48f"8s6K'A:[MQpo\[C^mbOeM%sR[=)jmL`LPq5NIJ`oZY<I?Dea^n6dU=mJU!WdonW$u7"7La=Sn<<G->p&:;qiif%\@8irVr,l#pd=KJq"j^Xh=!PAro<J)^"IbKcJS:hoX?3\XR5P=Du9-N/,qd7/cTkcRh*!s^:ijb3'_r_qW"JtDf4H]rKhFe]tJd&%\')7qD6.WB2M>DMs3o`W%t>Q'WK>a#^H)5Xl]6P.YA77;hnFI;:"pi$TDLHo\GIL)n&*blJ,REs38@<E^W)RH56?g_?b_*hnUPTG%'$*kdhaYq(P!h"k2#b&u`f]o,H?B`mColXUrUBQrs7lG[GE(DWjR?Xn'`RgqYJ5#5FnfMM^V9Y]fnD=nmg^/k/H<!QFLf-"^:M%k%5$hT$T3p49Eh0D_FhA49rn:Z4CNFWHF`hhPFhG;q3kq[rjXOW6X*>A^r0=n"=6B)Mo'5f:np#G"H%&mLbAs"(dq-0#Qi>E=g.QM"%5$f6_O2p;"nbcLMjd;+n(m!Y>O7$\Bk2Q6slJhBoG]@_CIShc@7D;;/nKM65$[6#4b]8/\IW^*bIQYA)5<l@7jZK05o6;>%rOG#!%kGDS;X*Rp0oqJ&0>"d*teQ>33eQ#gJ\LptFZ5h%V3A7e)V<!e3/>3&n[)M+lI$HAV0jj#5>]\"IV]9cAe$@.TRrk4(dUbJ:MfbP*%.Oh9[@LC4)QY\EM]T-(`1*5IE4HD@cQt)".L?PCj2O\S*Y/4a0L5U!lC+)ec9Hf/;Ubrs)0`Kd5q+H50(]N2k?P]8^o$I^2^%9eo%GO;QgV)u6rGODI]0"^2=CN?7mc8oI=m?PAl7se[jD7.>pRr#IJHL%Z?Ahe-G9j8!H@G6C&p<=qP2DEVV2RWoBJ%(f_O+)NIZ/L@5%0djh&%GEf=Y?0)/D\o0X8V=B6k*?+^[Cs(L<#:ML8)gS][i\u7IWN$qbM.caj'Cus$dps*UFWLM[(5bQ<S#dMr_n$Eo97eFIFln*%bX:"DUTaBt>^bJTor2^erMQQ#f+#J1ps2T>s+baL[bspt,WnD:3meg::*V`ZV`2daE(6!H&fi,WNUS(H+j)%:LSta1+/D.0'-SJc%5_t41!AOXr"9]$%&eLm/QB3d$B`d8sj9Z+A"VN7,;a@;(K%)7p`<)JCO_t>u>or6s6Q-.nL+](%/&!Y33mtDm)CO.I?<+0a>^<j-%FN&\\peTPQr/&VQIkAZhp9je(m"7P&k=%I#`,6cQ>\WBD]2q"423,GeIs/!dH`r@Vf:p#$T6+A1\sCfp)QkGag#]b4HMt0d6-oH(%5HI4?lm?Y&[-:H9"?@-kb^omCLmKAlJnPIB-&Im3FVfU,`Q>MAq%Q]SmEtS1aa--Beh:11]MP&gQ)="JoOWfR%g8HfGuAs;0/Wu,%^'s(M7EciFa]ES3fd#N)W;*,9pp)(&c_TD^G`$?0)u/Y?i_7iiIRHR=TpFbHOc`4i-6YIGk*Qo`+![eITL=**,XI]KbFh1INCkLq%Q(V62C3bBq,q,-T`GAUF/JId#\272!PYFt56/f2,51c`VK&R*:-RbU[IZaa>.OZ^=TSAUR$E>L&USs2*W0*6<$<enCV4a6>D@5)H%l)1>N>/\a&r*iK$8Ppd6'p[='oi9FB;.jIBQ1S,*>X`i_m?R<FemMX9'eT,g+[rj<J0leX/8MSlc\b3HF^!1-=hsBmm4p*!?.MsY%GE=dSRBr*SOZ4M0>*M41'Pac<Wkpj=SR(9HFP]INdTZ%o=+"$@2-\<AFl-b2I`W3H598-5V\Y"_63>7B,]f&D66Zeo1Ebh5jZ9%P%`M4jcN%&r&8@!O;[ZM"TCmJe-\:qDK@B7Sa6"kVhS"oG2^+]>c\6.B1,F]m^AL?Vq0PmBG]A]9^1jq"[[ahauYi%tnHd1Yq,IC_f%a'F5E2su6sp)CHu/;"O)bW'@Y@JgAs%iaj?gqVM$rdq(5)KfYuc=GS\BNeVGX7>L-:Yn&"9I?@=Kr<[MQ3W@2pR$5LE.%u?XVuN2%8e'_-$cut!oHXNfT3)d'RaRV1aW4VH9@7@ZmQB_W0GC"bp5U/*p5nWDoHbPV3,90iFF.pV2)hc@.^'&apU@&fSUUD2h>?)Wq"%RF%rmlBgC*S--]BEoD?!bB#3grL(Q`uC.B$o]dm%WP&=^Jrt3c:DJ-1%AdL0<)N;:mF4D-gJbJ;k]Ib_nMU06]"on)@<%q.6_jV)m?!%YWVqh2Lp?`rcD9\NVDhZ%p=n<7iV!PD#Cip@fG&e&O0[14`OW9(AVOQgc^ugH%@Nb,16+ApKW(-+uL8j-S.ccD+AD,l5+4*N?lG3%)KI&7[?6?)7PZS8l*tW2So(:A2j+dmBuu@Qe4+1*)TfO+V!#<DDVH#<D_rn$g6<P9Wf:%b/<+=K2WAl8<(u&&R;YJF2WC#AOfOJo%>r8:"fneO.,6P@d6f3]/CrA%e,$CD6ERC`IAYYjKD$)\FRf(UTC2Drg2_nSV\\2ZepTfq=l\>;FO^m:iEbses2_nYX\\;`fqm)@Q%l\<EfM+55,p"8JTDKNTNHJ`h#@jCtSD)+dp#-K\7d$R189VO@UESd)&Yq_<?HJOf#gDGfdN$U@dP8g9r9rP[;SEI3:o6&N2Cu\'8%BriaA(6oi>Wf:Rq1tHg&Ykkp;Og_MOhcO*!/1rk^<u]>pBWU[.@J4i-95TkhIH-<ln]9L1ASjR$@VO'XZD%#8'6nA(WZM+%$2ldt%2pr:Xru)L#+c\uZMh6]!p1@Ra_.)p+lS2r0`TbZt"f_I(i@`GbTeg\;f\^l;3oRldf>%(PCYdrt/E0OYo&N=/j&k\P*bt2oCDj3<%T5bHOp+LdkTK>P7l,!YR(V>-0*TFXo7t'+?SsJQ<:OCgEnf7=::O?9:UH\'Z:Wmh/V`jE]H&h`3l:d9Y(TS!kdJeIF>$Y@]SoBMH%T-\2'VaRZ5Q*ciUU=SL">0A?llZ4ASjcl_:\WYNa9%8/hdNV7tbD%+uoFK(n&'IHRM.k^&e9(KWSa59dlZi80pm9//Y,_d[eZ>(#%.b@&5UD#kMroP93[]BiCnRL8JMi&h,&=f>d2"+cFabl.?aVq>DI^T+<5>P8>a(n+s:IV4P](Vk'L22(5_1U@B*UH3(CYtU%m"Oe7%%kD9g=!&a,k!cB#,$liSAXsV,C3_8o["qf,93J/]]NSXa3\B@Anl"%Q0hsBtpmtLOoBaXT-=bV%.B`WuKV]e$OYJcgJS*uHacPS[%9l*PPU^S:"gPYh^'jfEs)":PQ98bY#F'gH_a2Nid!ktn`Za:!J5PMS&Ict9eW&TFX_Mo4N?RtE^g<r,k@uIU]HQ#&d1\LF=[r60q%(U$%Ero"s5>3=SjQ2_K;s&U,Zha?sa]"E\fHIS.EQS;!lHID?s-L"B'>$f&k4mGV^9:2MF4_a^SP;L:,?;LA4BAiAfe*-naa9CJs%HI`pAP#a(]&grENH[6mhq<n3jDa+9=TjOH'c+`D(.i1lS,\gnN=cp3HZ\mt8UUfs$'<fhT%LP'HR0<]jFP4ulJV^f/[cc,$7sVeg%ppr,%P.rJ.$#KXh<jG^Ep'_me[Yj*]H<;LE_k,OhCBmsEQLTiQ/KCLS3;k$GY/s]:3nN\LYG5EjHF<QN."lY\'MGfL+&`./H3M$W%?AYfgnQW/j=68aQY7&%(H<ofY`RjdWDX+Cqp.=O:P+SB``].l'-'(!%S2<-?N<aepO*BON3pe$XXP`Qn0..b3-_9f=q;R`(2uGi7%)uCKl6P@E05W6UafatMt%IPFU=##@rh7'[ocZNlXdI18JSnpC?@VOe\-(F.([gm<mhB0$R4Hjm(IR3b/k`)!3K[#+aK!\i]1a0[_%Oq0r&aSl>Ig0S4gi\cmKK9X/'LtVn*5fET)N3S9Uq#PF;i!I=:XtWJc+E&Cj!;ljW"Rl[0'$Gk=P39n:Lg++nV"Zb;%,r2@2a#(q%8*1j1@u`)1&E4nL7t?e./Vm4-Bp1oM!_e=#$8<6'/\kVI]`<[F@b`bmcSi-LfduQ(g#'*q-.r6$1Yf,m+bGk$kRu<aY%_g>ifOW3%^LbZW84paPW6%,lk"p"<KkAAFL>8L`'phO!08=R/afq^9U@XI*\'CNPh(^?3h+OG'Psi+,\j.l:!HM^dHHB8V:u.G(N&:a3CO+$(%6U6pu-"@Bm-5Vh/a`P!=_tV,P3K5@MGqBYDIenB;Pl.1CqI.SBK1>WkN;l\0BOJhR5m.'u0*u9(13Th:]sFf'P/_;':>0bTXaF0m%M:eQC"m50?]cWTo[*;''Of#MPA-.lV8M*Pe9rV?^\m7lY9AR&+X\5bhV8:"o2PtA'\erk<`k2GTeu!>'6As:o4CCcQY\K%2bL=F/%ne%0f;GLVO[\&[)KT/Nl&@XAE5n2C5jG;"dTd*Go-K^9_$"IkuOI`^O>3D9I6O'W`VUH3$O;nbP3^aZ8OQY5Ldhd>I\0UJbPsdY^%aUF?L,O+5R2'pj.Tf`D<aH2(\YAr@(''GH9fd1?I=QK#_IRk$>P/JaRAf5X.#f.c0VItmNV1F_'ZH"4^7M98lP>$#=`!RZR#g"UW%*#d'TP8lC#W0(=@6=*(<"d@4[a%#W9,QUW&cm02T16)UZFK^O8P+:++7Hog<_EogHHfa?*noLs8jf@n$&<Sj[jmkr[>N?4%^`,it%&VX1<)2OkVlcVPd0D.BkeV>s[eDVmpPsN+(,do>%4-\&9b3%$WSh-LH5=PIkXp&Ci0qmB@6To9T5s*5p0r4/?;Ra*!XYg:L.>o*D%eg?[8VE.m\B=gdFXIsEA@H366<sAb"2mIHLMjRYYSQ.3mChm2+g`cq=1qBR4L!20#MnNY]`BS#,bE5e<;3+TO>tEW`%%;\6$bEj_%O9;f<;a0n&\\ZlMnRoeiD#ME?nDYh6e*Mk=/3?2EUEaOI!c"%sp5q'eP9"JR2GlA.8CG4*b,1(aQp!ql6A'CuchpNaUjJPlB=!_g%#']!h[8[5@rZ:Z66_Q4/2XbSYJ9NfhZXh6h4Ik1>qf>m+1LLC-khmQ3a:ru#lWIo<:%.X-NTl??]u69"`#3nF*kXRMifYCtpV'[(%EF\q<qtI;_hL9P@*J;(0[\,:AIU=l/^1@)R5\/@(,Fk@UiV/IS6__E[(%jP3rV,RGjXQ%u>Z^r.*KDJ,0.EK";EV^iG^`6Sr0$(8%Eam"/A>d2[\5ltOjEWrNqNC%;--u/fd,C<RcbJ0rcd0Z`HJj*cLC]X#]rtu,1U$i.%f\'/__4ldJ$i.Q?a=mjAFI7*Yk\]IpaPou%s!+joG<D,9q>!4VL<mJ\\@hYUilU&PJ+k62qg7j6]TCb)90W'9I-gl^q:K?rHX'JBh"5,hp<`0"o^'-QaW,0?JUURmp>#;TDmo@#%\DUcn:<3H$a"u@SPiJ8$j8+=Hr+C0I]lO%c_@F=N)pFWYs&1uVS:K4H9J^\AZd*BWS8/5Ol+koV%!J(WWS%Z/mH0jTYZV4Ik#@Wi%'9)LtY17hCp7&#F?WF3f7nNVF+j=EZ4U/nYB[7i[%bYsDpt.+h()orLEYud@EO'9<+Y->!Q3CL=jT=Qc2#-^A=c_`m6o=k(#IRqj%o/U!),_l"*p#g*I>Zcu^7DETQQtm&.boE<\d6Jt^[7:Yn^7km;1`%$g$$RA'lS38sU<(f860/f&>L8C03W,>_Di\R1\n&MM)BH0h%btF?)EZN38#7A[\d,L;:lBK]e<7(J@3Dc&oFYD)WFl]3$$J`=hi*?iN2/&bj:d)X0<51isY7Gd2*oXU<c'U$uqdtO\9)\^N&j)3f%:PjfcO[o;5W/,f';l&A/ES.VPY/nMd1#@pF&0l`C/\$EBG>07s9e)E];GAL/LkN]887]Y,-If?E&J>2Bi2"bYHUu,G.lq:"@\2e8%@3d@LJ]Tt['7!'!6&+;LaUk0Y.C`]_L<tp<:,`_oB>UoD3[WjkCoIZ:7'A!E>*V/UksV=B7&5s-L$?Z"-*`tU,.&V7<_?811(k9J%.1<&CFK.+CPmqSuWJfqUS&cDKihBC!CUR!gCSj"\if$k"EnKs7RO0lEFR=%Xl13:<<YnZ2jaf4#pJ7>CEV?K(5J+Wnf,6dpnY-8`%\?^=E01$aWP@et1hIb)3Q/%t.j?QSjnE_M1;.&[&?gME4lt?@clt9ZFcsId>?Q@F"*7/%4csId>hjZY&LMQ7)=hE[Xi:81AqSDJp%dEXCiI0lNpiq7q_G5`+<r?Zjf9DJ,iUr33>WT$Pll'FN\06s@#njr4Fqg@Q!-'.])N9K"YdP$;\^(bm=Bhuu`%%>N5e@\n=cQjFT%+WaGCnGAlF?OFKZbg1e)68/B/6=I\`(Sq!"iR?[OM"cg_TtaQ_r%hdl_J[^dR#]bG,;R961&?G<j&$Z2#oKb%Nosa<Go+YCgdR[S%rKlbZMt'2nnKa%g&<"R'(2p+7.u#i10US%6"isf;[rA>'F1s:!Lk$_jj>:jhTl;VJ/O3&>Y[#[a:;mKbGQ8a+5g`o+NtJ%;"Sa[%%L!LEo1Bie:B3-<nY4[GK'9+&2,5(U(@q(O8_32eP#fk*:A(@JI-rBXuEDJ#\qe?fp;Tm4J]2b]9b1'UcRM;c5V,Q&i:"FGY<Y"Y?%)C-fT'rtEZTODs`9=1c_'kBI&"^*F49EgH1iY\SI9H1K*0;[=DU+GV1H*V1snuaX,=qOnuI0FgmE>Mr@XcbcH\SFWX:j"-s2_9Tq%>N`l5_^YdhHU[Jl7<,.L/t6DfZEm*4I#4q,>;g*J`baIum2L\3@p'[0`]/m?ETHkJOY<ajarNE1m-q(.d.79,Y3*7@7:XEJ&`hQ$%/^kcl=O;uN2K!37BFq+M:0C#FbDmW`-ql@f;n2Th;3%DKOc-^S0')Gg1g2BlNiL\g(NmK%i_$$?6Hd!5,<[C=S/3dKSsZG\/be\$%e-")W>5%o`UEVA!q"p3L#P+$HCVU`u3(YX:7qNZg3/@a.3FnBr%q$7b?Wi,I=,8Sk8$7dUY)J.<oRg2c(9C$-^`b5g!A"+fQ185s%5#arXet95M4NZt7VL[dU[X^lX?GID^W&<LIp4+O&?_6P5;5:qt8?5"n/W0COd?q]/jmo]3J*1fsfpKO%\\)b&?PA;<DiQ"?XLha3%q6`[WO*gi(7feG<=GJI]Rm&L<n)p5pHiM#=9^3JI3JM8$SAM)b0^TpuZp'4Y5(on4LLl6+>\cV"jURPX+2Tj5MnH,d@2dF"_J;,a%Bi[Sa<VE:^f4QrfW1BL%NY_7p92_`-%RHr\`m!D6M#+/D)(L]&e5W^HB:hKA97qihKST%K]45hWs*Lk65M5O0lC6+Hl<An$fsQ3p%"s4g@*?ET>O.ks5q#HAHa'De2gu@VsMU/OmiVQjjWlW8t,B?jG8>[IT1E7`o,[rl17aI9$OBRT5b05X`oODH%ip@9X%D&dHR#(@e%1(,0V6hDXtYS1tkNX*dM_LBFnO`SaE)%W-<*A^%c7h1t2Z6Mla<'=u.He?R9\=)Bo,)M+#V[f5"+$%d\S2m2PS6>]F1J2/E[L@7H%,RYnE@j9Hj8i>a6p'>38.k-Nc5a7P#Q*B&7JbqHo?!?Yna\u*fZ4`Pn9<*$48]=EdV<V"&,D>4I1:0t8<Se]`6A\ZT?6pn5X_+\1%,an3TK/s\;O>D#a<bcU"ZL"T1;1Vm"YF\rIVj+,T]Pop]3NHVhN"*pL=371I4;!1Xi/'7?$-S?9pfX<Tb9iSD0u<,K3/<h*:7GCe%6u*%t`^ROHcVl49>Z-=2-<,E\._](5Dt,(&B[rj#<f:8ghsnE!ICW@Q:E:oP5>O)`5:K^sC%4Jb8p#B2\*J$"r:BSl?ddEZ5/S7b%O1u_sp?"bd^k;F`Zb-N)%s%-kW(d=oC<Q]RFdZ!=H*AS8pJ**4jC5uFp.Et#N91^hT-]J^4^kEc8&p,A)1lJIp:@uYB*^si2#bu2%JpG`@]'e1X^TRSo2N\4>cgnnaldGt-TSn#"Y\Sks+3_p$&pC+UX+ah69_4['K33>KFI;a=AP`uNP1\='XseHnYq(`<>o]$G7LsrL%)S=_U(!!I<G$f^mk-I:%@7fgBL]3,\?p=3Y['J5UIhL-%oHXC5"96HN\ioP$s0t:MYT&Z")\2b/PQ$l=U]0D.rq6luPB26:'E4*F%Ohrjpml)?V[r\e2cC'--T&2:CkI3LpO,rgp(rZ7J^A6j(iOlln&*s+A:?hZ21\sj;9Zp@?%M+9A/WYmfHYb+do%7'Ua+i"oO,]u_%Cae*`Z#hXGXPO$[c(?Mrg`&t/IoOS(Td?<a;/?Di7in>tkX<;LZ,brhQpA/V(Aq&[qQDeUG:u]lZ?K*.o$:G,jg3&(4_qde6dS&1%eN]7rhm;msaUm^_>PkWe/PLKP1u>=KAFr(9eT,TllgjC1UQr<"H)Xafn[9u%QY]'ao<NDH4=f4n]Gerq&[7<EZlgNr&-OuDM#$;%%aQ4LYjRQ65Z!TW#oYhKU?8S#9+`["XWr,!9pdO')rj0k<]%gQ2c#kaJ$iY4]\a&>2VCHErS(aH9<f'Z-UoD$QX)1Ut\n;iXFdqg,%OXbQqa`a[!CpVV4Q[aH.FaN(&=?g(J*bHE%Z\aC(!b&t,KGoGMQGGN:rSeWW8#i`/?e3%H;s;EAhPmQt4*;M_h;-3/*SfJY]a8pd%VKeH8)nS29]CWU\Xh2>OIFTJ2)l-0;RRj't*eI>ublu0s,lMH$%mm09`>!"F.FK<E3cjmbQWt<6Z4)oH3[AklYm?IXn6/OO@f0q&%BGkVM@dd/uce?H-nY6V6hiW_e,i\tM?[0#4!t,VT/f]+"X@u&%_[-OVAT9MilYLHLFH+g&aQl5hRA4f>ka@,f17P6243MuV-U6,M%`.?gX#Fs]'l?bPJS5*[gNb.+<C48sJPK10$*bTqO]4W#;l^lM;:.G!6*EG'[Ct`5X]1YhtA^R&+mOI!h:YnmYS*glFQ?sq2HZm`d%9YMksmYH[W9(s8JnVcYlYM/V'(+S&W#ZiXuQ'H9'^14M)10Nc59Q&T/>cVlmG\L>L%l_[X'tpVRkB^E-aXTG^Kp,Q'0lppI?86jn%Y5`/<+32t:NOP+)QF(U39-/+XH@AN;0YVT;m#t,0T'ar^?=7]QdU"p+Ks*Zcq9^`.P/+NFarXnklsu*0Xm!@joD"1M]2]Od?Tm@9%c0<8M8pEaDKOq>>!af0>ja=2fn24lEMuL:fQS?NlDt<a#pGZ7*0E_3CP4%#GFS\=JjjapjATbn1@$bDOPp*m-68o?DH1BaQr=B\?%o8k!/<O<R^kpo213s>LQ8aRQ"<])c#f^gFHaf2Oq72)ob&.qqgh+I:?/g[u!Z`58Q8g;3p<a$7K'0A][TiBp8qV,2)>Dr1KQnaFC%+tb(%@onScj[dtA[N>0JOde_[-j=*kZ_rG1=/c:#d-qV12_.gL;/2>>;@0'1[5i&*aIoIe6e(V2dC)f(%@9(kGSN*;0uM0mC`()6%cJcGXoWbQ_?&IB]d*,HNUJ,p<.(uEj%P2\E9:G!.lrm`D1^Btb]VK6O/TW1mOpU?JWT<-J="6_DA^?J/TNU@t,KjDqT81Tf5$.jW%Ti->8.'psQ=d%2!N:5f72]4^/i"B=mbqWS[BWXEfmE2QCS1+*:k;qJ2RWklj>;P@#C3T'jOCl4f,kNnQY.Eqs4+F9K?$-\)l,]pn%8-h?]IgEiVnGBM)oR5BQ5cpfb`46G7OS^d3$7XZV6a2rJbqW<eeE//1,&L6uQ:,1REGct@7-90LKiMg"QtaQrX>)&;#c]g^@+H0`%e^_u+S:2JP0*]\4g`&jM#L\[,oX!4+ognq5CmIj)j,1HW>])cb9*2XV59l8*(!<pT7enNulVoRi3h5MV*R;(bLp!;!Y'!9:&*d>R%F_P78ZAS"[<ap?b$LV)QGF]$0>#*"]8YfFtd"F"$ZKsX191-GI[1!37EY\I/`d^P_fGk,C.5>j/3#IBBIU>r\O05arZ(LAd:mN+8%b5JSR%o`j;2MRIp@"PL4ASY!HFM(;=&rX@nj`EohCfaci$!>c4!d9dV]9,P+/3V'>/1k[R=f,'tQW'j`2au=G4q)!t;st=l*+QaF%ZMUpnB(#8CbjKTc/e:Fh5?%^KJbhg]%:Yr]bar(bIP1\<R;X0Md/KVEZqZDSa8;q+/TF!:3He*nPAfL"hbT^>GF]ZH\,0Le)Ya&<%2ZA]V1d9m:fl_AkfBOe[Ndq$+]2*AFp2G$KqTU+r>3=SjY@_sPfDQ>qkiXTrcu41`O8k&F1!='Ipn+:-09;*,HE?PJ4>*Amn[eJc%R!>L+khaKmU7(08Y')_q)@gG_VdN4Jb;8cSZu(>#s6RZ#?[R7qrmSLR^O,Wg^uk.tbKp.nJ+</t?bHC1l0ZOc%F*6!pNI_:*e)dG%I+tlQ]K<X3CZn!fn:00E^;KJDg]HX-Dh#UXs0qt'^DcUfLN*$d_ghS[F8,sus7XY0:[dIAm]aTuG,ILt4)Ajl4U63"Z,9qs-DqRG%L7SG/koY%A7`JubE]j91r=Y(%iD/f-]5,7nOG+6>4Wk;CKYP3Oa4jn$Q2k?<-:i(%$>raUSM[>p:ZNdliG[(:hLbgp;',"TK6H.p%!-PU:%XT7PX.rr2Q=9?72O(IU&&VLn5(&e4r/Wti)c't_s6*RuRE+%5:nNu=lR0b0@2oNtZ^HU'd6jg*hLbfs9f!2Z]DHcg[6(p_%<Q0`jYO3'52KQhJbp1%d=]]mIYIGd/]F"]7ZoljY2iUq%!UjQ9Fi6?!om#RqH"((`r'copqSr@&VjY@5a?tApdr6$DW3MbGgQ>4&%PaD.7a[7jrdWCt(`5B0QeVO*Eb!WkIN4:OXS_V?Pii5ZohJol<VG!l*1m3-bQN8D:M5#[9$3BoDH)NZn7]\"hGI#"F@NFra]J<_<%&CWti]7'Usq=CMP_%FaUI;mYS'd]f`R>9P+;'/@I8]4/$B&oI@Hl5aihFmF>54.o;+.nMeT9h';P`<")S(qSFa4GMW^AI<blefBm%Hule`#+p>@he+Z:GkqpMD1)EA_li&ZMn`BnQWW7nOX2p)*5q_$Z@G2G;4]\Kn\@BUn4)X3DWjW<mP!&`rt`3W=Imp)R%>=aBYgig%S'o[!dNdXIG9NO=in`lphU%n]n$,i!do&&".5P^KVO,uUqQ5r1ik'/qD,VG>R02ipSX!ZtgpQ6\nfTP;6Ym^PDjjH]CL8gRpp6-s%YTEl+1U)a%/$S8Sm[ZKs[:(%q21^H;r*iL5b5/8hEDq"U4b283nKp2j4c@V(c##KtTntg$eehB4Z>ja?D#;NOAaB6Oc[8FY$3B6E%'2ps!d3mSTo534g:"lHn&l:OqVQ!5Y/2o_"F'IAi_==00PUpC'LU356VRjL$D;'rm.tQuRD:8GMQE]1l>Ct]jS2^SlcOC'3fGI'<%<a%HQ@%*Id^$5Lb6A=rsg)<XpPl(!O'ZM6_igGeRDsrI\':@!]l_E+0H>`0Jq?TWXYRT,@j^WX%@"H03;-Z0R28mc<Lh[8AA8M9&%Xf6,S#@nU;+M;Jo+#%DM5O95@nWmp<1^tmOmY;f3+PsE0]Y'lueflU9Xl"s=P6V?R5rF.n8IWN]2"]+VBa*BZf<F)cCc*f/?<m,G%(n,u>5QHKI480uE&/`_kHY69/h<'0VBnarD2!dc,KZu*O-=MG?BZ1Wm92i+]p3sdqKct&:Rg^X1p&0E2$=`oBYt[b`S,719.#dml%!(,P.BQHE)21[4$0PALm]"K2BLqn8moAU*[i*3'%Yr7i&b&udR2%IniC?DMQgr<4G_TI:!B?@S:,F&q0"-Zdf>??@b[D$R-2dGEV%"P2eFEUZ!.!:a=M[]_69AmA_<Nj/W!%SCR4\@lfiS2KpSKphYC$j3F\kOkt'B<DNZ(79$g;I_ts&VlV+k2+WXS:pP@XJ&Tg2#7RW%Cjk2;cnj&]=QAtO[!`m!gZuXRfCuP,.>aWnQp(&Dp"LfDLL`@<\Li;g1<g*q9e%Rs=kl8H6uIj5-p8+Cnn:V`p;<N[+3m*!,"pj9%gR'/p(m*#D[JqeO:HH%Mh]!<@TcpUX/<)k(^Q2hHO[OTmT&>s]E!75<j)j%eC+KN)_Dh>=F9@mVa1oD8QUY1b?pGX%8_P1;3Jd0A%OH$+Yp^u]"1\q9O&q1Ak.1Zpu_gA.H?4*m2D4!Pg+^/[A_jPX^<!#>NVa>h+L?#PdZ1^TO'&#<3AD>&6)?ToSp#]#\,4br!c5H`P%\9Xj',Rm'Z]"s^1)M7GipsEf/_oM,oo)AeA_(_CtT@<5^rbG108UoJ9$+OE5Y.!B[F0a#%S&JPtPs=;5ohh-AjAZlr5b!#bOWX8d%9KU8O=Z4+J+ohhf&+soP+1:8Gp]CuNU"I2>jE[>K.iB*cB&NLinY!`AN$:jU7eFaB+,;Pa;r^s?M8A'@6,Xu4<=qi1M%C^<5<+V0%J(`Q$Lb"a8@diO#!g*d[5_B1#J9>+A]dWY.;]>kt46.j2Af;O1hF?d%SoTP^F2V\P9`RuC>0#0K0?TNcYV9Y<Ug27IhY#VMFTdbI%]UFMj%;jB]^G=4r+itCJp8U6pGOj./gUL<p;$VNPp-*9$m*PVZ:!`=]0[BZ'"]'p;/!?#eH6hs'$>A0L!bVP`F_u;0Jsq@S@?ZSi%NiWKb@*eZOGf/>Dg&Mq4Ni!a;MJ-D[%dA`"#%'h2*Z71'NH7JF/1L(1Q3Mb=@E_cX5_+UYT\-_8irCV!4dLQ70r4NW9Rhk2_ZRR!%AbXW$UUcBj(HmGP-6;C&d?i7QBd!!136mZ;+['5N`'>*l18?DgL^EUBD/paBKaenG)OOYo,/.L.!)=^942"Xdk$+!koF@Z?,iJ<n%7kf/SFkHP*rjrT&T@Qk(Jt*LTCm-.RM?0[_<?;=6-JQtkTSDO6glS?6<E9/8IB#hnaHMb1qpl(_p1W*RY.V>#pdLdVIY>$%fJLNt%jNR`onAI(QM5$KjW1l26>h1K,ER+@I%;iuCr35;X3V^iTScVNQ-4Y*$:[>uJq2S;L/r&jLkYWAY,P[Do]])U4p`<4RnZXEY4Yrl)%JELJ,#ge;+dpkb;pec:jkS83Y:PIY8clV:k"L6EsG1A$iQ`lEcHdO>19?KHdjK>a]R"-NXJc:<ZeLQPHHH([n\@:2K%d_*-FGAoi%2QCa=:1aV*FsIMhgGH/j?45rV5rVCKaqf4_SLfI]XK!Ye3P9PB(8_&RDBG@ARJbad`9H<&Y;31G)W/[I?VN[?#34[]?@QNI:@FN6%bP:/gkmJP`H_J`pa7kN\TN-3k$XlN=LAiFk9i(Vs_S8,UOusV:IQInZ>PYJoPP)1/(u0dsFN[2Y3_RN13h^!ZRZ<.elSJ%2@M.BL%H:`H24a#a,fLYJnp;=B]]fmQ-]5`6;aT<[('BS`01l_/)\3'oaj+DgE[BE?#dLk=e&)+9q4*8]MQ+tWUYI_G<1s0UUBGQPc&8<qW%7>@Y55q'm^9[q'>a[@\;;eK.aRCn:t1^&)G*8mS@G[;!OR=74D[^nD-?_G=38FK8E2bn9=h7!(/ojN+ZX3/n4G4'F<WTJc0k(0AK%M5.3kWZCo7O_9XB4sM&p::t\n9&muao>!n.:`J+/W:VSb<9)48`;%gtWK>(c@Bg,IJ6.FNVU4BUK54^*BL[BqdXgq]&P8H=Ic`EX%+ntmUO_Yg==hP(-UWp6*_gD0MM2]N)e>A;!qH/0,I/RPl6\#.+mG%Aj?bQH`mFsS/+$TZ&X(;[UaTH$D=@V>4>%Ja/%RE2)dFp64%oLo)=%K8qK0cO%f6.<=f?/'i4q_@T`oQ9B5n=P/fqO9SJ`ZTkc,q#qkDYS'n$3X0dafe`!a$V>,$H:Ge^.7'CFR7$8_!K!ld+@nk%pR.[t3f&=iU*WIhlK6E_5)fLiDftnW\,+>J/o(-::J]E2OU"RPK)U[t-K"(K]CfjX\X5jj=nKY9:%D=D^F\n^pn^R=R9%cl9gj<g%E[RIQ1r",.UbpACP"AHMQhHie<[S[:nGCH%C#dg4nSLbPB''WQ=6PrsE-VmgZf,Undg4CK%DM7J*).O4nD4%oa-*0(r8lu)]6E-t%(n^eb_$D=Mf?]E4lN%=E%h;Ar*:?Q+-E%L`ChTK<M`S']R"1adl\tW%j5G0-kA>-^X%SYD=-_j%J)E$.5P-,ep=nN=s.MqY_8qX'%P9&sD&=WNPEE9O(%:^Bh$PgG3PEXFi!8Vg5'6*q)IGO.+hjK4sTZ8_CIWP;\e&QZ^KQrd@#39WZ;&Jip&;6W&l*Bt*E?tLlp=C7#%[gM6P=ASWW3=?%3HJnQD1O8a)-K+4='Cb)0fKt(uq"W[S^R'Cur3Nk^54Hh5I^PQ\H2IWVrH\3VR0L2d76!T:Eg%`;i0*@+dcoJ(%(b4"MTF@2+#OotHDSf%[g*_Gu-RZ^CPP7&LT.^c9"BZ$qh1eU[aOT]/E'O`2BMB<oZ2GF^&mPDq[M!X(E6]dO#T/G3?toLiJMpMB%R7odaT`ae<B'^Z&1[@bh[S>Mu+kR!8^X_BO#_t9?"@=Y<)p=Aa)k((Dirs4"gXQE`&/)u)Oih,,bDltsP5fP$n^HU32kSrTGlRX#%?Of;7THAN:QAX4BFnd&_(Z,2[nDfFbo/CU%]DL]F:TpJV=,4P-%KGnjIlQO4+rN`P0M\F]O-h7,4p.TU"D:@pCK#hs^J.Im];@(U%qm(rW.kP$G(JUZW8_RI?j#u#r@#N2Q?i`.dR=M`s_sSnbH)VZK\t=5uBYq1c9G=ji%(g1o$H;:dU[XBK`:srJ`mU55:3g[5)5H<X%/_Mm?2LL7-'Un;WcgP<&MbMA[0D4hpY7CU+YE4,6g>!SGT-c#-ZPj21"9`C;R\SZFjFI#s+E/ag-HMjpj@m@&")c$)oM]Zj!NRYW%+<YV+^E@^SFt@f5+?le@!dYq="%2)"]9)f-f;9As&7Qr%F9a!SNL)^.``gi"U.Mm=D+(35_!pXE1t(@r^VqRH2P6g\jb%gEneH(f%8l@On6"q6Ib4tN9enlC?+nARdg[%H=n_#f,aV[ZYCD/ndJG9T++jMS<1OUnX!s[Nle2N+V:m9Xq#\Xhp>l37+0u=RIFs\%q"4He?%d:)sup.<(T*k/SoiJd9/Ud6l#!+uH,dnoZ=0_PhD@a7m6[e6`u!i*nT7^BEa,Ak.&c#Z5aR6='(NXO;-IiJJO7ekK!NY#iUGX)VO%*.oH*Mu4[:;M_kSLaHum+RXm/1dUa\@MsOqYA'bUOmpchlaKEB)gN6npJHE%=G!uZ*'pWJQCD>+#bc,YrmAG%&s2ncg[=/(ZjfkP%%lQFXM4cbG-9;NmPa_M9;r@bkN,9*;o>7hi;/3i7Is;SbDkfnZN9u@t*&<7o@laNJ#HSrm)`eB$i^'(*BK^oPbVWW7Y"/]f?ooQ?%@gJ3I+f.Mh"%re'MutbA66Z`0;.!dA0YcHZ*eX!>a[fo2os">,8":Q7&\G@HLLqpAD3QPu>'..>G74tgGG6H8rpI/nqf6_6Fr,44%BYZ2<D(5b(%=GbFCq*o.K/X)(*$/VK&/H2T*Ho2Kd@kk[I<7C55P3L\2r<AGR$KkU1sMVj.,]Qm*LFU&7iMXJY?FCFr(X.`8tOYa%`[#C'M@-kPeK/m8T4Z087?>l"j4G2^G/N7.$@Xs4a0o$g;R=C1S]_F0RiVWn/*!!@6uX;E_Gc^2.Q5F9jM#bR9;PrRP=5agZ4El?%U2iR"YR#gmN//'_\?KC0">Po>=sj[bmZ3<*hHo4D/LVT.)Nf!H@FQ]IUNP=)[%ee>!dZ)SNMd7ABTt&_R%!86XYiklG#\4`hDQ)X%Q(^)1CLHu,=O7NhI=sp\8k)jU$)*bu.o-j:!AYhqJsIPls&+m(7T6GN`ILfhgb&$[KfBO_<]gG.Pq:9s<4ith],Sg%pA3,6hm(Z+%mO1hi3!#Yl:Mr>WMDO&Me\J/iLaadA+<@u-8."OX9]pqhU,3.4,4^!geZu67C8&o?^[O2C[dWu1U([U5q6ZVL)1V86@Lng$9o,5*%*h3AR*:=:N/L$A?p.;ZTpmTpg'D98f7P\1a#hSS@-kfI:,9`aI8G<RGRt=KCN$R^1i2QmJ@.8)sn<"YF(WUB^Qk`3<JaD'<R7IPU%Cmh5d_D2^N5EidN;8R1F`E;R*=]t5\iIV\%:lC^V24<o/4'XGW*FcMdI"4NbaWPa8,brp#I;qUE2ugN-`&eVqR0<:L]FQrSj6dTk%'6X!YG>`cj;gNENgR]gho0OW:K[^U:(2G,],OG.6j)qc.R'ii6i"5(1Jg3sU$2(Ma)+8:"2#)gAfq95i44FkAK.^'[^"c(^q.7[C%4omMFg.X9ZBqt=m_%!TSngG0-<l/_s=arMC9^<ft)O&A@5J"m:T-AW0kHf@[BR_d]-[pQ%G3JN\"DgHnKW[VW-lT9FRGWb8ng'<"%+pY#JqlUd?Q5):sk4l:mo@p-PUJ:4BrATp/mnnhRcaWP?6HDV*j$`GgM+62B"uOH=BT#Z'+o%;Uo!feBTopdkX?S!8`F':C+L8eK%oh.ZJa)4q;b9/>-Y%>t!ib(Rn0JtCih;ck$Gl;feZoVXsH,_nUr0cl8)enpcGs^H=<Lgi[6>dK8BL`J,D'AkW]bQ0SCr'pU];b0C%e*"`T;PbDuEQT1./0kuK;k%&nG&o:slR!P2a<ZtcJl69K2h($Dd(@;N+;9`c-DNbk/*FNBVjYV3Y$h-J/8'gFD1E!=%r5Zi//$XG%D,5l,j)7g0gOsB1,"(/fH`BV`$4-*60*)_<EE8O]aG-?9RS4Zo"3U0A<F.R:+Ve(OpLm-5^f"rEn\_2jL_AiD6\HlIK]A(,@S=UV%+3Ao)(sBc`gCcWfmJ2pl,1O'B)3c%JTeR`'CHj(c+<A]:_p;kQOPg.bV("lD)509URarLCF`<'efXTcD3flcU7+$u+R7L>sD.WZS%`iq?eL*n%Y,e(X:+A5$<UgMLL;NU'CM"bL'+)fo:SGiMYeXI#B2J0a>oRNpG^T_2tE!7prX\^lAn-qDj##p;bT[HT6$@II7dM&cA%YfL#h=5.CWj6jDa]I&OCZ/[<Q-HJ-6E##kgR"toK>GF[War4c@BbaO$42q>c$?\g?&.jG\?3c.cB2Hlt7bHeO7c,p949O!O%E8J*%N\eO1"V6cQ-[^mb/S!cY?_L4n[WP&AfGoDD'>h0a5d%jg=9+Q(A3a7aXGjJ@+Dc^I_ALl1$R12CNu]niONke_/crc?a3+q/JmY=`%YXVa9OX&:4+DfL#FaQn)4<YZlRNMYaq\``[d&']RI"b<]AmF;1_R8tk^*Zi@3k@4OZIQ,*'c_$X:'PeD1!GuckR&5Dc$>;OD4F:W%#'=]IW#e"[CBITCeR.9Nb)JZP'u#:u./UBgf;=lQkL]Kt(aCD]D42M]Qik@:QaX*kCQ*tPOIS==/?H8"&I]N2k.h_'^B%g`fRnHh%_H8M_O<o4gf[agqm&h0Z(=n1e('DRn#a26D>nh[mO-prOc!3,6NNuP4gjl]@^Tca7[`&2H3"*13N"g0F=_MSlR;k.>cHZZb"Trch%r#B[a.Z*L_$PqW!ei9-.EKpiCgIbp5K&CH\KVkX^c=STVBY`<p7:PTH388sc6=PYT3N5SY^tD?5.ML*>E!;+CeSuA)Jlnae*G9Ft%H:(*+j"-YCRE?%"$O5`misKGR"p$9BE#,Mg51MO9!]Y</J8c:dMlb_:c@UZk3kNDbCr@/Qi+t:c\@RTNDt[%LMmH.$/F9;PE#*hG%7-+WC/cCADB+'q[P^VD.[MTEISPZa[fE0&.$n)LS$<J<H[S=+tc8M>3HYZj,]L#bEb-,fn5deNej"*/^4PA$eB581@U0lqs)cL.n%C<,":-jP.:=n$c<?e.2@!X5Ap3*Y+,YsR>f[cB<W_D%-WaTSFH_3&GfU2,+$h9)r2MM^p<[_aeHk>p5==#)%2/''!UXfrO@-D_Hc%<X^lm,:aV0X'[##'KpCcR6ZjPNN<Q&I?&'a-Wn'<mZ/D^r&.EI3s=R@_lQ=G+KYH-Q,*!P*6](qPUBN)BmZ[jeRD]sRg;G4,-a/4%)80-%:-kB^dT@?".8n"o]-O%oZO.<%j0B',@B_-^)5GSdEH$IP$dMmR"=4U&J.%Z2DHL?3Fp41L?1mQ$+f,O83m49MVFod^l>t)@%Q8*S]ims$kC4"^L;'lR,=eKK()!3iD>i`OKUf4@FL(.#a?5hLpi!O=$fF?nSK0gBG'b0YJP+/U'K'HXsJo>m"fbp'k)+D\%HH[tI%/IiMI%IN[k-0aK6Li`h)SduG\!J)5V84a?Dn6tZnKLd35Wu!+9*<jW."o0PK.;B)YV%o'6(+fEYf`2>\B^uVb5*=\"3O2PkZfo#/%_'RU0#]IB"T;u#^/&ZZ>70/a:s6F94W#ZS=`lYc$#eQsU6?AA,_i?q+gRJ'aT*mbkA6*J&iYm[7jF?a%%L_<"jDp@'cCUEA_VJto%iQE1`K%O%TgIJ=0!4DV)A#sH<kkOsUWHc33#\imZ]RLbg/PNS1G*E_[_K_qP!/9$s^5m4`il]&;bZ2:EprsBXM`?44#2^d4V+CnM%;$Y\$:@.U9Q=40*0Fb)mLK2@R3n['bc%1Bi+ZoTY8G"rm>O[V'N<q-:@r*-mN>26kps7?Wdiur?)iE7BqT4`-_QjEm-Kjc?#bQ/u%i0Q]/!Z'/;a!Jok$DD"V^kU#VZ!-"u)lP;lZA/=&UAG"R@Ube=;i)n2YWaobE\gK,UEb.eW8mh9(Mej!dAE?kPcLY%K*Jk29K*oT%T!i+4k+G8oR`?<V/)9'uZp!JrZAV(Fka]=*77<*T$TbF^bTrebqJL=tp`W<@_)F1&J`4o[,uNI>$#o@orJguU.3"#M-"GRJK+5Bf%TTU&1M4lpIQO.L#-9H85L*f_9oQjs&(^D?GbfZ'!kTQ.uQ5jO$BFn%V;BlI+9tG)0"5AEkOo/E[?bm;F7NeKth?"OqgP2E1Q:a6t%ck%W4kT-(2a75&C'i!X]Wus>C<(mq"3K!^`2G0JU(t^F>'k$h>m@-e`:f)\rJh,3Sdte0NF:$C(L<9jr5Z(aA_^0M\;=d]kH4E3'%[]q"eJkBQ.9&!$'71TEi:>.TU:f5'u<^XD`j<QYC/_/FI[[!q9%;_uo$N[q0oa:77IH>U(5jO;&=t$=]1qK,CKa%)I`2Zob2]5T0%o,Q02d)b-K\3d?0C9,_thGBc+>6[/eT%]">Kn7f&Ui9-V'd>'%$NWaI4$gY/0.$a0(c8W(0c\/3&(Y6"(J1BI4U-7I;dA$j21)f/%DJoE%.!5b%!<LRMgXheGHAS<aj?01$EY`0@4N(Sd`_qUVTnnsl1V$+_Lc;7F!Y"i`2/R\"iQJIPNKpa%l;=I$#tfO:#`K`JY8KD/%0_13VA>k%]:LRH=(.aFH/m_rt8DDaY&-QhBe86Le3NeA:^Et)gj>$jM!K]EJNJ,f,@g^Tk)`1q*oG>DL=>M:eLaZ*+!g6E[D&]:S%]Ie1sBqC(;.)&EqlV-:10c\>ddFbD<6^^0#95#6F3;_HT7G?!/GT!t[YWcWX^82a(@CJ0c%&3;6W#$[rPLF"K4Hi<%?X\Jecfe&g%%Ikg3%O1.=:r"JUUjZa=Sn(kMV>ufTD&]l.TjaT1):F)8/Pis:+[pFd=k+EG";]K!UT&*WF!VVHe7#EkhV,3'j#g/WPrWnCM@5O4%q_/P3GQPgN"Wu=e0[Shg'uL<1.Nl.K%j"agJsi-R:18AEM8^W5nd(llE.BSU2@f(Ta'b5uZ'<*[P)s4;]64\t/Kt;:6N*lf)%>%B%,IsT'`;[dW-?!%j^c\KMYnMX-YQ7?O=LR;f=`aZkPSaqDW`U<J;M)?k'[C]4Ea:f/JLT[)ek(t80!qKDeBpOk:S$!l59jsINPST>%m22;3W4=^8_J*n#p5<B>TkEQG#r4^?CV.B5XtIitfLd<:6=Xa"+JdugJll)"/]^<W6tOck=X3`$XQ9HL2P,[DN%"QXSOlolf"EI?%m)oTe7rr-(>[r)E*`]-_/@mB07E2bYX/HspR"QR@K8/8K]VJuAi5)gkf_A>HpC!%EAj).j$cGn52:u%@,ohK:O.813qghohaP)_%%Z:&Lkd'Lld2;o)Vjb_-)6b)&>4f%hf$jkgB$E4bm>bU@+fU6@p/r2En**XCRdfs42huWahScQld!XobSc3s<4ZK(-N*&Y,u,jliG%:`jToU282<9PmpA6sbDP1]Vi!k-7BXPqfN86UIo9Ca-lnDb-'g!i2^;Y]'jbm#$&U]];H\EcY?Yo3rjDJ^]MO3e2c6H#B(N\EOB7%.FPT#;J:@sH'V(_cP"M-eACaM@msh2j2k26\$4>]0[Doa8C(b'^&p_-Fj')$F&OoqJ3>Lb7$eZZ+GfLojVjPI=7nq3oq*cI!=I<_%_6?A6U-Kr2JKJVt</I"qK$I1aU0(_ZOWeN`?NeE$nD%23"lVje=ZPpZnBr]O(&`'89#,-l'<ja7"gr2<RN0?kE%2LM61bjA%s<Eq%X2LoN62!>NXDJQX&Yiqe9lh&aYYb'X!?ccA;*i2?a`\?@(bgV`)B1u+oF!B]M$*V`D,[C,Ca94sUK='>+M!2nZ%\!o_Ha!(Z3n!n%C/1)(=feDU>KhJs_f!8uVGPPDJl,hU@,%ulE"ln<<BdN.CCYfj("S18M!%us@)r<Xr%*uRa[%PR,]WrQ:t%rB#"<L;X4)[\Ui9F[%MPBfI:e!,a3N56==>_&+[Z/_eodgM.fJ`X6JLtC,17ACFi*h12iC\/.b+KBTBf*gkhN<N*YRS[9iF$'t3sE$/b=ZNA`/hW!)aLfa%TnU?ZW3)ma*Sf/cbGbTP:4nE)@1';TN`]7jWF?9P^s"MK%5gGcP^.6/[K,c>@u\,:E*h%F9^9XjmH`FU=:_J0ZPZ(smTTpTe!:Qh%)(;_M^d&Yg+^eDr?OTV)Rl-CXFDM//cm*QF:Y,-lRH]=tL#ZZ)f*8E^QGIc*",'W#;d85@:X?6[REp)4SWQ>\M].ZZ2mI-RSPeD!%!-:C;9,/6[5._'[B-G>oP2)o-6cN[28gVU]plbZ]5a_YX*<"o,gPG7UIkA#ZC7qZ+8:c1;U1"f6_WchmM(E^E"\4ST]U_-8GTb((%^>88TG59C>]\uq">DJikk#>8B$B#B#@(#s'O6OpGPHf?)<H&]R9^1q2^2l3E@,^hu(u4/oi-h)5Q*+K^UB7tG4I+[G<%8$3/6mT<%nBJoA1;d2h6B]FWl&XX@s)-^IpK:B\"Db:D5=N=Z2MmE\P,M2'h5@9#ckp1C@JrL@GOCH<ea(D,b'eX''eAa-UW2b%irl9E@C-*b%&6k8^US3du=/`A-)^HsDP.#9f4oT)2+3:K2AH-*W0'R'#75dk>^t%1dQ>9fWh-OIVHVRP_gRZs.H!VZ7"B:t^rA!01^ZB&Ll#-2R%f?Goo=Z$uc\,m$mm6e[>36=)H@kEG`X_p$6F0e(72ud$-HTTK#=+ICp/-r`Zi78splur8(W&-ug4>20G@,iLg4ABSKm#%Bp!Kscu%Br7:["YC@[U,a.Y4.7ZR:=!Hi[tkP&F;7\fTq"Our?O/h+W=srokuAd\/$oC^L8&4Ub2tO-.N%ukt9lAgrR%Y&0T%kJW\FoHlg/C%,"_[rN'eGUGQC$9clbdE7.@<hFcaYsGQqMTX1YJ2b2JM^M7qn@!9ig#85Go+jJI$./0+dO0uc'AVl!k?8rg`.#TNo$To>f-)C(A2%rr<lFlF:5s/Rn]87T)+CqBlf3>@L)8UYNe#%R6.*'1bBj*%gHhL&i\>&Yu`MPAT!*:+1(6Nppo5ru&ic"T[DMlJi6jr=u#gXS/+0%./<W.L'O2SLgC-9WAqel=/fR5A,a_H=*NliG?ZiH`JjV\13?fGT^8A`LDK>q0L4,QjZ=*c?DQdR@5EW'M)S/H/QOYFaDDDa4`"nB%'qRa6SJ[<i\;ugb.s=hkrm`8KOM+2Fd1eNYZ_YH![WIVI:f>r5:cWYGF+tN%g.R);KY3I:"Pl]`lQ]8B(#ifDdDE.jJCUb2,;Y]%%1N/E.rM1&ZQ,se0(li3<SF7]IlECmM$0FjZ\H-.4_%TgA)?Vs`k/!i&N0V6H=gXF/]U2[B@a0V)!T,IV^M@`l:<hAXbjI(!M:L<a%fj,RWKeL'J[>Tb9(qY^^]DGuSRSPQXhVrAgqRB0UDNtViG7n'l7V1Cn(3WCtT1^g&MHi?1A9+En'Yha$XD5he^DT@FMR],K^dAfK%n$1?PmE&B"duKqFGH5ok3dGGio*MXCZ6#EcLQWmgY#qX([hr59/r+Z_.2)Yu"86Q_[raYU10g=$1!s<tV;,&>_M0XD@\lI56Ok;=%[2asu7(u`9aDK]k%7!O*J:m/[>.%(;+]F8MUR^6[kUE*T3p9tr3^q570H;ERC(t`4'>$5k002k-)SqPH)BNb<ghUG5UT%-Q:4P))%**+o'L&%a7PDZ.Wf`]5^O:I.fD?(?s=!sWuCto#qP([q--?fSc18"e\JV8nQSBrqk#/46k?qqaHTF%2?^u3=kr$n_pQSV'#kQl!F%S$ml7ic<I()6;:."\>[jKq]#n9r4XH@MM=5T`Ym(V#p`7NMhOH$Vk_J/.lG1!UV$2asSn=*8C2#^n8fc6KQjs8T[pdUP!JC@&\\_%5UUVg`95TO#e?9@cj*-R#HN\OY9o3Z6O8I,$an>dfDt7,]KhD+;?I.277a0W0?^:<V]SmDVT=N-LQ7e-/OY(Z)NjaIJ`?`"W/fDd%<Fl"WYLVs9)/p3R2:!$bUTWdf",E`C'#QgbNS"#__s2hg<9af$K&kV/3"sE;5.?N7-So/i!$&7e!Xjb#fo&fZFkeo`J/"0tpPn8a%8F*^89=kYFO_[LjGA_*\,,\FF#VmiS71VlG0Xj>7CdpH!1rjC)83pggM0b.hV0#!r<=LdiO'n]S,?SYs:jOflARKP("B#JT5U`Lh%D6li0SM(DeOb_R?Tj@i9J^_r'<8/&21]U#u2Lmm0"(sa<^B8Cj@r5GKY5'L(N6*TA$ckV26N_Oefcje@bfT`g(q>%P\Qq<7@Da;]%S]BZX'c8J67`Y_$$ucJDG">t/5)+crZV%s<7,6^W+sLAbbjP],P&EF69uj$c.r_9%YK,Uq:`n1\!CJ/!!5+"/$LqYh!HR?Za"8_0%9MD7H.hHTXD(W_7cFmC*H0Z%ZM8:&6CS\Q'pf/=oc+jV9g$5+<o@g$k@0J3IpmB[5o<_q+4-22T\1`-a;RNgFq+g>=11MN/V^1,9%R5(X,9S"q9N+&0EM<c%3$j//h__VKgA6e6!ce&4;B5@XmN")?O)(Q77l-_\(0N<oX)eKLBMRc?OYlQi0=FhSKb*1Ep>D%2W_Rio;%mCO-''r9W#hr0Z[7J4k/C&jZ,:?i5nh#QkMCK]+'aPi,hXP-"ZX<<L!XoUL[\H1J7,,AD1\tYb+dQ,c,3]hjR9npS*/f)g52q04V%IRE?c9+Rl#g@eP5r*oeO1'_Pq[c?)gb;bPki*[5&F#uXii)Z?[o/A&%AKJ\/D^VdYAdhh97(U[_$R_7C3'POeV%nr+Xb<G[EWk#Z%_H,eI>Z6&gCFGWsP%5nIQ[/jT)09.*MqVI&.N7;1a^(9$jAp<QYSXl-=1AV.H4p,#)[4(b/2AO4ITDT27J_[f*f:8o,ZOi6jCbH8%fXP5dSUbj-?D(T(`l(`hP/#!5hSo,DP)_@7XThJOCNgHp30;\"pBs4p\f4-n!rHA<."<$576/d65bP,S3a2SZ`hmH^!>q#:I9qOD%M!K3E%]Z.C>RYNWUE[[E!5M9/]8eZb!]ka7itm5+icAqZ=ed4mNkb\5B/&cYm$3]#pC3-*]"Ha,)%Sl9l,*M^>`$191KNB@lWp).%X(6,&'g/<51JkOdJ;^D5r;^1o'm;\3ar%L%m>B?:@&Ah.X-?C[qDjRDTX?SCkq^NbF'#3rXP+,:5)7-%@h,PO;,"'^I>ksmeRU(m%=hJDo`0PF?Vc@A;,B.%6,?Pgn`Zfk?2L"+^X'_@9i(FG"ShRPE<9@V"i]'fZeHUamD?CU``_@s]`!dUI^Mg\LU`[E&b2BluY*73g%/te(l\.>@8P9>R(`V`@tXr41tfa'J\$;%EFo)VMlHk#'Y%TSQ9?r7P$MS'R-kT&gK.+7RGe(\2YpD#_$,rjFO=>Ms$^_oCinO:VE%#7cP]OOQt0O4mRl[#;ed+>L.%#!&2@.e#ff1D*VaY'<BL;WNReg-sC]#@@$1+Mo\/JYQDZDL7_?S.VK[I6g6#poHo*XHX:kMXi.F%\tk%i*S'R%IZ`^P"utO1D1>)a$-4!t)<-Y>glH!Ae3E:`(#L,D\Kio7)(r[B.CYDK8<MEDXRrt2>`*tt*',G<J^BdTpfMj!+/_Q!%9kM\<U6VI;[F'$@i0_'VJ0$q:]4TK7L<*JETZE7d-EP0O)AUG@3G@'N3MS'9R*;MZfrBs.9IPbr(F$Q'/`7@(A0FU'`RbA/S/BAU%TF[:WQ%FZhjpGVejj9C=[5t#P0-u+"J)A?L5ZrQu5_dEj]u&hU98E"%n5@f#Lb)bQ,*gs'%Nq%d.9e"4buI>s(fnUE4eA<T.j-0&%O.!U(VfH2a8:GP&PB2jY!;[sQ%a8"Mk96un%`?,%L0'bZPAT:'T8Jo$DCkHN6.Sp7$t?eXE#dOa"fT,dW231r;?D_gV[3qYobik4%r[MIa!U,`;"sT0C50><D5S>1Q:HF;2\K9=PcfK`g@c^%s*9:0<B[4VDN5omXelEFnfM^+rNe\kF.XN)qi/fi%O\\[/'K)=I^pCt#%+Qj3lb\$Q?-<<R+do^re$\osW1Rkq:S(FAqXqA/fU,kcO',n)0!"2'b7?A/%QHUk2=qX+SPnp"s18>GJ<PT)0oZ]]EA@b%c$0!)M%M#q?UP-\UYDFhX&+:7`EB#4q<j*XU[d6_>IDX`DHX^reJ".RA'/QSE>A4W_n6^[_5jf%=TO\t2<aOhA!L5ek%[%1%oON[H\N$;bC%FdjaJOeLnNfBH4'OeLPin,.`6AFM4XZVVN.#*R26N&$8!Kellj)AkmI3j!i`AeZ-+<shB)7KKj7=>quB!8F#3m3>(d*B5u5$@nfY%1,B7SX=Tg',Zk3#$A;9l"E<M[a=(H%:bWb)"\l&>';NWF2M.*u7RdDd$o]4F"TURA8f7fj!68N-N$:n-cH%C>Zbjp7g*AtqQ<Q)$%S.0&V%#cAtH-0A;]T!asc;"je)Ar^/X3rV4'H&)$@[S*&l]Cb.R8GdIClh\""05;aS.DYuTe'*LCIV_dKe#iU_H<Mf"/@PNNW15u%B],?@Lbr]X\J??$SP_4;<gGKpMHkdQV9UJ3>Zsnr:dtIN4KE=2'JKV;$'1#HJ5VA()$L),.k@@p0P<t#7KGd2L7M1,P)e]\EW`)X%<Q2J!lI8(smu<8-jrb:&*Z5-33=1+A'KEF>N0>q&j/@"_MGXA@_[JW%0O@Sa1C?ALcTA![$H*cj@%C.+C5EYGMuq@f.I>,(1)bXi%R2AAYfSbkhjC33U%#cB?frBm'A;gVM;IrpEghsV&T+5rm`2$#ei94o7kQlD=B/pS%14m'#S,L'>pm@chYpJEDT!Ik;UB0K#DVhr8%jY#+o;=GeW"mLuPlX?:hk*[CjkfnR;O.Qc`j:tlWA+10L]RK6>0Qs`CNInDN!KqCH(&#;9KFQkdcPXo)THNh,>Qg8m_@.,q,H7Y2%gEq&<&&!-/O$Ga.JT!JTaXSB=k,<[h4>6t;^\oC3[c8oPYFDM:ZThs/>h6`I(_%5g856d%J\C>STXJgu@BXff*QX`'%mZ;FM]+(#%[RH1:6a%NO,ENC9i7e]C%QYV:f'=jt"(NJHgHVFASRt06h+l4ar>FX9_GE(Hb:4$)3J2UF!#S'Tdt20?Z$12qp]0_Wm@gZ7$\htX%TJ$3RpiZgA`#`9_>@8H'Y[,80(u"]0*I?O8c("YLj/HiG='V[+<mG)Z-K'+]32$]e^`H(?Mr-Lp3c]t`8b/%a?:UY@rXS^H"]iP_%?`%%8*8%K$`fCtjp<Ob*h+Z(_r>Ahk%=YQi<G.m@XGR]T'$9SkABBq;/_MHjb]3b9ceiPb]K]M@loC0M,6^;7_@c:^%%^c2[;MpF%g*s8$,>csdh?WdV4t<oS+7/,l+#MBGlX3mYW9P-KUnc4#OB7&S@l8kE/(0!iT!7%a^l1Z,p+QQHNkuB4R0l890T+[O8sE"7#I3;Z%*WXg.'<pO2]%Xi%RUp"dkY,_(K"9BfBsK,dTQ7(6OOCQDHXmkHR>K=pJDf83a#hXfjkXGnbQ[rF:(E3F,..Id.rM0RS9%mu:`]0k%55GqC:-=L1WNn8l^!bY%JI.@U93U"a!oap:#YZi1bjrr)<Sphb=CUAIS`qj1',75)#Y6T886*4_[kgj8hn`DmNZK"#Gp'9sY>cro%!5@EOPm/<I\+O3p6g*#=QA.2d^q>i$N1UQf:cBn,mSo)/%7!]U"a/2.:*T`]QU0(PYRWAuPu8V*W1JO<^+F&7.-n!sD_(#YHI2_F%NaUKB5skp4*?-HZCCM7!U$juGhlOVENY%j9nD&+*".pMiY$tlq61`fh7SPrO%V=-FP+<d%ZV3V;+YElH-mB+k)@c;S6=,spq,gui%B#[bq$bEg;<napC4^!IL'NM`4Qp/4:-`9nU(9#'81;9\VY8dko<D#Q<k/u.lPW9JDJQ(6IeEAl7XAe@t=.%<)p/F#<?-ZUB<+?Sm%2XB>V*'b`6lG-7?W4B%Z@jZq:_%'QB<W/"J301ralbkPQYK/jBL#F>T'BLcB=rbDB*]D`GQtSju:).u\JE^(*$M;6:fOoqOPWB\J%3o+1n,cU%1o`?-SF%NC)<1!#<93)^o(]f7<,$'/\`#Vndr1RQ(&P%B2oa4\o`fRWB/C[$M9G2K-,Kq:3bWC6Ej)Pu/0WkNY@8]:j%?u:b:D]t/L(s8+@^_E0U]c5RB?@m0*-a;V<@d)es2!tP?@/OR,';0GTW>IUf(8!GcLXqX+\V0Cs*J)*6^p]HTC:%.)@AnMt>WBj)%T^XH(G>)jJOhjN0p+=!#qE+i,@OKKGYQSU8/0T%12a6F3^[-1ZTK4.i5_5VGP^:<q/'l!:92U^H)8MsCT)6S%D(nXlUfnhF"s'5p%!)lFr,Q9Z=cR`^pPc.$ii*/?ALI_KRHktll(G:lm;\7)db;LKp/et&)$X)l:[SSI(nYifcE"KW3e'0h`e9$Kl\4:"@o-ru,-^9@[%rXq'bq61'a-U7*?"<.X#!!hX7Y<E!<pYTa5)kR,efafl)X]M3:DErC!(8dgYCHN%Ic5lDEW47C(:IhFe5N;lK7ePN(:BD!NP20kA%Z=N0Y63[;l"fW*p:ua]H:Z$W-H/T&`^%%>D'P%:]h8,`jg\>Xi*li7e]c=iCaj#:l%q,KXVQ,mnJ2<$5_;S3uVA!d368EAX&F;[P%dE"mf;'ol/p$!1@kN`(jU]5h0p7ItVrTB16T1Sq;Y8m_rQmO2X`tcMfSdYmMhghp5rbM\R$[d@9Hlo^[3"D*:EkenELg*]?&^/&%%S2)f")m4?!Vh6d0g:R:a@[&hV*t8dQ21[)CkH<g+!@#XBU86ZLn_k8+?11$,V&er2IYasj=4RTn!1,;)ed";FdYiR,E<7/Zeq\)$%Wiath5d7UACk-aSl,ru*?Ro^Aec((h(g7eXiNjXE\?\?CD;"o=;-lQ*co='O5.92fC7a135"N,><2nU9"QVRJRi_pYY6s:h;^#(&%rZDAWgW^Nt&0Pr.DmV`2p*ur.rT=%a<!rh]D&6F#(n2G6bc=hg(q@">$uNVa_01*!Ja`tCZrAkJLdm<Xp_B85jFG<JH"&fG_F[Bb%^Jr!FY+%YlCC!b0+=SA4k/\[LRiq"-/XRZD`:>82T>c^G)WQk/-4!,ala1@\cGlasE*@s8gSJ5GUP#\=Th6X;3>%I9$m1gu-%`r9%+US'_UdVfr*DaSNB[+=`8Cq\i!Z"`RH3IlqaQFm2m3D3o%,D+bfl!-=W<R$gaPrnsW>d!#>8r)^^"Fd4[kC.l`JfqRpi)>TGUD,]%ibCp>O*\A@HhKa$M+Pjrn@;J2a&(bp,jZ*p%RtOYN.PNnK]stfe;QhhW4Q:aH"\_%2,g]'i.]6\?.FO*+d+5l6:e&RM:sMNPk(/L%E@GOrq\'fRHcoeTJdIh@[Ag3G>U@E_nREE'Z6M%V(c_msFiZ&H8s!@r$7hbi8nN2o*qd?j:lQ<mg+%u2#>%euMBN,KJsk?tQ.HHk%UC`LrOdI1;L2T3NJ3JM"/89F8Gt@/^!/.-nM45L#5tYX^3NJ1@3%r+TZm-D6,Q7`SEUe@6!.9@>AH8`qXlGrG;H(XsYtjqs@3%67%+@n9O3*8065-Wre9pAglO^ad+OQ!$gZ)sPI#,Pjdo`AU,0mEaHDgUHK%X+@l#6o*)"#ql.%LN<W.1,JQCDWKT2muGD5)5G_?oL?P%@4WE)3)E?Hq/_=>cmKE!)>X@SLcb,rAsSE2_Zg8g'c@jHI$Ws%cJfBL$j0lf?_fq8ScUR9lB^N[]+3>9TmWQ=D5PZ=)AU<GJh&5c%eJ<S:BXa_701W?UfG"r^h\;7I9d)UV_%cGQ)VF)P.<X721>574:MWQoS!c5:Q;P?:r.r_H%3_0`o,*BZhRCSmJ3CGppFJ)3?r,n/%?O@)\[d$8eDq2u,<h16bGHt`/+n55dcn"EV.Sh`,aU,s;_bf2K%&NMmht*!H-+=Obo&<]HbXUQTi;9WKpR$VgStBU-)Qc$;3;11h%.$8lHafIXrG7<=f7C/PtV^g&RSlS_KTh=V.Q1Z?tNW.]!=$VZKr5eK)=1F.2EpGpobT;/V.ZiB+02:.-Hki]CJRYWl@&-X?\H>]&%j&h^t"Chop!Oj+o(tajm*d65pa_-a_O$8%j@_trNE@<\!DJF$X#"q4\'K\)N_$u]>QdUK(kii\1E@:/T@k]`/_F]^.!/>HM+9cAt%^^DM&r"u6gSBc\Q;hh`($N8<rqo1<%0b6PESK34`)?We1jB+@]W-#fC(sW`t\V@U1T2r..THMiESu-k00rs)Ch-eL$5qeW9TL\YH%[U\ZbQS2`.SH)+7).SQ:_uu%H8#et:ECuru&)a1>HhLou*29'5"D"R',,MU"M5hIP!e2g)LKH/,KYHmlI'WjOU'Fe<j2IlVa50Gi%:]QPbBX0V'D)9:NCLG]#l-RkR--R&X(M-QU3(O>O@4RM`T$(8+*!NS\Jg.(nC^%cY]FnRY:oGD2[f/^n_7lOAZh_Ufghp>fHFEs:%,1iK?m"6[FA!j/-i(4OWI+;n+0R26Hp0:J95?AQa'=!u&^%q2eT=#3$KVE>@%nK/WpS28`[Fj:\)0PEo!Y'e8#<tL0l4;#)ee25X%A_&:2L)LAX'Ug`V#P'W9Kb=EjehGQ(.%!@F2\UTiRZfq^6EJJm=&a5B,)&1##?#u&_,<XY:PKg%GNk'd;gGH,Ua9E5,8@2$p4g"p%G%P(NR/o;<U^=,FP/,9#7L$pYn0nl5)$/I4k-ggXF^A9ucL8i@M\Fk'gc!-]iq=%i1GtQ'SB&2%Qg&0dgaIIYpEZ/#@$+nj:C6L\%c7jcG17H!&7?oJbGBp6&^#W<S"-8IHbAgPJeI3't*GaDOl*+j\o,pV:c+=j(c9,Y:%.\*;&$g$!+ss@"CiNDCZ)FBP[)EYr<XV)\%>t'X!RUl&!.s-&cfXP5XT7Fg/oUQf[m%#$Loae-\B6Y1[;]1m@e7qT/*mung5VGk]n%-pM<4-IkRLtaZe#o`;rBTq]9R9uA7:jgH%$^\7=Q,S=8NY/X&U=s1Rm+(M\b!mC6#siTXiu0\o4u.7bkXP'0S*keS_.QM<g]r%KB_u*0a?s0THFEs:Jkri?NS+P4JknB-=kboZ%R"%#_h`coa*B^0VY/Gn[?PEj>Inh5J?,BL0+YR"XaYF!ZWe!^oC"cT!Y(-K-I`FU9;%8<ghX+U0'cB(tES;.t88E6oS39W-NnbUF%@3tCC%rWjG%ecZ=![$ZgoXJN>er`q`30[hi.e>p,H]e6MbXjg63bRBd!@LAu'J6$-3*%k`.KrWk3c$rTiOjOb.Hd(K;d'OA&(qYg%$KWF$0C1(g*3N=QYSb:`0B*Al6H&!?_74ZK(C=Pj>d8&uE'gGulG+'AbNaWqRu)T8da7gt(klbBh]j_nqr]n\1sV2D<S.#+<C=ob%Q=A]"&tLl\Za#R[13q]%1F`*15+@30NnE3;iea@&!uG=a(,,A9kQJ>rO`D7Z:LO"dNnE/L-hc6MT%r/848="4<S%Mi7Ju1.s7:]l%/B^\gq+J#Snm"m-@XXsjH@.Y='%^i'M$PKEb'CuJM6#QK^4:c'O,7`*5;!Gkon@?NJ,&X7Ws:S=^@c:*Mb]kO^'TD@(QX9q<(N.3%#*P`;M^@_!nBD<a.8`$u7?AR4!o.`7%i?(--$)YOIIQl$fT7(2G60n@'(R0('W]mh:Ts,+G6/2VKHLPl^s-?06mJgiEK(A.L;tAh%'Km8IpWa1n3dqmS`p^bk2jF:h&T\,DYe%?b@.a`!VjDP"=O&uJhPah0ak+2\I#a/55_n9djKK\6#G9d$P4[:O"j5!8BLu(8[ol!.%IoFDF9P"B'JK+STMO*\B^;5!.@*7#p#1+/T!@[hQ_"N5-A"SC%0Q)L=T8UX'CZcAW]V8:sj-`sO_(\^'Mshe;;G'mUJO_:^HPAUA%\Xp3h65Q0L:<3&B6WI.T(nC7Q3l?Y,!>m6%aO'_j$oD&o#0s-1b]iE>ZE9)>-<ue(%KMGe4`ic9,GjQ3hZEq@j6bnM%En:_,feP+%c,VY_!9JVRj)[0<I1QYWMMkAq',,t"\b+im!&CiN@1$["F:_"iF+tQG#f]ER)[7ZN+W7<"Z+1BqF9Go&A#[CH^\rk,!^n?.9,EGC%kuT?'+>7Q*%@=fH'SW%T:*^?BCPRJceVa_o@`U#<"L'46!F:u!Z#X_;AA]a;V1=?[\DOF$%mn0RI)V7/l]/edV&`htA@[RuC?5PZ%/NHpgO2rT%E?;Xm&Orjn/V(M]C$QMD)?EWUW/;QkK!tkGoGo`O&8WA*\:@0*8K(M>,60dNELRr'\F#Pg#KKD7RGKi^(qJ95J2>/T%@r<ldar2sS'U5@b=p,7*66mFY#[DW=S:ho/0'e7_9(;1j!'E$8$`OA8TGd]'^g*-ZOrsLS_<d6cb0Dl#!>q[.Zkgg:oQsQ5aAJJ`%YZ^E/.TPLdA/te*.4pM/QPim.L^n19#rW>er<*<c4\&6ilG!gj2/q=k'Ou*t,;+8qK9MM:!M%*a'+ELD"X*Zbd7Zc^ZNqiIkbr+R%OZVLmHZ@kd5DLHEU^JPeE">6\^lsOsa!J&r`hSX2j.puKQTL1Q?>tR=rZqD0',?Cr>8QLr:Xu.kQ(.u[)?;G6H:USMOs[CO_78t]%b%B4'^9,Dp>E*6cgTk75DJ;K)CDS6!h90G]pY#!,\kc)rS0k$O8rnW/>!58cq[#chXA\=IObt`TeTj/k.Tf<65pC'SXe_^N?nc1d%fauTS<#GNlT"b_NEI'5Da0BPQn,V]eqQDcHefT/(!6Ef-2.3urq,D/1_Dq]gks3iE$0>S_!;'t38PW/)fD@F9f"PXuA'#te@F5PF%9kOBbem\i0&LSR.?&nJ80+gmWQ*sD#i3T.<b@^Wt*Z+<-3i)ifJ?`BL_b:mK6a7%3]cnOch7tq+D^IpWl7!pXDY\_=nV^Q@pf74m%Y`g%83QhPUbabJ\HrcH?LBD4lg->G_>0I'),k8:.Me?s8IjA\!.gi;5EZgTFT/4DYERk="-:J!-Ua1"XCEo`V&1jc"#!PRQN'g[B%3$qHG,C3lW6.cj-,tD%f0RPMg+J9B3C'CpbZDL!7!>`+S_8pqRG<&keOpbPPQF9YEVA7Pp)3Z9U!lZ=BBGGk.=4r?iUKP+#iG:HW%b&OV0niI@*%>S12'c3XIe4f-rg<mI6mQMDT^mpZ9q@<Z7AF[3(5)_#V7$]1C=(VNTS-dh2`0j895Ug4o:2W24i[Eq%ValV`g$[Wg%ZmOUJ\X27Us*mSn!=JCOau[_XqDjX>GCb<K?l\]@#>iC2i=ZsgY=)Qn;l1%,but2):`$$3"3?G-*9cP;I[POW?=84-E'_YmB@%d_%Pn'=NF?(mB-'>GulW$SQ#LXp`5h$=c>UjbV-H':gVcIMUVAK\UCA"ZpbhibmC\;(?$mh,JjG6X8k=<<%,U0B_`d3#4Pg_@>Aap"K%5%@iK>5mN:2+0c=2/5rPCb^;;5R(@u3p=L!^L%&9,jNA\)K=G/Qj[+Y\]I^)2n$ZaNm]RbL4O;Z(l>)aL^N<#'2Y]U?kA=Lk8PFR%bq??":mc*.jkj-b3-Yf/d5>]Eb)0RW_.QltZf0P10=!Ss1En#hON41r0o.e=;QQI7WdHZpIdj&^1)J'H9##b0#J@M/!dH0=%:)7&%[.N)d&"PZ-0?:IcMIHqP1`$flJD^47dSU*6P"i/]lF78CfMP$CA3'lWdu9>\Jj_+FFD8GLPr8Cf`reA<fj'RM3/#)\bYr.kT[d"5%Xi'o8$1m3JW:0heC6XF/S0X!&GLD'(X@_>$3\F<48ggjQb*$:E,Z;TY/.N+3lJmW62K[.C79,N?U7=^X8b%KJp8Vd/%Ec9lVM4C?%W3gk_fQ'RbMOoD#\P]Nd6'Q9WTGXP!RHDYU$%XNu9U`GZZ][4!%h#lTZqnr!g]aK0HR5)%,VWW"bBadD;<Pg)D^!i/eSo2YE$N1c%YG*W$;s6>6S0b>(<MTnpa>-9RJ7Dk]E3W18jWdN.]Nu(.bXp)hQRr%t_+2;$jZGO]&:dd_q'$n[M.O[q-cb73U]YOEQL?C\!fd>:%]u%h;,SD0Vkuq%3W(BrRch3GUH;$_?;'W<r^8UjPDLutlS64#mlS=UJ7MMjM9sRBH#]3!YM8FQbJsY0q@M"(<>fIAnX>J$Wap+JS%^'-n,!_RQ9,tX7fY_IS]!SSTk"2bLVM&8jDAZg`b`peP@+Rm@?"_bOKH.V&4VHr3Ies7f7(o3N\Hu@Fb=)W<`Z1Q(2&CY,u/HTCW%'\b+(V8BnF+=b"ICM.4_#+C-A<T?$GT+o9:ajS"CdK(GR!*I$n)P-BgiH,4`P;?VP.-n\PE']);1ee5=VC)!.;"R)"!jDuWAde23%7qXGG@S.do!a>2QAAJf*_T,/43#<kI!0=<-PC_&H:2h-"ZLK=N-bH-5W>dJUiolajlC\R,.3YoeCInSFZ1nL9g*DD^PmS\LN"#dC%>R^jC\.G-,pG:A/OPPW@%\s1j>6GKaA>q71:/j`\63=I\Ng!Rk#Gqj/&(1*L%ZZT;Z=C</)I)R!$<8bbP[+eOS#Y"3*I?sOXS^@1%'#DSl@3'l!$mqpgBG:G&"k[0g#+"@%'DMtb1tZU,5n/GpEA9mDW(J>/b$1!S6!,i''pWIm/])W:?=@qAPDEetK015IG+dg2DRs8\%0s[FiWW>QFI-$?G46+jjjK1!OG8fNFBcsB1W1Yb"YT69.'=!0K#+J"i`1q.eU`b7(KQshFBkVr48EpL((YS7`Oj>unqfBSF3P%\Q%7'pMK,'fF^$qYor!V8/<lHusuaejZ.i.H@i`#K/*M(SqiG\R7GIj=W%ebES;a:/4%UaL=V*FQ*S(S2OE18P*!\A<4>.u\DO7Jo%\%3Vs0>H>Hi:Ke[>9XTJrp=rC.28[lr@"%Eq$]m+V.K-E&N<oPK7-'L^T;lb1GFH@5>?D<lRX-fijlDTghd9N^oYu=$!\qF,B-ml?q%dK+e@fh:fFX5tH03SNOKbB_b`\1n/AQ:>CQ@n#4/@e>!#"Ff#5K>fV,ki<rUU'S0HK?\[LF>,)"+sKWE7=CB5lnKAZotjm&PA_"0%V"8T)Z<r;EUNXX!Au(<>E%EtnMa\4FWGKu`QSSeUK_#UZZ"HCL'cTD3\sjX!.74#C+qo,31HWE@54kj=7QnTuE!F[MSqiMA,ZIf:%L^-enMpi@'@Sd]tLDVL#p</@E7nXO$WEY>YN^TR#M&`N1i43:U.]^bti?5*tdV96`(gGdSU(tVFa)Y-Z!,u%;-0NE,i0/DKONPZ9%ip!\Y6/]tg.caA4F23WI:,Xno*g%`[]r([^@1@$p6Df@9U%&1(9]/ca;0_GLQ8rcbi;>M?,E#mi-8QW8'_P.3AE6&2>&h>k?#hT)%'(k+XhEc-bZQs>R!3[B+Gr>\%nQ,?mQ'[@'fq/_kC-r\N0"?_6=$C+-0Srq]K_d&o=]ia`F=KG[%9iTcl7Yb1WPL!3lAW,VOT`a1%*+6%of>:iYo(-,h&n1jl'm37@@HnL;AI!KE,U&D7$aI`i$KB93!k."92jULf+AMo,KM=N>s/4HYI!)1N`7R5+.0tn=I&)2?o:Z/r%\@h`R7h^4_J]q,:;+ib`Y"DF(7bP_hTOMB;"$$oM%$$4O6I3T!\ojur:O?\/K=jVMe)H\ajN&!RdFMb8%orR3]tX!Um="'Yg[k`e%:d3Y?S_UeiKl*CM/p9X8bIo[T\]c653hjUfflh'BUeC"MXGS*EP(5A(.8eTi#3=\K,_'8BhKiA%?hE""mUlkFZDpf/cYa9Od#,-$%M^7/siQtW*)^P,51n^ceM!bZbk<Fk+qKrjrVbi7D5\kmbXb=,+WT*:nRo#\8[ce^p.R[)TZHrn4c\8=>TMCM7LRpNn*4HE?gBMIT%1imlJ^shTfC!K/h/[6ihGe8jqbV]M*f`-V9+^I8%#VZI5M5ZQ'R;Pu4_%p7T/u5KJJA%=BcmqmW6rrRfe5-2N-B!o,01cDGHfs&p%(kS9^LTHl(&InTASd[.!6-p+oVa`p8c5YjL-a4MCm5mb)+BeE%`=%D3<EeK6gs@s:6.dsHA%@#m2L1Es!$!9$"oZUA#t]5J.;'C.%"AXcX<6&!-::!EqDXd;m^pY-:HJNUVM28m_j+ALfQ%A3mKB(7?oIK>734IFp67MS+)pfB5T$UP7*>helSJL8p7]I@L+5fit6:@ds%k_T\^JOT?Q<(ID3bZ>>p`A5at;)i4>aeB/t2kZsH33&p%j::r)c=42cX02V[(QK:3?km5Y$SbNa7G0<3XU$k?,F;OdDf]P_ZJ9Uh%?R?\n,n?gpm/MS/hF5&:laR_D5JVd$)7_q4MG8-)=1<U@$kfiZ-*X5%NoQY"$jQpD86C*G!2M2rrU"pT>-#:0"sJg;-!;It9bu?`%?LLD7XBAk2A-#5W[ddInTP:e?_J_ml8AP^ofYtsKj)i=2BPFaThh,*T0^+>.d.A6V5gJ"Cp&h9Q!Y1=1JPIfGMk)YV4a"9PKf=A'%g"[](:5Aqu[m%Sf6q^%][Mf121Q1$6`,;P7.n(9V?A';k!+80O!M(phEmope811YJ]hS_ae)oUpJ;L'Pb#teieM]DS"L.,gD-N<C%CMj;.N8g7XfDu9EAIc#AL:12F]L6TG/"Mk64KO2oMc$*Q^fE,l%5na2*K'tT`@u7;VFO>9fjJ*T/9K/2l)]^u&;LXkoolZuY\&$O%I+X2!?rVY)8.?Q5l-C`JaogA..3m4nig%WWq."e:_?sR*qE"mC17dM,L_63t.VZVU(m)"QU@"4G0p:_=a0)lmEje/6X.:C-"eIJQ%DeX1:;Q/a[a^bh5(CobYCl"f_+r`rVNY3O]eX>MNh(i9'C_f(iFif--m[Qi:-)XNlAA-oCJPJ]sg7pbk5Un.dhI31cgi+N;*$]Nh%W)L6P.d?[K>Vh#(jO>`kA5QaB*6sf;0I)%]RB\37\DTJ0OgTaYRGq:TKVP-b@5S"RD^jb&%^Fft,Ke=\oIVnW?5&k?ipr7pM5_r>%V`7-Q$:+#8=u8+7VD#MoeVk/tPu7F)`9IhCeO:BlcKcXuU/]N;V\*aQPj<_t?J3H:\/u1q)\Umq<$2YOI2+MPRPL`u)^p_H6%_r.%+K"O&m"45Uo-"f8n2b`48HfHtpr2B6:R4iDM<4((AF,W8$5?$'Pt`+a@YP=A3s)ctR59a<Iq3)SWg[[a0eNl7K*'#*d@;cp+4CHL%_+(`JGW3-V0GG1[=N::$fC,Dj>9/=5<*"Vo@6nYFjD=.71O*Db-li[,14g]H^VZ""1.@[6_6d]t'STn//f`OPoO^D6dM+s/dt'#5%KJB1QU]$Rr3C-mDTo+t'\Vb;2ii:IN_"BQS(rOF7=X&NVd3f`C`%]1:cn#DSb"I\H,<2EfmHFDZ,N+Q:`LID@bO5k+!?X*D@Z*f;%;#mGoSRHgWH[1(hI]/X2fQ3JiqM([ZUs\l\R)UKWD0@>).5haj@'?f%@6pl?B\T3h7!1A9Ml;`46.e.Pm]E0KUa[V$>u=)l5DqS+%k^Fu4A5](n@8`b$m>I>]TKmr$?$n6[g#RiZZV0a%,h05,,[ZqphCHTR-j9tM9Hs_9K2A3>9XI]k^`/67)YffY%g.L;O-@'%X2sf9%"_slE<0lLB/L5l=-CEHLBd9G*1qgsfBOV#7ZP+Bn]G(?!-@`^HlR<a4X2qIco(*2FE^fUAj#-(;0G-IpddgB?A1+]-;get(JnJ;q%3=ZTnb4,#SCtB_Se*!ICmNWJRMnrg+>]-9#3lUl.H?q1]J>/Yoi*ZoA^]\cMTo-+WOGXY=aXS,8;::!alEqo8i`LbKYJZ/;MtT/?%Sji*_.X2P/0S%mW818Y.`''TH8ae(H-sOc_-120S2Vds42Q^F!Ua)AK7#2d^>A5l:".#XR/QVSYM6M,]=XtM/;:N(_!PdA<^o!;_%'p$oPJ:qLkYr-N47(=U<U<WXEp<jij)us15B!Z(fDJYYM[FWg:fR8Ehb7;2h\p,uklcDsa:H'`L>@k8+!a4P(L2fIH:__dgQONT;%-W`rt&_iT(\!-K%(8q\\H@b+-e?BKQ,U<;H>RUtI9_+Q)c\"Rg(^DY0,WY9RfQ#1P=.a&b2>9tbcK_^GWa&3RRBq0<@T(]q2De7]%S>@E!m>JU^=:"gMH+FVB_p&f_@O7L9!XfR5\m;iN,AQ<BdS#8eF1>bd%'^)%jrr&[S^J%*e!4<0eO%1-pLtoa.'!P9RR9e-O#OrE%CW+d?Brcc"'5;HmV7UXu;\5`h'\DD$)F_S1T&#@<cH*YtM(P]8=@Yt^+MqYRf=(gF_7LJa$X>ce$fKDM/2AZtN(.5EO)`c29+t3T%c:#PAOcXU2e6mn7r*+0soJD)U#D@Ze8k;[W/m$bQSImu/3rlSE8:VE\)Z609g/f3])Gr)q1q'/Vdb9n["?9]OF)"H\@0A8+8LV]T%'f9GD&aXbE^`d&Zd.O*Z_M83%Lrf@_$>pN1Q`rmIYX),!)Z_VB"pF%N:=jMJD[DqrOBrtU@nCVVo(ciS^a?+=B`LnJ\erMj.ij_r%jk7HD-$P,R22#`o83F]Z#_D'5fN_/l5716mN-<\r=eqS0dqR$J<a5]gCagbrFhq`C3seu4D#)d!+%#j`6&LNr1a52ZBYXuhX_N9J%nI7u!*b,CjaN)ALn"J9@RRpbGo*,IMAmJ/6V<VJpa.uPE$=t:1KrIXpZ=*;Ur(S-5W@!RI7;#Vdj>a_\kjI('c6Tc1`pT)KX1(O!%!7=89_qpW/`E6(T+^5i")J0)QaeD46]2BGQa!5H2GaTjEd]!Se!EDK9_ua`b',hA*/u\Io>a&0==A5.MEAZXe@T6iMIBV$AYiDGG%9?VJD?),&HDZ/]B=Y%lj9EH.N/<qfh8/]d](Q6E[Z$O'qpjF8k+I3L]lTT,`WYjB>DLH%_6M_jYq%PoB88,KH;Lgr0*aH:^=iP\=%$J%kn4??DERW)R6C_E2TK=5;=.*-,@YN,_PC,tcg8k.\PG`Qed(po.C-OkB;j)\U(%GJ$*;NnO2L\O1Oj'HPaMkd,1.MDM&6?P?Y%-5[\.X4eFU-tJcf*.SbcWbI$keff6C#mK!C#_#2<Qn`P]bK5O_=6ZtKA-tb4<^$'JS_AuSBHaRuSe6@N6-(Qm1_d1tq?smTX!P@b%Gk#a^Oqu?(o8d!Wb@iWsdq(e(%m`c%l1*en?TX6dg3^.@28fr\IBgIQh8Nmu\-7DD]`-2\6gWAa$[]"QT^<a(_c\i_H]FI-p#]D2%B^/j+"q!(r,s(8m!XtIb+@>:dGtWmc>u"j_AL:7CKO&nGL(CSW+NDR'P#TIoMg'_GLKSG@<4-Bt,@#RrblIc/l1Sc`;Oui:/IlJ5%O]:;Rf@3"..j:3N&f)^t+:k0Vn'qFt=<pWkS`^9>[\OF)'`r$9MT,?"NU*7)O/9h$Xdd\F9k0RrH*3a>=TGqkZ%4p8n4jI&*mP=K%V1'+hWZ`h@:rcut>&o9^#md>+/]PR!7KKe^_%[FJ!X<\\cXVlE<N1W,mHT]<;D_d-Eu1OtV;TGfdiI%6,jLcZH*8I@Lh6mCofj/&%M$DhgmN'&L0=J?)1G`#eJ<sjt>1FFa(NH1t5L9U\Y%!+\ZfN>eli?AdRZ:X,!=%K0X6ji%pHTH=Rmii"$[N&aBc)"BG0uMXeaCl_%\b62C3*#Cq=CMW:,UJ-1L+NdF^=j>4fi,]X?O!!@$b`\*VC/Hg5!Kh0F.gRS%=saoXePbrr?!<7BB?MEEl>mBdmiho!`<1X/?*6p%>?.=XVkXEo_-M&`@MmH^_5,2LdMk!r.-]LtG:P\\.r-3a/8Y-q@Q)^).$)J;'e;LFmFe5b9"G0qi!.<Ea*7\?[ZK-O0BU&?'aFR%%OC/`'O;l)Bm.NNXdnD@D!,)R2@!@;VU#A1K"#D>0M'K7'0]bdAcB3]f^l^c;^dEKc55Z!@8.M]$W0ZH!\Q\-^+1i4!m(*iR!kS^4%Om#HLgC9_BOa\CVfZ`/+(^/5(HCL!5k*[*B%cridN\+d',SYme6PT=8OGsk$WhtO3R-JTR>sks&ZV>e>6!WQY!%h#\'mVX"F^aG[%<HDq4pDUXr&STC@BF7"[d17E,ST`QAF"C7Lj`9?n4BF7(-(R"(<N*D>B@f\_o)hV-H\0)J@a&Li6s90jZWC,0=NO=';9V:%JE),9%isC.Xglu<dZgF`C7ZntuP\MdhUP"56h$;aGeFkWZ=[E'u>QHj,4>a:tkb*bc4hs!7Is*T/BC8S`D#D];8-&"\T79o_3oe&PKjcir%*:g4``ENMPCIh*Oerj)B)s:C]M&kSjpnj!K-PTshg>dFEP4mfX'0JaeN^t@]UP4#>j&*m+g;e_>67aTR\IDD>L(9n?!%a6h[jQg5%!Et))Q/UpYcH.qs2I,e^&XJ&XT"X6^bUrHXo4qP>$Dno7d7&l(<MR4!<B,;1K[WB2IZI`7UO_>(I91M6Euo#-6cAkdYm+r0??L+'%>H/^_!8Fg*<K+.)-C8B]l=s3))-EkgF^qdd?A=(Wa)R#UnobluJjj>"XiSOGG0!?iOAX/h/ifGHP'Y&I!hA?n+W,#q!O1#u_+6%`%$!`g-L=I[lf@_@K_#^KP\nA@CDq(%-+;o)!faCg4iEf1.5C<j,=^.6WgMU;pDO7&P<liuU^>a`>#;O^8Zo^Zi<MeJHLV&gn2\Fsl%"AD?uCODhl$,K\Fq\U`c.'lQp6n_!I(U)?Rj?OiYXR$?>FK1a_T6$_2:m!RaM:sbM/<i!YahhuLB+40`BMrj_'mf@V_0O)U5KGt/%k]NQ5pFY$$8Hnp+"Y:52GG],kS>d*e'&H!+S.-Um)(jg1Q^F+p9%AO(TAYG(CegdcQY&cJ-if$cMkcu7CWCTCN^f&"/QUO)2?[)E%'JR[-\f@@Gl5+H90\_bq\gW%:"/*Qf4c#kn_b&5+A?]mS*3P&.MjO-!>Vk$aGcp%n!8l4o)-u#Y`2##m_4'<C]m69c%hTdcS\nj>%V<WaX981q(`oulm(\B$^HroJG]e_.`%tm-omBn&jO9#FX4]X-h#AS_S6!QM,iuXU)#M@649Onl/NIAVmgZU,f,2qcYX(8)"dV(MB%fPEYs\1HhD(b_g^YgDh#*?!plW-\en<F\teUHP:]7LP5MZA\2?(Q]ne3Ug$>@jGQWCRKP(l)h"HD-RWAl.E2=>u_H$$lJ01EOCdo%V\"#ZE.JK'=5ua-FZPil+<^fX#A6#q;<Ai6#oK@*M)kbWN"63NGA7p4N')qO`L98/;60-#Y7AaET;+9Q>blDi15OS6gAh9&cCCJi%:p1P>)^`LcF]h>$=TFJil%0+QE)_!=B4Nr\n!6iY-M0Gc]L4ET3aD^D4Wjn7KM=0"XBRUWj'Xt15j0hAJbB&)iEZ]=W0@.=,"1.d%OXDKWkm4;4%6R"<ZCo[k@c*L/LG?Id]Q7[c,]S><O6r;Y<*26h&T(Y3p)ubtO3#k=9'O<Ohr>8j%HUG!_bU/'&Y&PYClkDdX'EoW%4^'BAC%W;c2XjoSS.Tle)V/Z=<eVO]DS\0*"[-?MeSnV$(:1F:6eL-,c8GG'4"3ee0\D<c!mO%G:'<`f#2$mr8oVHan-k_1.[ZdD%1=FiE<ln_$eElRGC'88$*1%rEAh>)e(cDSpSf<?=8&$<K>'qB6Zl9!%$6,GVe7>a`NJC+\!dm$N&b^R,CiW*W9h:Y0e]N,$p/I\u%hUKB_=3=q(jJp&&B0s><=q(NMouK#sh@T<FQ&[l[4Uh:k2@GfC@!F9HZ]G3W2;UXYYE!#,".,"dpbASl%M+IgAET?B9$O$gWQ!ks%eht8(,a0hB$'VtMA\Q_fD>?jI!^#YF&(jcr*=]lg!9^6aJT2aHYsBotDM7!Fa=U?qA*4fl-<l?rP)ptRRo];8Xb0V@6ukItF^09g%f;k(Q9SEZFf'6FMod7i\["*nqV2pW&_=A_nHg4^OJj9AAfVQAS/)Ni(=UGM\^aaUSMJ<XTNfU,\B`RO7;[i=r`!!LGpjp,')4*H&%G;*@9E7uW^a#m=@#QQ/nNdKWeeORi-cbnSM%je7qSqogOf5gb(:W-_.\mV2WC)C%7Emb&72fi'\V*NNZGFcdD0"2fYo?T?JDSutV%Uu^2U-,kjiYZN#sK)L^km3]Z"]cc7AcaZ"=>`L*4fXLW<lBNq&OD&8rU_1_g<>Nhj6Gf7@=&t$ekqs069&bGc(7])9rn5@2U*Tb#%fNkUH@hrs#%Xq9*=kHs6-Ho+K;>9YTnd^&`RRNg%0j6-PcEcB<oO?"t=Taa,'8effPY(sBk:2L$cXMfebS(=;WN`T.@M4F@:fE>a%M9:-S*!c^Z)bj0ObqcK=Z1V;/89q)B7B`\a(r:k9267,9;@`Z:UM<e<2Ph2STp^Qc6UX>FKN/H]M"7+=Q2N`+.TV0H5@N&7j5>+=%\&G`Arhl'!_6k%ulT,u;]_8)c\/tpfbG+*]V&,Lo*>09%(37O"X/auKTn<[Eidbe=htT7*@e!:u$S-FUSKVE05[ab*e*elW%;(c:%BjY"&6L1?I#?J0FRRQic[R5q1PQ^P6)@D7Z6uOk*nk4V@A&F0SaV(U3'QZbm#Q#d"Z,I$K`1EuCfu@U%<'O>d$`olpJ)'C,!h;"U%pMf9!W,TpA>6IeYJr*=ai7VK_>8IYf2As-5;p7m(jF9ff8HCFE>@QrNU5_U_\%(ip`DGT&FAT\=^8)n6GFa<MBI>#,XALr`\0OU$%Gjl6:^`-"^A^OY1%]KuO\F'T[i]($0+p&"c1C,<X7efKj!Go`"Q`S)@%X*=3on_F$<LXpl)E1V0;a#(%fWATbKLDL@?kq=Fep9%N%%%t)IWW8JT4E)E=D`Mp]%@"[OeiTZC3ma=)S16hah$j%A5T@X]`IN"d-4Ari5MW@Dn#U3PB;*'gpT>[!7Ot1AUoIihP0LiV>-O(p%g13#I8.\.MCtkanl<dTmQH5"afPEK8p*#1[_AjJq;jgB$oTLR.fM%[c8!I"Ob*Ch9^%ksK?CiOR8lkX#'9t#?*t2IIrc2\%R:Y5j%5M.3p1[cf5/]Mc9pIieWO%a3aqNI>5q1X8]QPK`)0'dE7B5aWD]@3<J.^CZAl=cAeV<%1b&G/I@H$ufnphVPeZd"o,dQft/>KiMV%EY*5+p`=ERnlGVI/Pbd,%FUV(T]C?t_IqQ?Q=/"U)R5UdVh_lAm[rc4X>@QEj'/#<mGkV#Put_r-a6j41GPnU[^u_?LYS)-2bu*Y%HfpX<?oTMm.fgR6pF?2Xh6UU>L!@C!qrUSraT8<gA(gcC@Z#H'T(aS7Z$*_QGLfi1cSo/FGt7l%n5]((QSAd_L<]Tj64rA9)6in:%DXr;Ol@F.X7BY<57iD8=O=3UWrV%+LNT;Kh(WH6oQ,mJ/8[8s<MKhCn1;t+<G.U5egHjVnQ-BJtDN5@a7fcg^LI[Ed8k`O].Ol;M%mPS-2%n<s-MBN]&^Nqsl`CEL'!)3^I8PiuA/+/Nr'[34aId8rpTMgq<=VbI_6pC(+oKQnN)L:(,\uL<`[ttE]%$UuW<VHkQ(^3C)%`S\9LnM=hRpR!X9-u_\(E1O(1e7="ni)#WJMYhSj/ZIm>$:+o-7Jfh<=gbDK1*YhE,h,Q.A:89UA/RrOY)%`4XWk*lq)&&kr5UUm%O`)NnOhNSfPoGQ&_S]J6Zaia0kc3TES_,D[97q:Tm$87Q8h(mpWSAZ?bi:-:0)4s3+k&Y/J%ej[$[ApRQk]P1RKLtUd@<P=9dch5%%1+bi3<CElLi]1VBJ<qBG0i=;]:6[.Kc6=^>dS;N3`c5T6)Pt,^0%n&dH`%lri7f8ON&WBTK8Jo=gIWr'bi.B[RJk^EftR-#ncBa%<gM17<:+hMo$DRh=^]FWg"BTM@LK'XFm;fX;0>+Jf($$":JIi[Y0)u>HR.&f]DZiYrA<8XRN2$"Ef4BkNOGJUIQoEmT-i;gM$H<?%e"Xa5rNtdm'\cE+YA=hNGmO9n0t7+'E6^A\fPQL?%"Og#q^&S@`baC/me9Wn;mW`OHJ;5>$1T=Qb4#1RpEMk,Q[`pd0;lQ(k/VOE%;3Q8uo@[YlYl3)EqrqMcBmd;Uj<h49CpKRJ5;a<I>j6\UF[+-ZT-i;gKC,SEmAFL;P5UVi&[@r<[\&;_TA!Q4J0`lF9l(Q=V1JSe%LFh+E&;$n:+X;diIU$_Sh'F>Q_s6DHKt;e3,I`cCrA8[:B=FKkn^.!YAG^(Tqe<M;2#$l]Z2HMerH,:BPkQ^[FoM8IiMob[P@Qb4%-j39=;j6=jp=$,?W?l)NbnKuRk,`(@%GO[BmAIeo;sOHVUPo(meQ]VWIa+p:=ZeqS\a\JU*D0D!)Ns6]3hK'Nn#3X>[BCmd9@!/\%PA&/0_#-/h[sde-_L)UP:@90[<4WL,!Gc;]>:=4*5pSU-_+LE%P=Ud'AYHI/<$lgUq`>C/9h%&L?Q3gl%%3:C0e+]WOX?d'$G0cO%fP2nHh!uU6j.FEGieN_oYp,nVmlT*tCi`]QOAo3\jN`IJK4ClgOC6A8!<=Unlq3aKCXE1'B'%UKR+g[R4)4>Z=!dBMR_uo\"Z[Hg%#ml=^O;Rb>9&-;q6Ie1LQoS<f2>';?P-t6p"-?&*ip&Ya.SO2f*BnBA4T6Q`p+ggj-ALHq8-^>M`n;Xi$a2'*GeFGE!m+iPaV8t&%B!='<i,aJ^,de8M_Z1b$(V-I\]Z^[A/4)(%it%N64d&srL)%5Umgs,NH`_E4=t_>X.jY3OD[T&TEVGY6BNP_NA`80p>VdP*#CqSp%R#8hN\tWA?Otmkb@jZ"[Tlh'nYLHrZ2#559YS]mm])"Ja7,K9]VeGGbq*Ib0Xr1aY&[>Z,QNqK=Ld9'[&13Jj!g?rk@nShT.FUn'%*;C+rimN)#f%"M,E"u/A[c7B:FACU<5dQ4*S-_Ip8WY#?!Djr4X2oS?kURPA,Q>jJ`$F;lGs.JGYg,G"XW'7S.Yq4>!q!O56;&`.%ThNBG?n;:'cEbAgXDe#NjiaMZ)Q&I\Whmg_Zuj$PGJ7h6$k+q%2i:4Y"HX=EK*i?t`Mk-YG_5E%'p'rg>_+ZCd^O=&*q4B3r.i5a%OGKinXC603qZGc4&QgV?ifg_G*+D4bOB<`XLcn[g=A!D.!X%GGDu_7t(i^36s&9&+SP"5eWN\$+WeMq44sjF^FZU6@o"@Al'=Sl9%+UPHEaC1paHn!SKeq<J(a<SdqmR0'>GuUbORe:]%[M*80<gn\hOb3^(#*il[hG.iZmhl>!Yt?uo9p"I6PTO7c8rLT$WWYHr7aS]0%JcXe2l5IM:6a)drS^no/%#l>%7,)8!oPSJD#;D^6G,[_qRg3G>4Nla=AVqiH[o6GgVBW8d[56e6k/)p--68DS#B(D+KYh#Uh=%WQ%&m;R&q%RisP3ED:#Se3s%?N^!h^c:O\/%GA2]7^*4d;2*6BOXPJiFq!*F]as!BpO0NJ`JILgEM[O\k*<edY!)*FerOW8Z-$qNj;_%=i"LAT=Xis9HYgk%B5[0,F##@YJ^M(QC2Ej9ZX"q@r;RU+>.hb*uu6Qf+][XLjE`/aCMquf<O.nojZ89mts^uYT=oD6L1E:7[@ag%-t4="OS)=TBO+og)&%_[QDoF>>_L_bZt92<Q\JTEs%,nX!@F*l*>3!X+l-j%9&#Wf(B13TPm#:VJ8%pRStI_RXfok2B0s9gc\1.1%<`_q1Q%uLc9`?>mYlW@)eZr3"^U:!VE2=='`*4GF'cEt[gFMiJ&uo1$7`*!ggK'F3aUDf65sQ`!lCMIDh[AC&L)gWZ*:LXBp!+O]%;S6!33Y\qB2bHnqY%!A;.25EZ%3-qM.$T.Yph5`5TVTRcQNWC;qaoh,C'm"PFV\1.KZC*C)(:e^'f:l1m;,+)S%NN_1*!THaA,=d%`_WFtVCk!(R>j(4VUVX_Er_IRF`KN@n4=JD>p4D9lPHtml'ti_p!1pqKk(@O!rOYgYoF[L>fWM@s.]1g;\Zr;]8%Q*NUBN;.^SGH%;/d`djd[H%7POj9>XPQC6uJ)_F4/=I1g%&LXpHSL9d4t$<s-gR%$3Cgc=E(@V&GY+1kOSI!=bP,j#CN,=9'&#e^L[*j;BD`BKZR@%\j^KSYfUT2es=aO<K!<hkY&`U^SjA?94DXn.%LB$-D\:NO)lpLMjGtS^fYeuie<O__bfUBT'fd(+iRchi+fuoku0A]&qSl+&UX$Z%d;2!PO.fYD)+9m#&K7e+$Gn-2[gR49$5>1r6k][AeOo"EKO0@5P;#:>gIGJfc>"mb<#!H6ZgF1&Qq3WIeb;4JYc8MF2c.C;Qsq[Q%FDZqoK!dp:bn(\foJj4?@A]-=$6,u3K*ee%I#.qQ#Dkt;R20@u]*ht!be@//bmc"h7aFE<J.3Er-.bk)D%$&@8oSrF(>B7Y9p`h"%b]<W7;RkXYBJ^2T]a4;kI`5Nhi'^1F@j>Dq^JB.!X)BFQ-pPqMeS<rm@r%OV8RZ_bR0%2lhDq"p0nNUF=;F4[N6ppEYEfgT>3I<*%h6QU(6s=A]WDOmra_]gl)EhtdUL!"6@kDC0P:HsUjL].nUW.rT0+'`[D.B"KkoceLNh@Je-`Z_SPmHgiHL1\>4SBf]iRVMd(oY&Q%Lg?UrY/\lGJhnQK@dIn42UET=hg-M>C::,C(*A?$Ln/'/e<a:-k<?q].iKdS%CWTEAUYkda(\IU!-LQ*;u^or`HEq.3(2mUgP`b9%\Kk33>r&H?$17F(2>XP'&8'B@E*[-q]0.KGN4ml8k'MIXVQ$%,/\lOlCj+<Y'Vn]/hJb=pJo"bEJ4k.eX^K0",Z+so</sa2b=4b#%IL/l[1tiRZL>EQ:7MYG3`29i3))r?o&AY,a(AqnMAfN38TKE!I9q'-.f2Yq,pn0fiMe66SHn]J[[e+#dR&N1UZ>jNr%[O:nqH[]@%ot9^Wrt.+tf-<J]5t/s8Fet"Y#-;pMh*O]M/-e'r'B>f1h1[,,bga0LS5e&VZJ4]]98OgG&;9(e/_srV*3<3uo+[g!j<Tpk@X@dU%,TRXBb-A#_HMIOU+nVq;HXKdF=dAelLFJmaf4bR;:_q>K-`$-4lbNF=GjWtDAqX$7`8^D8o/;cfO)eYBTgI8N)QX^j_@/>Y?.KQj%ZE>FnGE`o9#[=Ms.T!aMn*8-f<\:3\d1Aj/),a;Lk['h5bp\\'7oKBqW^U0k=O5Jt0iAT<R95.M-)S4kQnT\V&)r,60X\?LWKoEC%.!MI9&.T&-h&XkH?tEa`=qAl(KfM^Fd411(MaCZ6@L(IUU0u?GE/U]dQ)u:FXI2TKHQ*WTIV&8.3X_H@V2H45fC_1,Y0Jf>-!qJi%M"oU>"$AH`^.rIi8pYI"&"q(AT8/*CeK?bu&W^P0:t&i1Y!FP9YER[;U_HJD>;X9$.\JHf;C,XIX/`eDEVlb<(d%STNFq(NAe])M%=&dW=XHcWgbs`%is'BKho4?U-X4b<1aAiJGa'JT*E*7.HCklG[L13Q>%N_3_L]\9OJCf@*"W9>UTEA<8I)J?i$*392(&:4uq:3n"%-)nWb2'0:$-?mHuAS(1_4fq]Dqp[a;+ro\g^8ukigQ@)&9h9;%U_jAcKs(=2f^>us"iXt*[j1=Fl=;$cC\@&Am7Mg$P`O;P@]LZg%.#BHfPV`o8s$hE<`=Ss>0hj;iY9GutZgU3j3DDk<E<D*f]/F=CN+/5nggZ2937<?2/m=!F]*A?DmIG?B!J.qI[ZFU*3f6F:MM3b#%8^FSn"'#=B!G=5h,kM7X:PC:*)URo)A4sm<(b.\%<)[;:2PIe.1+,*7<+t0%ROb<?=0Ifh(%c5f4*IM3d&T\MFNr,1=tec$5)jR4%V$U9B85/_>N1og!U@dD^-**ldVRid5`"tRHSgastG;qjU@g.8k!"GpSr&gLa'(e1Z$maUuLl+.!V(m$(bFkGVUWe)t_@AH3".6<c%;=4FjhhP)Q7'(ikfoR*`@5lHRkomsGbauanUDsu-i2D']%lrQgW*\J%APT"PZ=%+jZWr/u"sL*9DN$Q-Gc$lqBkYU35Qg&X`CXP#%%3[*#6#mFs+DHJ7F!05se22i(`^XB)r?V)R%X3VN90kT^s.E%gKY4XQJ"$"=@,p<D,::)NV4<30SOPr>ZQN[3CSf);NRBYoTj(rG%n#+S9,#[%#34%m99bu;TX.DF3Z=Z32@?@7:KN;Xfr]p")D0IUSQ.BeD?FQl&Q?9&*LCPE\`[G&/Ba:IN8%Y#9oX@d%5pW-KX9Pf.%hM"NL-GbD?e\EQIWsQKt=4djOk_a4bl<r,)2F8#j4n""OYP+LR.SW6$d=dO2Ju"0$mPnhAT1cR$nR<au"!(-a:5<H''J(7960niP%oN[`;=I3c7j(FQ*1,%=%\28sqOgo(<n4G9O?N[;o7T!n^#fiAghic+kAkf!5fuUaD;b[m/N_KXAMJU3N['Sup3J24#2I(sSM<n?Z%NuND2A3!gBIB9k6;R6QaDoB4maP2i:CYF!R4G#J+EYNG.#DAi$XJK5Y>H1N1n@V#>N`?,*G=<7)&<&g0Z;8oH1dP!2St#?0AV`3X%&1=`H/_XFk0&@6e=Ah?e"\93m_,R&OWPSimnMcY.H'Whjn^#m+Q<pf\.[1e?\T#rON?p3t!n7B:.WJKJIqDO@#9@nHRQkl/ChW<q%NiT$d2k^d"`Jimc6tgRg*]eO@S0SumWN$j4+P*N-?kOg=e2aOP4nm$6Lq/+QDdHSjE@5t/SR'TeHuMmdE><!C+nBagCL[+mA/^`Y%.!'8k#ROdfM22!fhOJ+%e-!2u[7R<``?:a+;3:.e'EmiF#eeB8($*$ZamXKt(.(_RW<t>OYY]qfLo:nQ?#*_f9q+pDhM$t,03=rj%,I,;)4(f.jaGj?\'I)n=K0_O7=R-8@WN8-[<o2CA[hWa@Bq?[b3r"3'!cl'$d;6"sJpn^^gY%0J2`1lK8M7[EJSf-5)einG*mujE%.uof`No6C)',CnPjk-#6C=sUR6Huc'AX/.O&QV1J'I\;;M;s,cVc/7e$.\_b1"XlmbX5*oK,D6\=(T5S='=mSCD)&ZERE",1%/^!%LEidpR&=jNR'?oe2T1J)VMGbTOJGfr/s<L[r*k6lnV,nBlG+]cOmG->JAIC4gJVt88$%]GhC0j*`2,AVb!4$?*A.;)(qmMb?pEQ[%Nt<3lE%WKU1KpkQn.'I+`DE8Mj]F@>F3H!"lshUTCB=)@j`sab),1Ms4V@pf/K_Wo(CF@/F>[aJb:o@/)US&Y:g#Y3&gAuqq:&pK%SB%n5,`Ne9@hZHLT`_P+=isfoNeYPGT++/hNJ2s=HBcD7Xl/kCn^joRX!Zm5>Apt"OV"QiXA5ThgQ>=h=O:di9["55>g9M&EgmhT%;D!k^VCh,J(MIia(W+fQlX4&LIY:n<[ZK,X[()Udg!\P+('IYF\Mfuk:U3>+\9P[nF;_B`X:i,\AI$BjQVnGn.b8,.H-+,7#D-QF%PY,=J1+#-T.mj=KoI[\<D&3DpY/Th/X89$$+uE7"S_m^+qpj*e;tEmW%;D19BhXO/XJFN9#?G1nZTUlS;!^IYV,bEA-<g+P6ZnNS%A9Ysh&]ak"aCZH\D)2%sYoP,8K60<eB>W/0.TQYrE_gJQk\Fc[^tQA;n%lTiql/B<5BXmsXB-_]g@S^N?'qO!`cI5n)sqne1]2*T%pt6#&L!IVO(l<(MJ-tAkBk_B.;M7VER$C[T#e_4g<*$Rp7S?e=;l>a[NCK&pqF*;Ug1'(710I#hB&h[;Bk7MH6PVC1+,aR7M@oh-%WiF^QLoa?)[ScCE:oeRW:b+k;5bh1scUq)@O7i7gh%e2M(6dR@U[dD?6>S0W92A'r%FM9B&h_lK_+^fO>GNCZ&0)-s7:if@isins%K$Ug*fU8,38:)]DED([1_,;Lhj1eSKoJRH'@DTmJf@626</F_R+P%'\H)$i8X3'.?D?Xp@_`PY%7sE[CgH7^Q7Ars6]&J?j3rn;7%*e/gUOBA5h),R&,Vub<-jR6.l$%5E>BIJ_N>G2c7):1dQ,SVnFY9:\:c7kO9_P`Kr3Cp/B"D,Dp&e*[C;,u.">.3^b(/h%OoA&qT%PIX2Go+ep=$+Q1*"D:Es^WVqQKt/B!.ZrYm-QtN*!N!oagedCCQXuLnMK1lGVCIF(M_3b:>g(A^;nLPiA3Wu`=)AtL5fcX,KsbRD%rq0unbf!`)U4b/If/CR&CG@^GE4;"<&&EW5[,SB2qg-BZ-=RE;b@Vro'o0i'=ner3N=PUTH>0N#nK^Fa>d-%VBTWm,*GV=aM6U7Y%/Y,_pU?823V2<Q#Co1]PYP/<Q,d@UPADQ+[<S)R?(pF=?9A4Sl%#*Vc?@3!gdUPfA2ZJ0.Uj\Cf@4g'Y9<??F"t'ig4'/]@>,oQ'%,tkF.ViF)VR7%%qDQjQ/M-N;Z/4^4!&Z@etl!%mH:<ccO`D@riqQeX$!,G,i?j%(A"+]+h?t)m"-<>S&Oc+Hb)O;u?"-5h+GVh#/%JV;mCc;E;69\6AfS7W*Zal]U96,Ye!-r-<.oO'qNj7jQE4=s^))<@krTqt"RR,P^".RoUVn!#8-]@S2.E0iX$>l:*,_+#W83\K\t%n]IU8!O_(/:hn">@oP_K&<q-&+)0P5P!RkTa)^ADR-P67`Aul,_:G122BOp+M<8<dk+`"`j+f7-H1titi#H7_873^"EBEk092Hn,%=bUngAIUbV!^5SrSn6Xm_?R$9s4&#9LHp8u8YWN$WH66X5V8':hYd,:AI9`WTTqqo0Vt\2)+b0)I4BNXK\7R$A^*TPm4>!c>O4pK%EciigqK_8V[,g1'JI8c2Wd7%O&H2:K[]h)rBl0htEiWH%jh])WaP9[QCF?6+bMc\EJ:`FXAT;-bf=<3f<Bh(L.i?ib-K\En6PUiD%YBk:Y#fA;9[gBYjEar`-4:nbjZMeFJ'iM>N%q,kn"E&p2UTW][cJiN3Z9IEi]%=7!_Bm9@W;m<uJlNEt^qZ!`@7b2fSLfO3'EF8Z%L#PDA.X#H>=0a12nWm`HR0)2UfTpHfS;%;KonoH`LPW,oEAM`+;p.8:)TXgB&V$g%#Lg(hgCnIOhJiAKcrq]ZP_gYZp>G\d1C=;Q%PA9Ah:2IUK;X)$#1JGV.6:I6K]kdF(h0_bsHJl.*]u;QE=7tYZgR`(#dl/Z)b%O(\3b;gmJ8j?$FumlK(17!A^#Dk>B7&=FS.'H$%q"1QL$_jMEl5=h8P5pYCR"4sT<E_mZ"Ze$&3sQ:^;RUOPU*2oN0c.5h>Bm%%hFW>(XsBL#X3.m;]=K#fB;n1bX,IY&[OT^Aj2'rB%jh4Y:N3Pp3=O$7".7.8QVp6;*0(Q$?Z=:nVbt(MpnJI>uXPuZC@_o@rCBXkn2r^i;/_,*oDMYSHN"fR</9Yf?-K^-j0qdm\K)\E@%JH@EQa80kZ*dZk>Ii)E`(9a'F%M5m5m>J8"<$pPUR@?d!*^mq5!`W?\5]8oAM5tX?`A,-,ZsL;2N'VV4.P#0G%Xq8iSgY2o,.(<]%ae&%H)hHo4V3Hj<;i:>WXVZGi=jND/"TLuV6t9C(=&W0(&dE1IpmC7SaDV<s.MP9]hs7t;;js@g=I\\43?(W0QHkpQ;m7+uZfRs#%eu,#WkBo-fZN5iLF>7hQ8lkDgBPAP;Ca&m[64(_'ppr19irFs*Nd_S=;7%%"A?6Z\<9I-RcT"rr9.$oM;ilkTd>9C"I+La(I<.#A%mi1l`<W,,1"GfmLZq/j?I2KR$I36!cL2NLEC+s13S^jBuXT],)ETm*W+;'DL0Yh42*ubYW\#<CZX'>m53l*l.7WA&]CbsT%"CW-%%%#]*.F-dR#d9pB9aR#Vm3D>p?="Hu2=;;0"Nf[s557YH:#J!2kJhCqsI\.3QJb2&mii2.b,2>(QTEKNO+$uJpYA>r/e;?;cP$#=Q%+rS3Fd/[LpKCFX`ZgFmOQSoe76hYTd#M9#WIC?G:;6,FSLm3%_&SQI7/P/N1e-A&3#(g,?F:"LiaD,iChD&!cLHN@O<%Z4[7:Kge%Ts>Rc?.t=l2^#u$4o6"UV=p$F67N=(90[mI[g&'?qK:1kID"dZQ,@3?7>"icSsZVE@^J<kZ^J&aUKJ7)C2lti'!1Mdp<sMT_R[%5%h/(Xo)PP0*B_e1!dNY5LCkfNod!QHAR*)-M#:-!,En(#0TF(lZX0D\!KKp$dQ3##D:0<56+;jBR^U3[r8OA+I`"CVV=UetSK6]eH%dG4CQ49lf,W<i2PN>&+N`Y:/.)!2F\_8B'fVqoY44gn*U#X)\)XO"^7Qc3B^3$/JO7kfTDM)Cq`2](0RY6i)h'C&W:R)t.UgtH@d%B:mY(UX*MeBh5>7UR>^V0QP>S2'OP+l>%&"JTcr`1iY2gn#R<&\\n5ZV2cd.'#kWhV-Z9b*kquH.U;;5fm&&,/6_2cdQ-JX7&V;@%d8V/?\s*:HTHqo9<7?;YC[AliAQcYokZ\[*5?H2]i/G1J.ndVOED_9<OY.h/!EOmd@5B0/K8iD4;(MUQg+Pe"QmQ:[N_l]-E[#^@%H/kXkE"d"W3LFTf`_jrP)IP<'3.FI+I^ePk,`\nM"r)Xi/_!r,"iqsQ-"#T(MNu,7m4)6r.#`k;C1]cTX>MfWKOB7f,Wp])oL<QI%F;dji$HhhNV2WYgm6`GqMVQI2WX*4DKrG:a1r>7;)RZZaCRqP/R\FmNA9LOA@!#R/LbW(92+b7`jD8n79*=$"JW(41EAa97r=EGo%7N9?$(a0aIMjDlkP!C^?iDWn8?&MRL;JR"1>`;E4OHF2&Q,0V'-tqV'C`&CeL9Ng.lYd6q.:SWp!Y&WbYpQ+k@E"*k!o1<tk3QL2%E%7E>GHlrQRP,8',7T[].47eW[2A%lk,,"dXTecu8N]8jDSI?F\W;ojN^uCRUtS?@gt9\]JOiTMA`<<l)3@rti73G*8;.V(6%pr(%N"I!:TFdZG@^1TnEYT'^N4X_nGQ](g`Pg$E=p3KZ1f+^VH0W$0+^,5>=8gls.LP93_dZ8R^f&l^KsPY\_]fqa+h!A.aBg#rW^oiB%5<a&c'?(Zq!SV=FT">c4NGJ,Z#Sr*(cmAn[[1I-/5:Hh-5qk4&*6-\9Zq$$P,-fsd=mr&A7gk3oHXa-Zn+3'2#(cL871gIBX.lIZ%W9-:.'d5:%$O*3FPfp41<mc`BW0Cmo[G1DVA!/1.Ng9^R'R58PNZ_<LbDlb-[7L(Ur]^5Yn[!:MOgd+chbXo//9"qrQF6d@"p\:A%]12Hdl330YDTi0Pnt<5gH[rr^90pGEK]:<#i=Hr;8=_+BXR*>?k^0=L_[uf;D>692,W8*tc1XoL`ZEOE`ac7YW!7L):n>fM6&f-,%d5!%I@guu_91Kh9#+8qO+iV+OlgE>DnA1PZMo_lAeHZ)M+?i2-AN(Mm"@t:J?-W()$,N!.-*#riIh2OYC/./0.\.9U2[:M?<'+j[%Y.CW@=YFgcaN_d2F*u1rAeeh&h7@'3\q46_W_k_W1oUi/.hUQ-[NP$uH(oK3286U\.[X_Y2ZS+\8lG+pU!sSL9O_T5-3'NP@?c.6%\!h'7D\D>--U/P*H["JCHY8FHZ%J1KLgdZk"8ViUDWG"Mo?]p!;-D`."p7SFboSVWab^;.Y>Mk@KG8]E452`32qeYb3(-5_G]qUU%4'RuZ[)U&]0#hI@%0!)#2LBVEl0m<8B1&FN]jmD2P"Jp]Z>LE6j5Ne=dF9Z@LkHOZeP2I:,Au`mc."L?<Pg5MIsn[orCk:E"mABM%*#4t"&QQ/T,j1989;2@@DLAdjZ3>S\<Bu*(CBWeD>42k-:1@LbURc3WKhc^!G'2;K@1!\V4gb"F:'90U$X*l269!Y&Rt`PdF190u%*@/p7Z>,i`V7+3t&XrM5\Q"-qnC`P`_1+](<;CQF]9EP)&-G6A7YJ`'E&86o.sqo#VcH,EM["HLn(bg#a?#/a+^,;P54.Rl,:6_*%Z</3K(r0ORp5mQ.,Nu3GMcGaXg&[ba`\h)K7&DQ%$PJ)8>FEM;[ADCL`7f&4VpU8h-P!1W:V6!&'F`hN-LI,rFV9;?"8t>Y77IMO%o\'K:IS9;s_Ve,)AFJX-&;EbI\IV\&#W3"M2K19F-RNNPds]fcE4[t#E[kj#iTMjlHTs8996PNk(a[\kHnEXXK1TjuL]-4iXP%CF%CBmfqbO$G7Mt=>9ME`^3k<B9Z6L(>6S;6P*4]e;%'aXaZO_u?n=)Nu:o1eBUE,&?Qan,eRZRiL"6j9Z\cn`UV^)QDba;CP7^N,Eh%Sqdm37>So,<2Ptq+8XO4<BF"\D*pXg<:iY,3jq`S?7Oja=N$YQL$CbBW>rTWf"5Z7[l8"i&iLLEpI`q`1:BhHiu4gk$0?A.<cTV(%h.AR+4MX<0elYKV9)(LjQ%R4Eh)]`Jak.[Ym6)=+SU=Mp?jp[RFTWgu;%c$pdA7Ca,_Jmmf..RH%@R>]7Z3#cVS^iD`El8U6QX5C%#e`j66RS0(^64@]QQD.C=jO`m=9WR"-nm2,X<p>Sn=@D3Y_e&g'7rSpm#?OSWm.):'o8Q>qZ/@!]L>:X&?ApT#t@5)fSeWq4FMc$%'[VcS]WE>\h"^r_Q&$#%7*/h+(diE<N5buq[Zo3X'>@V,i#*AkNJ3$'ZRP/p+WHD)&iK]@fkAn!4Z;>>Yc$Yt^icZCbn$DJa7C&X%q2O2L68ZUW.$#,U.`Y*#840fsDo>.(`Blu^DO9-)(k@<r?V5h[BOiIpA@&*?"(oRn1D;gG;4%_Q]<q]RdGEP5TV?`QC@dP?"M5OQ%ERu9!/i/uh]GHsf3Fn[Xdc$UU+Jrp_ZKe;N3O=LQKZ%UHd9I[7WZ`D"HKD8h@d9,.j?+Z#/qYI*WD7=`BFt4OY$GC9.TQeW++Qp+%HU$'UHmMMj^HGON:uj4S(a[<6.#TK?.]FR,l7t=q"UMCVM@FuS=7BX]D-`8.^'AMPd@LgW8P*_8E(KdGc"ZY.!R/naMHs%5]tBQN%h:_J9KbS&X8@/uo31MF2/`X6^N34o!.eB+&`t1e=oi7\l=gP5TD_*?U^hkM3r*V$2bC)bnBNPY3SMiQ"E]'Wi!8JD)JqI?I-8)(H%>QtSKg+.&>J$"&\f.%3;6]dm$=0Y5c5V,52NMP&tlC7AJ/8)EpV.LoQkqNmnF`WB$rq&\J2]$4\\3\"LO6;^ABG$#:<_h2^9kW8b%R'Vas\qU]=mZ#S^^c?^Lo1#=k/@>8>8pFqM2L1r&S/Sqj;5!_#j;BL;M3#.t!FR?nMkG3cO"%5]-B(rD9/?aN4cCTcEZAa?8&MD4%i1K[3H]=3>"H*900NF`a-R'EZ5055&!c[Wj]2gX"5$GIZQUobMLp_-mVGHCrKReEm)WH`:d=@r@Xl/4o]4*V65B"J4,S]6?<8_/.%]hm[>[(,0]Ef.$kV/u4C83qu7&!rHCcsfcN(C(b=77);n(dVW-/,)L56(_&lIW)k"jEctGUadErk@jB.<.bO-'VP5#eKLhcL`.\>%/W#aWRtN$a>bH\;.H"q]m-L*>fGdhgR'mA$G&J6Td%Wn785XcZqH8K/SRoUCc\.9_`*:A!lI(:A2_SOe\Z"'KC=?tTYN^@8Mp5,l%Dq(1P/]+,J@_#j/!lY5$Q5e'R@o43L`XDZ>-WXU@>R3,hKGh1XP%V`JLt/pe)\BbeB=9[J`(.qk!X22K?'WDJ2C6WA;?u/GH71+!%FV</u4Ms^l0*5mk&W;iT4jp)BIpb*5^>:o.Ta5,@[8GpWjV_L5S_(0BU=joZg_FDg,dT"idDWg=P7:2NDNpo;^e:6"@"ORf'aapf%U#\>5Z:`&*]cbF68=5,iC>+qL!548W-aBtZOAI?V8E`dOL,#B2VH<5>UXAeC!TO$RhPQ);qbf^!pebJH<-H1o)/SI@5O[7@IS$%a%bJDb#6JWH",a[hj)XjtMZidY?9)`!aUUm>u/3+Y?(sVM*'0D;mqhQpA:*^aH(ieQ1i>lRs%mfH\<Sb;kfQ^;DSIT%k,5W?@D'hq'%Cf\tdODSU,Q\3;I@5fT;0uBL6r?S,_HE5L4>0XFH@$3pjQ4F2nVYgM(G+:m1&u]5\Sa#5m)6AS8%Z!Jn\X(4oMd9.L[ft-2aBVo;%Iugt:Xf^=Xk`OEkWEO7W2*VmDM7XOJ$RJQRp#5X;<s^Sf*IOhD[MqIF-D]TuZ%`liBMLlknKmfji%-:B6A)?@c9gC!/p&*?2)86X%B.126L'B&&X(jkYg`rr#Adb>2@a$'"o;;3?iZ5%kX@^K[lC@r+P#tq^+</qPJ=E>j#*/mh'E-dlEq["WT?kM,k8j<u8Q_HYZ$ohn%M,4cN3>fC<++ifk>1$%P"ec)DH5$P>UmGY>\2NVg.N3jg/)CJ&q$BoA50cb0Hi.8#*XiM=>o/7JW>M`DG,fiZ<N+:,FiA]NCnAP?%kZB1k_J4]d-4=;4(=q-RQ(oAFL4Zbo[Pb-\^m='j>rVV'W$qmX2)8Dt`&"7p!+=YmJa$+0EufSCCQl86:p@Jeg>-WglR@!K4BPa?%ONa/T'IM@IRS(,"4uU*C1\Jq+-Z3uPfR5ne._T_PcXJU_5G:P_A-nLOqa,n:![6+]&qT/LY*MfY@.'b*VWW,^OW7u8?,1OH9"'HX%C^/?V>[1gDS*W97oMBYsJYI_ik7C,doHUNj))3!8(%U?8God8"_AcaljXVX.#a)!QI$+ObE0e5!P>K.Wl]aH@M5@;3!oU0nFsJB7%nGh#g4JYfHhBim$(!UI\4*kN&,,K;i:dETgT5-+hM=m#k'8!'!0!nm)XqBJ>;5sn-0S#idCUn0.*qA`/\f=S/hu]b[BFkmb.iq\1%"!p:$VlHNnL'$`A<AFk&6L=6j6mVdX<*W*;N8pK$3[9`jJ6nT##q#q4!/;,!=jDij_:Pukg;&*#=ogLFpDN+mBc^`FY.>nCLSV"8%Fh8,&]BE:.H/V;FhW.5+lsQSkH(:_(,N4I%^9_&N.!pc4<+GmZ&Tj.;2r*Od+Vd@NInogP8SC%>B,M"!(*S(VUYQNo.5lA$Mn)r,%THr#C@l357CIH7%#&A`!4Xim6$UT6MF00DNCEGf-'=.iM?)&Q5.rg=+=oTu#&IkYld:fLp>[c6HD$*WY2B/i.G,(EOkBk0]?4SNb%)_$L2l#B6u:r4JhM#AL8"\^5H/%K8iR1!kECkUIt]epsRDRMJ*^ZC=i5%LCO@7l3WFUS=:0YIfB(^.%>$7\6*2-9!fHcNib=>$(?%k.j!q&IB:>R-b+$a#.&3H=tX$jJFYYeP,G1Q5hh#>6)XDaH>O77[19KH,l=II9qOGiQ!IoKSq1a1C`[l8N[5;dfB/:G)X%bqd`?s%8hq\U9c_BK#".VaP$)QlWVX5jObSs:"FkcOK@(Pe/n^Id]A^CN<bjG&;sI8kOOt_=*.34!E6)?ieP5X(%k+HHG!kk'n?qOd`F/Dh%H`$5:8po6nZn<r6T%JAJ%A[O<G#gID;QfMD*YA?:s*VJXR#5m\i20(BiF-!U7F'&DJm$&R"dJ`/oF?\.5ft5$BZ"JrYir=olUl!C%?>TK$/$W%2$46A8lQ7Rj)]u4K*N5`cJXR*Y\KNrM-b3dX+e:;2&M&O/TLCInZ_fen>\[W,Fp8WD"&DB&mEsNFE(K"sm/2/G1kj0n%iE@Xr2oif]XQl_TauN,ke7mi&3$*o$\FOWZm2DrA,=RDZ_M*Rgk3'W*`4>SN($](U6<#E]/?T.4]a;ONj>5.:*"j_o=A.XA2^;DT%/PF/bdl/IR*7%;E'/heo9X",*ZKm.0Mr&KOARg+Zbt?Q&=#QV%^;D5e"V%)6([9mN$%j"pF9,N.:Si2J?6AHHE=pk(aKn6tnGL+C%U*(G1VNbCqK:02?W;^2MM:lKJUZ^7=W&@@egm#?LKSH:nM.^l7jq_m/:9K9dHGQ>S:bTf+3JFr;Me4[5i\]8mC)QQ]pZNetS=#G9%5dR61b%f@1bVKjJTBWs!Y"A!NCec%S`(2FK6ALL?[T!<KgWj"=j@1nse,a7qOXsIb8A1jf(QMK]14BD&*pLg*L3FHPF!X.T$XAVb%$LNN_bZGl:2^+GC.U-PU/?ZrTWd%j$-m9ic*9!)m@lkC?NAa^3N/e]o,pWm)i,4tKAdVX&n&(QFRLuOD"r/P"Pf!,>O%(9.gS*;t%9GC6NRpM*O(a"ZlD5"6A^Mg3@hFKE5FV?iW-Pqme(tF<WI1WJ`\PY,[G2VRUYkXN=F8&%sKV3teO6ClDD_Zn7glR*j8u&PjilPlR%i0Fubi=^I+!h$M`Pa'uX/8?,_#@P6eiS*3NE_(B?S?"VR`;H:]c^dF<GVYqmUR6_S7pL[0b$E=sWUV&U1oB:Gf!:f_"73eA'TOZm%j%*<m7&]o<Wj41D!b4EE&!r_rSB>"![7I6.d3t,QecI`'8!#lk\</`UUN`+TnWqUT`+n)kk.WVia_:3O,`ET"At5^D3Fdk"EX4.#%1!QRCYGi)S0+#\';TkG"W,4Ou\tZ(N2DAd`@5@\q*TUIlpa(3-/c],3`,g[,,0Oban(2P9%nSIh&lR'V/.sDS-.S1G>6la;eSep]%F',B1Jo0Hle/&Fu635"-rQSNQ_-3'4S:p:@3J,SK`4>!j)=1QG`m^AF64N^(CN!?VUI7Zj&r<sg]O@KS,"gcC@cX0j6A_UOo=1q(%YQEO][/q@&/o,^('WQ9A@%mRnfb@"?GT;!6K0pA4"sfTV/@1*$4;)'/QlKi,eD_U@aq!^P-ZM5@GnW$>#J7GLJ?VjEgiQG>Q"bO^%/>ZkT4cC[h$7n",,Rs9STqY-O/4XPcdg1aP+^m&346>C4Tu3V0A"1Cg2%m+j_hD2'@hDe#p95Qkb;OBh$/VJ@8k)31?qA3#F1U>1%<p^%EY">R*e:)2rZMJ*d+*IQ74W<J"!SN*-Cm<`?17`oQcQO$X[.FLqHIWUcSnV%X6>&82Wk8er!&Y!._.Ho`/7=4OLF]X,!:)^$%$0ZO-1%f:[31:'tTk1@/$M<^IVK9Du[pV3Q+7$QK)W!1b%c/O7Q&&r_b:C/r19FU$[[^F6+3^=EAN.X4Kfua5!qhI4ajrU^A6D8P%qCNj`,Qb]74JnP:'"ZJL?j]cn$/UmrIa?>,ltXW7XCC#NoZ!CI'LMOd_2),dm/R=B6Hp=eg\hE0B+U@94tlO@X.MGmd:/\Z0i2gd%8QJC>.bTh/F*,_X0Ubp$feM--8g7$m^Mf-Ik7G'-?f3*W2Rg,l3pb-s*S^B]hAl$,j;XK<AjLp1i3MsHRnpfr[H)F`cB^PEl"ZNn%Rq.X1UqtJo&"5h]]1R3%[_E+p$160APd7Eel"VSJL$h"R@hlTPD_`k%BiRrU6U8jfg7n&>[44YhE8>EqT'hco?l:c6SVtE0>R"[$%`@[TH'+<Mp%'UBBJ4k9j=9B)_/R#88MO?J0IEj;%!i\_V@U8S/XWJ1k3=SFX:`FIVK;CB[_$Cahc6]1ra;WNBXR2hkYLJ+Q!(A1H%C3UtjVdOg063m[B'ji89Sf.h8]tsbDfA<24G;Doi)s!^CInZIT`0UH\9E4Tq`q2X=Qk3:@IM)_N^$I:l@dSsoZ:Ar$L,#TP,u?=t%9-9T@-$#_P2s@fGi^o+Q@s_p+?N/[K)"`NOZuM205M5JMC9Cu[N#E/$X#EW`.itZlA:$2r?P6uCFMhT)H)qM"_GLu(Wi]_RP]TA?%N/!E<4rgI'+WSK&OK]d+,Xs>BTpCN?"J]`$A0S94B+'QUGbd1!MO'%"(u`"aVdM1%4_nL/`DQ2-E04g)Z-OG/VF;_?o;&@D#f#!\%kIt@B3E&HSXC!m>D,%-X$j@Puf6+6AW(Utn&fH@NQm&C/.TRM$59!1-D4m$*,hkj`_1:cYEVHRGC5]^%dkp<BDJVjCFoY1Y@-2$m%473d7%Xg5FaQZ_Pa#FG_JqJKh+15@+9(WV,H@`!B8f?^7P>"<RT.hs+1B>eA=;liV)2e\cTF=js1&$4E[Q-NnN'Z:J)sj+j0QuL!%5Z6!IL25,&!nCKY\?3W(0h6\qfd^p>\3.;C#?=Tcnr*&;7O+WsjI(TP:;jFN@*GmGOO:3pC/*'/Vq]nMc)5Eb8-Yu)c1tgMW#b?d%\hl=SIR8"rQ?.j6i4S/1SV\;,m90g1s7ZcYk(=1'^]0AJT76@lj5CN`]Jt1_rT`P,Van5*gZo4Z52Eq4]pOX@q"K])U\!lpVLJ<U%D4XH$q>Hp,]Quh?#SN-dq_+k^r6+_f5>Iq;D:7RuS,`>'[lL.FT2Ejf"<-TW-k;/]D1fgH6$tX.#J,3`k22Ei&N;!Pe!E:E5Z*Be%NIWc:#Pt(Wm[lFk*h@J;0;]AS=YRh054DMLrD\7n%NRHW,0cMs4>LQ$b[2V6js_k-@C>)-]=&Y9Ul6nZYGl=E0KKY69:lD;<j[P!%Rh%fpQ6/_2Ftr4k61tO9bDC!TiaC;HOfLV0#K_a7AQP-]HglFJ&l3I@Ae@]U_LX'1S"gIV$rE]Qg'paE4a?O74e7$[8/G#/51$LT%\F/E(rIk`LhQ:f0p)a]^$-9*9jGhFf(327oe5GcrO@a#sX7KaciU*qE;<f+F/l+M*KR]'3aCc&Pq-<T#/;,Sd"iT;P2).f=YS;j)%1&g[CV-s,gL_q$f8C?o.hPfO_LS<GLVN$Bs(M[=<ct<*%[4kBsIj#14#:ueS8JAMAcIg)1)?)cF_m>kS,;LVoMsASW;NTX%6BN,*%3aK(D/i8N22U""Ae8J9!R*c#``dfkh<-@DWLm"X;7d)fUNSVZd&*>rp&ZJlhP$c%8*gU/bK`mSKiYZ'`>PO4_&+YI7FSBH"@s1*S%J08V_@-4+9SR=I?BUMI2-tXk=7l<Lf$hdC#q_<@Bpo50W+:?3V$*nP9RlHqXEZ&Q=Jq7#Q8E9n8`'5?bKIVhRX/'qP+d-1[@l`R:%5'qjto!pW&E&poi5t+BZ_GMMn-(uFT#b*:<j0SpkOOBX]7[@Gd&-,gTpgZi\!9P7:Z?o4Y:qBuTa5l=(6/=aJe1M!$Oqj])W`C&"%W@HpeJ,poACHb*IGU"I<FFD^q^k+WtQ7d/[FWe2jeZA@\qEj8P&2>ZX9q!_Q4F4pk:KT@II_q('2&CX;#9<abjSG*"HJm$l(0M!Q%!9=kjGs8Pmf"puJGt+i&+;P2@/(&l,;rE`bM&C?p!gdV!nIc8<-2JXuG=lKfmd,3!eg&ONf'HK1P%,Yt_Gk1$Wh]4E1rMb!#p-##%H'F%,Bdlh+?5>7$[/OL+L5M1himOFk>\""/ZSX8H_G;Q%.%o=6Z7H(!Mb-lk_*RS&P;jMIGa]*L/Vk=Cpf_l8]rKJ`EmCP+`:BQ;%S!4rT\\Td^NPL^)KY';rQbSc-fQGYV^-G<Ii$D[^ZkA7Z7V7TGNZGYL*F&Ygb?8fM4&<TJaZ2GbE&o2@o9Km11gL1<FO-&""$;E%%Bp"-q3_=oSPH#nDGncnCe4!A,i3f0)j2fi0:_!:eALlZ9__aj3XI[KtURK-c)U:f6])@S0?#2BdRd"t6'BfmNL8r0fV]qhiEkEjo%FRl`I8GfJKZkZ]g84$)Z/PL1#fj-2=>?$bl<>$l(;^QPR&rjUrq49$(S8rJo+'mFpb6-;U93p[RS0a$Xe47ZS]2<cT#+rQZ>nmI3%N)a?FI)SAi&pT-oqmn`J@<PTK8p=k?:0+n>9.r+nU",!$!$+=%G\D8Y&bnH:.$ru?kXq2>A]W7eM/,"TJr,%5b2mjGd<!k+C90K\%Wa\<[e!`Fh.r"!U%t=))a%rjV5<:sA4h\Kf])HaAo1AQT'4Qthpi,j"g$SIs`J_tG:S0g25(7YRg#_T5(&`+CZ`2k9VZ/c?TliQ`%*N2kXei?NM^!]Ys2/9J7k$Ri\?mb#XSTS1;ICH_"e>\9^qi9r*j2pm%+'djXT18IA&3.XjQl+eP/c*EW^or3P*mUVKC'B!tWRrFR%*>_ti:M.H-li9T_.q*M\\Vg&.W;8?"-p@[NHreG"5aHS=oN+aUBl8VZCY=g:kD1rl'TjLB/Cp\DMahZ2eVY^X]BmS26FEKRBE13l%GL'SVpnt)jmQ5cd2g90T#k5B^!>I?$#,h@#b+d%iXpG<=oL>iK2KD6BqlUeP>i9t3";&T$n)XU-0<4.i&o,AN])HWQDs7.P).KZO%N0Zhj;a]\uEN4!i41]>lm=d1B,BQoq5emNG.Tn>6i2QisFkilV'5!jk'0CLZ@Z6L?duuI1/e"X"%GV6_#eY3@6H'?go6jfcG)^fB%*\1,c4OYlT154=pZq:-Uelt7NZ^<brN^taRheL^<Dkgs-18?%JRq?cYN#p\(2bs>a(M@'$kQX-iH'MBHDcO7>GM4m*+UJI.Dj_<1%1@_Tu![fCL[4#5]]OV.E9l,e/>k<:ub]7*llp._`L0+,^>7BA[$A=LahLl%BhB])F=<*'G5V)4mB"'1Es!h'O'Fk"D0G&lC?uS%I%)LJ,2?.E,p-9sog^<$([=Y22-ULDe*C1WdIBh?pP/XUG*fqrZ/;$ebm@Lc0FETDj';aAmk>!rgp%#!Dj#r<!bUg"04JKQ,R3FB0!%f-4Z@qI&2^B=^>=&C`Tr1r0_\RS7c8lWGWNM*E3=J`1^X>]W=ekKmG&SofCJhWVNlfVL2*4[$%Th4$n<2,MH6L]CVIErX6MaX`<8%:SsHoiH2,m0=*^&]dr>&Z[d'/-]^[OM?5-`oVt;iYL=Cd2O:)2B8j_gcl,l/4B84.<h]4>eQ.fL=ZDV@#/RNdafJ_L&k5]=;lD1q%YV58o:6QnK5o)aqKY7rOS)Q;W)&:CdZD51ll<"+93=#`rpI9].#:/sd@>jnRK2leblO`VpRFGA!J@NXMAV=Eo)S)D)(W.?d&Rr$)%E4)uO9=B`W2G7cG23q+X=iWl#)bP/r'F;tJN]q]G><1g>E!Ru'a$57ZC4+6U1_i\aJNuq?Q6tGgLDXT@R?]`ohSLPMC]btcpDR*?%+<H.8!2)TdIJR'R,RC.o0ZR[faEJ4Siq[8se3PKd6s+3TZA]A-iL#h;e`G/?d:JD$Z$B9$+Scln<EY56@n><e$Dn:jnR,U@)3Ld%%[:A0/]2/K-=e_]Ek^sRGK3/53"NFJpC(n)<25$m;lp:k>fd(HB(2>0pl2o=7<>\o=?pkF+H/TEQ=WDnI)R]J6a^o:*C(0\B-3E?2%>k>>-+k/EWZjI-5:G/]s0R%:`B(PE!\6b2k12oLojRPZ)B=79tKR7HqXg<T`#'7Dr\sS6L-\8U<W+i;X>bYS!_plrk7QNr)/tFZL%d.[5Qe]R>01)hkQNmrZER[_o("qek:.hjrC<)PQq#Wfqb<Pdn7=_;b=eRDZB7t%d%9skA",T'<C%;Jbu$f,fBLID=^ELMp@j'%tA%Rs_<1<^<1Pf8>ItoVL(nOm1-C'YrS#5p4*p)Xr\OZl'0+%^m/=7;+%6=TjZYZ/_?.:9G1Nc$\D,eg^.oTt=1Rd&[V-"_n3]Amp%'%(l[Cshc>HT9S@PqO&8UFn$FW4$E=\%:sQBIjq2)bVI7n.XZkkVpS^U46VZ]tZA@#'CA@l2qREtq=?W'?.L+IqZ$VN4mQoZ_jhasi%pq`Pr4*Bukrf4SXCt7A`5gOK34r4[fH"]W8fIf=G0p1>u3NWK/Jun2'klu^JR"c7@YJ?1Wg,ZC<8T<jG=\Q!uI'@N5m[US0VDmba%+A0K)-8:cMDU7"D:'=Qj1ga9+&q8oJZb-K1W++H9P_LP'mli*\K/5B]kp#F)O08CpBs9.4">>se-[X2ZE!AaM`o[<*P7@sm;?"QK%(#bm0j;:noA+QQp^qsJfQO9hPP6"pu*7OSBXjTYa@l7YO:DKg0-)hda*%,S5'(3V3LPu3M[W<83$$2*fg\d.0/k)a8&q#`_3%U/[%X`\G+(c5=A6ZH<@i*cY(9G.fuQQh6Y$h9d42<@&5c_;*)2DH(",t-%gX:mM3jjBTKRW3"3G.kuuPBodN+<!7#EeYiO7':opOpPM/%B4Gd)^QcD%#l'Q6SOr<R[2K?NW3F^5e138"`q_U$,fH3O(#@)7FtE?#XN=VKLpU2/]u-LRMR%V!GqH6Sieg/j2?dQ#;Bi3.]YW.(%XVVsgGc'/&Um$`l<AC$CKHc^Pg<`00BiW@:F&8US@iQ@0.`_/E'`q"OV]:=M:aA2cc!a:\`J?*G=@ICR1AW,9<X&Da.]YZoKQo"I%9<s?/Y^iTY7)GQY%3<2^#B/,_"M]&GWu[.f\;O0<Vi:42$($jWMeG%#V0\k3+e4?1"]d?H`6e*c$u-hT!/2&W$-].a;^K1+Zfn>W%(X%?k@0i`6[25(!DU_gsUD;:bN#JSX0o50l&2AgHoF'N4#u$$"-se<oEDZmi7(<gj/,+s*>t41^A7$773/K<o?H!Zn5Jle[<]YZH%\^>;:UPq;LUsV_9@H/7lPY*h\KbliATblOTpniN<?uO^]>5-NSB5Mk$CM+__X%$>HK5:1._J[2]2/7.WAtLh'(ZI/PS3aB4m,K_Q%HZ-7p8j[:p7g-^*#[75TJ:,R<PG(6?l+2&A*X"/D$J=.9'a*9oX*1roKa:_4n0j5^O9Ys!DH!9q$sFcdVEV?%%Ur&[qjYQG=$m*#%L6$CEp_W$S.hS::c?oMSCJcIt^5m=FE,I#WJi/,n*rJdV2WcDm':QIu=K7V^C/9=<bLm.?)q39Cm])6hV]'!3iK.@5mV7ApM6AK\%s7t6I2-uJ\l.aB)WBd3!(!t)`HY=dL2\+t3,O9p;JS+&5KHmCEk[but+54_,WLNEQjr5Ndg<Hjb5U+rrhIt\]'4*NSq!E1L>Jq8_%FJIj!O"oKJa95qc,ROi#LaM'tLGT&q]MkOi$,:b+V,607ZmoG,[1Qrr==:`,2Qd^hXhpWg$$NB#%J[dq%Lj^HUq$[T^i#OJ!E;a]%[^g*;>@nt/;!sEGT<<"^TVckfb5HDEBfBat]f`m[5!@Y,S4mGho&GdAepQtjH].gqbH#J=[2a>dZrLq6>YdLYX2Y`V20]"+N3snR%F7su6-Jsdc[nqMt`DS'V/OemL1k\V;"/4?<<d'9>gU\kO143G`V2;mRYF8@H=&IUPWrRfN!NU$<[VK^.]']UE%Nkd,N-$#Nm\7tH%JV'1o;WeEB,oW#g@(#@d$rI`q(e'p;&p0G:2s:V>A_6X#<S7]Oo>&=3ln+EDe&q29$;Hf36R&/3H?KJ((,_BCen\=j#!eG/l`/?A%eWX7bcPPTW1>,aPS]7"9\ZHF7.*($Jd9Gt1R$A\\oqH0fKN\KM(<#';fM*liCrP#YeGqo9H!BQ.PjR2T[''9k3\4%L@RGesI>8DJ%f*@9;9unU18I7JR'sl,$1s.u_U'LZ:'j?(jA6D0#h@i23$a#sr.NmQtUu&VOS'o``79]p<KUJO1RBs3$=e4,T%nLV5Nt=X.VJ3iX%hMQK;M\9NL^(;*-)H5f83)Dm]b;hptN,;F7FAL%%lUBLC)kV9%g'P.kkV%b*-+Rbo9?V(tC&jsW^hVVjD=-VqY53Z09[6i4I+!0[%aV*3O/]i-R&7UMo,B5baer`ACJRSbKlo`Q\-U`^n%Bj\]BnKJ^Z/sm9]>kHE@`%C\VS4L$ijYG->_Vb=<me'dCJC^LeaiZ/n<:>0%"LhSG`Q!>""t8h)jR=*&AOBq?AOZbIP;",Y/IZbX@0b4>0m0Y/cfm8c_q:WX_U<X*,'G+tQbigOQ)0F*nk`t*"cNbAaG;Mg[hdXa%`SERcMj"/TrVjE5;8utLaR-VAm^Pg4`EB8Q,+JugpBL1/Xh4O^6i6R_[ke?jn=.UZ:T(J3SVI%#6P8oA]`3`l^U`XtkF\?ZRf<2J%kC;8.h`ghnaiWZ9Xkq?QI<9K$@XGfajSED6rScT4[ZQ&%3'',_I;s[Wp%%`W9E+YUo'GnDCp%Y7^H+Hfh)sOkoY\qk8O["C48Qc@%YE-tPQ(Jj%<0UBZq4/Upr?1ISbpmn%cW'nMb?#K-Dc4k1*cJ>OF&Dqi0osgXmq:*2kYlp7SR/[DXC>K1T<=5mDDk;:N_[$,l29_>%Mj#Z*a>DO.G86Z*?>VWVgS<)=P[YA.oJ`,g[kB\dDNCsh;Y]V/o:t'`o;P)@4hA?jAJN6u>H>]LIsl?')pdkPnY>=jXtTg^Wt_UJ%71W]G>p!F^@G@pR=0GdD4V8DjMk+0Ms*jS1DIq.SY:j%tg"GN:mD[n8BgY;q?("lR<Qr1+ICfC#T#.foE]MCNC$YbZ,?F@2*^BJN%g%Nth_isK*ZdYDa+)W.QN\Oc&DgBCU[iQT<crMq#ANF&n\FH!e5<Ad>OSA`[<W.5N%f#UL5@$4s%R46_P.W:%eRue4_:)cQs64Zq%gh)XdqfhSlDPNB?jtG/<ks+XBd;?qa%o6Oao"gRSs4od5Ccb\YZ^ZO"4T5<$s*p*\^<K*NCKHngKcQ1CBKACd!qYjM#61$(>te7H%]UAbS0#MsEG-J1'BmV=^4`jPhf]kdFk'BR`hFT<'q(?DZ^?&Nl-cMeaj0r4p3aUlXd<b_&q^64IRo&tg,"lUL:o(,(]*Z?XJpF9T%=Zr,a^h7*YLn90<_Wk*1S%a8Ph6VuWEs:tn'ksna@r]$la7e]S]0Epqca!@g^ccVR6/Ua'UM.0USgqd@V(tY]\@44oGI<?I&rRNZ%Tj-6!/%V%Dp;a-h7dSOp&/2(!9`IaaNA)S'U,h+Y/_na@G27GWCm*+M1V10pdT20@Th`m7H<#@91N7asT%_Spg<qBZ=-4rmMlUZ+%j8YtK1VJ@]eFf3,O.6GKg6#s:jR3V)B#u.nFKOL$I"QFl=*;/;Ap)^o1VX,31^6S!-S`us+/ImFakfV^T)M=HcLhr>')KY(Q0r4%%]@QlgiYTtS_`bGNlI.$YTcPi_?i#6_Vp!7N:Ns7,QW`r]CY,.V;S.D,pV,POXn.-<!*&b;9;_a;Aa?J`Dmc><$["s>AI]-SlZ%>u%[rXjt!rbFuH\bR"R1VO`;W]=EdC\DM('O)]pbl?]GaHjBF?V3ec:DYKW_R$".?pFKPF6j%1*hM=/Q:2tME_Go+F@7K6#QGnIm,3'%B5>6Pjtk/p9ZQn6gFoJ54F$e-(RKW_i4j)W54ukakm<bW*rfhegu`5[*^;[!4ak#_^HXol4MRU<_QQ_\W2kBmGJ_geN>)rgLGGH)%jCc)R1ellf0CJhee"`D]j8KkHQX=Rtr(5g2T7(a^ALAe;a`D4Gjm?^8j3-bPC"T;4P[`@Rc$`m<>iK9l^&<?MMp6n!#FubgM#Ll$%?etY>_<*IHR2p-)\@aeHFaCZt)>t)\<d-427X]=O&+8_ZWSl6>-#>d?pRCP'?Z.S]3B<d6E_j0Iqdc_ZfeeaJ:MslW5Ld42DJ.Z#%QWN/<huCC#]!n`3b0Be;^3n8`As;o>msrIVHSj:9HWIc/\,CbOKtj5^rY<KBl18V;)M2IFO.Vq[05`_dLNH&rll]!?<B2(q'Q5r2%4sBt)oYmWhl-o+D/-t]f&q#b\F6)j:f*%XN,@NAuVUCr'pmV`V[l(Vgm>%l%[LXGZo$?(N=&]A&#QF,]m!X3VQbON&`VBBR^2IL#%P"X><Q`j`.gg5@VcRUODJ]]&TSR,#"Q@$mKY?Pl?#PPdM^HK7nHfJNu]c')h*_j!=k4C;h%,O9jEdMoJ&hJ^*o@oW+gblg">6e$k%N4_\j)4:;X#eqdQ\1a>$h7YAWH91o+IP#j"kK`rFnG!),n+bJSqeP([hp9tD0`n>L7q8,k-=qTqQcQpne)lTa!ICPkFEI+pHI[HL%Nh,pN)BD7;EU(oEc)j,ZZ!_6mfR0I5pjUqs2m>H)S'K6eZ-Rg$2OCWCkl5Z&G^=daF*mWBG@B6NH^C*!F8FlL7k[neQV%+)NaD(c%\kN.:q*4MXqd!JiDCX7;l&4rRc0YFMF?YP"8Q;eLl,ekN][ZWJm"lH6NCV<50$dk[DP?]LZLPU+qs=&k$_mOCTI]j:>\X1P-iX]f%00VA,\_TApH$"*&VshKOr1iNUrG<gKC&sC<.W.!S^;I)7HY'XOPNZ<G`m3E5=4c3ok+h1dFEr;Hg1+-sGE\TtpjP:V78L]gEdd:\%McFTWAS`,*##CU]DJnM#[4KC;#M5;h\WBP^r)2DtPM_*S54ZWhf+b;96m$`cVm)N)6jH91%Ga8<0:2jepR9ltlGXdoM`\L=C,,0@%WPH"2D,U;X]CIfVn5%&2?G*d3H;1?2:X>&=[sssH,OXIW;-;\jOiM.U@!o_J)?ap1e$caW\p1Dq>?Q^.[^T`aI]mT-p9cK#hqPSc%n"OChYKtMf[N*L7Z%n`<);XEuATb251QtZehE1<_b8'H?lcUf*Ah@q?e%a!hmCgH_IX^b;o#F\(5BqX#_4=bL-$ac]rKiq9lg!^+%RKS;R7A7o*UZ:%2?>m#cpPd@TYC@Y.3BlJ!gNT9^]b3WC0HOMLnY+/ADU7ipV>BM(UAsNBiqDTur'tSZGNOJUI<r5KeX]Xbf$2[1%]/S+J)?3EY-2Ki_H*B4+;0)?!,'Dc0PK:Ls-2cf)YZ]olYtR2M0)ff8[SiHhM*Xnbn++,9-X6HYiQCfO#.Mu%!I/g\d2sHK2kOF5%rcgd0GX?o'Hgrc8\(=,_-_"Il\`HOF&A'1m929i=O6I6&'r"A]q)aRoY!8N&mpJ=5`uCYmYn5Z62]m)<VN9U&o6g>)%./M6r)ebc%^k_Fl&P*LbqR\Rnr'4$A:QKCs:G6W^O#N]%5(?<IUMoh8h?Ree]'eMIqI4f"ZO>K7EH2l"\c;%[%6nGuTc*H:0:q->>V=ku9!i95%PiDi;msCP;f%7>.X'Sj+l'(:[r+qf15Mu*D+e(DjrG`o43R,DOZlZhr[U0=H9"E3]\eTEiHXg+Rkk+$&m-%+<lW8*Vs#=[Q14)M?%rA[F,JPi^1`W(#2Gh)OL?JfH5b)]B\YBsc(FaZ.Gl-i]]-YIqB&:d7qn]FZl&PM&2h]_erSWhsC:pf&?el@6h$)X`.n':DkLfe`U%!6H]BroE[sDmm-n7e(NLCABgbVnEP3rVV,([mlm[SXrbc+#`lRk;VaE%-mK^j2LE94^7M04lma(@0djE>X0))D8<?)pcInVdt3!s%q'Q5LSY#b%m^V`2T)(f4KC/>=N8NEAnW)5T]7k!KYAU@)HEP!LrKd/0WCFXe:mq'mhgUV\DtgWO]r)fBTG6Xtfd(1WHqscQhpREo%&>i9jU/D"ij7a^a%Hcu4V<J5?)>37M[I;t-a^;kZqW`f?$_M=o[U8",D56!B!8m?BC^U%$I<Bm[H9i"9hg_b@mm=qjcA?mLn67Y8%\=I5f\26Rk2jto(8jMe<onN=</bNoIO3`ii:S0k$lb!bc.4V;SGF87G>Z)]0jo3tONi(5(m@UgW?`]^6d_1XfhqZs#.J5g73.<lG%&%I"048\p>`QTZcG_3R:'kfhA5uZX:0D\nJr*^YG4=Z]i?(Tns'0c,\hAnV<S2g>$@6(QG<-g%maLUu'2U=%b\&U.O@%977mLIj]%.+=J>GH8C5?I*er\$cNj'>Mb8iV*4n4F6J98,)'1q/Q-+3.$+E4[2VTY90C)?h^F>q=uV+PQ(1<MjJ)*It!@!q&r2gI)f+7h\2?U%e+.kF3ITC2?V7(V^#WG$Rtl!.P[]nK?iLmo%=SlL$"j"gbFDrAE#_\lbQZ,)?Os-PDmt51I<@\Ql0u_6q?OGrIli#6#G6HjI<9pa%EqA7e#C=JkrKo>'#8@=8L9iA\%lnW5#]s%B0lWXmIcMM<`0#a3rWiRO_f#BZPP"(hg$O95)tC8`o;a\%L`6Al!(Xc[lV1F3VpgZH%gJrulbPh"kjGB_!HXhN9:QNf0\$oSE`2Cp'8?uL8q;B"OS,W*CpA0U!qqj4G^V>&uPWnm7fP:G?VDIFheA)Uoj5oOmQA&k^(6%^W%\G>(3-boKE-boK=-4IfSi-,D]g:s8/Yl"b&l"]e[Vgc'_jdXSn#u!N,<+XZ,h>)u"WonB:GH'q%WiG=XMS";SDc*P5mb-uNHa\3G%FM7MFj#?m\<j^?FlJcFQ#/hPi[9mp7r+mU1GP?#g77kB%:]<-*4Z8p,Zg(l;a/hBR3$>Zocd.VXD"%&oY.4E-.qZG`s+",Ie+Im2%Z2*e7o<[iSfd40En"F@d,?FJ;:=<11InK0G$Br'4?U&YOl0"[&[?ZaUrDc`l*_pL^hn*&5X;s;nH602">gJGOi$Aq_$'af3ffMn<%1H<bH]%d-CEsD&%,\$R+f0lDdJ\l0bj<"+XaZ[>$IsUhMq=Dcc;Y0peGZ(m[mSU->o?l[iX7PR\roiS>keU'on/-YIc4KhVG8TcC%HSk$]X!>/>r8\B3YrFtZq*IJ$5L\0Em@r)Bjk46C7J+[Ce`e:jAWXu=$LcbGrpYij#>[P?4F)'r3UNt.dugbmr(c;%[*@.KeT@8;%S=[JVj$UcM_<Ru;FP]3r4M!`09Y)m\(\OSqge@&6QAi'"S)^j(X/R)0YCGD6:VCpsEO5N*lk`aTgRIU'lg<hTH;840@;08\3m<%l%c&I#DH@($dH+eKPFEVbG]Y1pXQ\o@ciV/&k%p]iu,t2MprnFKQT5VL"*,],%cgIqseD<qn5Y=6>rN?`]F*Y(I3<c8\q=FF8`UqIe%-OnN;HZb7X4FV=!IA@P>*NODmqR]YG02KnhY.#5=0#bTRJ),R!V5*Xus15`9_s=)`RpU7<WI<1G7q]#%QK0uOb0`*"k-u3)g%W4)%/hSfcpZS!NbMt7a-hljCP^H+;oBWjNq<>l?<)J.+[S;tGg%P+ugk[nuY:oj?LAr4dKYOi@ma_;8]#!07ikKJ4^J>79kHF?fe:7Jo%^!CA,hXP[m\ibJW45%68LHiO6U*H1G3n"_RmrWs?lf-Ukp,c6=+2TM@q>=%GiR@Qb08#b#e)Too?6$u_."u?64SH2UbPR7dQg]:e%I9=[fr2-@hq-Fa-I5e"br+IK)]W!c<3^$p2JN(#.$bkM!q-"l"K26E#e]Y'Ua55H"P^LgE_@plqK:ZH,:A9=WmH:sN>bA_Q+OcgL%[f4Nqi9]W$n(Hg'lf7A2Z4"A?_ga_AhKK^[\$njTdp;1,emnW4p%[8T2*'K*G'/N7a8bhumE+Uno?CoP`ls8U_:1UCf_^Y2[&2U&%X".:@[b%!Ea[gKbBlC-1,iUcXdcPXLI<<*W4=BTW1/(Euhf9d"Z/sTlS!R`M@[g:tV`WFYEA9Uj043OQ?<gjO\rrf8c'3_KlLnsB%E4>\,F3Jt_>T5oX++<!MM/KMX/oIhPVVsZ:EiR"@al^TZC2[)IJdg.,2MW!$rFJ@jq)9)f.Vc.q%<uAoXe_Qu`2BiiOjSCEbELE0%UZ\Oc/[J<,_/;,s%Z`5K]K1@)-K$B_h(NI"b[\08d?b?^jeV\5Vp?p:n[E+\o6h@`aMOt02^iL6I(Y9"`('XDRdaB"[gi3(+"s6N%R^u9-C<`+:ZIm^W&(=L(Z(9Kl=mY:/e#VYE7i,N[GiqT#[o3rY[T'lqo#np>hT12WI/`ZTkEd-&dX$&\qI!r#8r5tqc:l:qQd'ce%3PAhtn)_eC3o\CG%tET!h.ANX#@qF1:c%]U]pZF?)KSd/#p0+Abf*@jk2LhsP1'@5h`G8EAYWGq*V\5WC#[srSCs2Sh`[e'Ir[-u%jjgd:Y$]HQrLL/F]5s;4I3ll#h-!YRc+PuQWr2/,D10=mgU1FLcQA]R-_QLI^H[&<B_*>#k>V+Klg\NWIm82O+.mrWIm;`$%b"PY%qo.gi<-HmaSCCeL?[dHM[b1QqAYt<u4h\A]^G)joXriLWkjC2Rio/AV)!s2b/D"1qI:u1hQc8gEnd"%Og"3j*9>A%$&,!?aj2L3U%([=6!X1_bocVUb%h0#L+D-"-R_R&QGd!&RXqW-&conu=a<aNtJ@Bfnf/kb"?+.[8Bl]("4hbeGIFEMd)jo-JiarFdDgsr6"RG6s/%`_C731ja6A`M4@pC$mB*?.u_7D^][SI<i68b+E%r4ut]n%EZmN2m8gJ<H6WWDB>@n]PkDS4?o\0iQ`V`gD<?_\\,8qn`@_AHX?+g%F6;^X41\_bBo@!j09;ttGh[E#SYaDYLk(b.'CJNlq<HAUZ+6nDH!C#EHn')\FaX">!]P<[SI:t#](=jl@g,Xm^O#ugT3P1Jn`o-/%?5is45.\7S@sn"SMbE_ImgK8@f@E/lhR7gubUss;9&JEq@GBo`%rPZkW'1)QbI:6WcYos]BL/1pgq-Hc-hgXorFE\4Tip!5a2I6<%FDIGujla,I/UNDXU=Sj/AZsk9iIglC.P@$N2kF3>9QTdEF)+Whk:QRAHZT&Cib8$Rh-#i[ppjR'hH7"oC>;t[kiV^*mJ5-MX.>,?%RHsNUHKW[9m<jTF-`"j)<Mbk%]72H#[(D?nbA4[$^7h=#i9/SOKqO'Q?Wi]SLIA=]chT`SnEfB(c0)a*]Am_iF)H=j:7h>7,WQ]e%-+2.5cYo[(];:l(XimKDHe)-CBl2>tI=;^]?$1I!Sk]g12\`mlJ>7$DoZ8TPr94">Nm;K#LhS_hgVc5^gHKV<ZIcE5k*o!;gI0_!%r;>dTMjo!omnq_PI?1[>Xm],5Z+984AR/SkIX,qb_WADS3UI#0G7X4cDqX!m0-u"bfl\=F?>_Cn/DO7r`I50<]#2TAFLs:kln3LW%FB!Hj.;#W)k;>qN*r8:>\SM);#GG85NmGJQC[Z$B05k4c2T7dEn[UC:.iHTXADX'Ue^4OQc+dAqRN!/n%V2@G$c%n]iqTtfO%J2$%kU$5hftk]N&,DtPm;&NjVuMkYVuH<1J+rlGHi2?"s4pKNn`=V`5DAaEs6]!sro)c$:](a<M#[8)gSZ-A55s"Is89?urVb,6T=b.$%#Q*-Be%bpa]_n60j$3SBh`Q;as*aV!-\(a:J,&#Qs34?Jra5]fB.s;[N;i[S8+CPgrp]Y`5=mg(s8=nUEr*gProYBY5QB'Er$0a-%put#-^\ccH[b";^rVs9Rk??Wa\*k(,*b_E\WtuCp#7!d*"9O6A65h"tJ[<]%Ej#ABh\o'BP")`^hWMXt?G%OX?+nHube._>>2S'P%5)Pu8h_gkKm^E#eB&dV(o;9,o$aK*Ef@Q@$I\!Zkh7&FB^#c(nqY=ug?JiGo%hI:%(O(+@l7nal_O2X']__-10E-i@g3RYGSb:l0%oCU=pYLMiXL@'obF,-V)]Zr'G%?ETsf(6LuAAOT)HM7#dIW#*A^5nngX3JA(5&FY%XhQZ\cI&FKnZ1D%qJt^SoeL"$:Xb*]5E,;$%l1FQ!>;,?mI;e#NM`Ugj^3k5eQCUo,C:@t;hM:DW9AA]PnB!6HFP@,f.sLhbhi<ZIlH^,R&!+<4[U6d-`[5WD5$[;4SU#"YMIu.5%Nh1XTG@d\*am-U2I5Wub]`[X'O)4e%`r=Y0%X"<\Rm4W((Nru_O'Bo_L46;NflpqAX*pl&e]k"%C[L.VSN_*9EdKie59G#o3&*_r%P293NIFA&4SXS"X2]M!e4`=]1T,aTSWB;XjQd/7aGYZk)Xkpd>gtn=PAifVYNAmV$SUP@($-Z=rVu%F^UJKb4479IVcZK%HqRF+>%eEQ[ip!<Q;n'madRsFW"G[K&Oc/nWa_US5KVs/!Q>`I!IA$M\*Dfk@0V#@0`e$D\Wo5a^1G7#>5U=/Y&qH`^R8DEC[m-B+/V\?O(%QOe2/dTkLELR[\oa29WR4.TU6pRBW)rph`YfRM+gg@A=kU/'%s-8V3=8$0B:m^-"R2_OMV;fhoMCp_JH>]$A`gJ?/ph<92]gZc?7%p2=67[5rNDI!<!,,3G?[oR+e@R_O:%GIf_WZ1n3?p-ma#dFHYamM&PM5M,jlmG6<e:=kGgM:4`IBl!A6ki^4b+O_e4_VLfjb_O%=%52L$lr@R;VcT$3WQO>i[RQC98l0CsDY+=mVV46_d:9Ug$?9T*GHJo^-#9Tj!SPh,8g\lbsInnVQ:2;r)Htg5Hm.C9rB)K$7dnSlf%rR5!976B+Rjf.tLb4D(1du?S5?9tL*p@+u.UEqt7*dQGu:=4u]28`)Sf2(Q>3h=A)c,&V5W@tIL=4HJ$459#Okmq9$Vg%*AW`/ZD%\FFIoAPHn)Y;NRE\Xa@P_i=B]ceVH?3gXIiXiBkLW4,?h/jJN0lGZ+=3aJ30R,q)RQY:r*=#LR97&QA)o=J^;GWbS0HXR_]2Y/]s%fUVP;j+"#Vc.?d0mGCRTa.dJ7h`&u)h*,/IO2'dOmA8iD.lGf'o4Rg[S0a/WBDUT^aQ^nF*U;.Cb%V[Zp<(Xpj-dLW<^'TWXp,PP%a/t8*mF0\QiO?hP`QX8..6.A#`1hPUHoS-Q:4'3*4'Z,5>K9YO>J'^oq3tk@T&u,HAGauRpM[pTR4<@*s0_fXbAF`Hl,u_-/q3Ne%:Nsg6QOc8s]U)DmqUim7bF?29h9fm6f6bMKCM(S7/U6Pdm4U-,:?\:44uT^UpZ$5L5FKuL*UJ86V^@bU0Ca-Bc`)l.A1-scht"dJ%YKo-C`JSB$^R[JiHi%Nfi9BP!Vm5saeUj^RZWCr!`s_]"]jgG22ZG=%fi.aNpHSTPo6dr#;t0GOcb9;4Zuf*K@f,mq%s)s(Jc=uA%bJRG+ei^X95#8CEs7GU@KXkO=MHuiX$R<"WVZ,iIl2KhgaMG"XkmuhFf>O;POb+=KIsV.nA9)pE8b[A>]l<Z$?@G+!M5Q@2;epO=%i;Mq(Sn=B%FI8>oqrcq]M08WAnT!j]ULJe*bq+V(@t0mG#lAFTDYaJ*Um>@uH:Gp9o\LONm)n#S&"eSh:VIeXcX)&"3';IMonpKo%@:?;Jcg>#KMZ'unn8Lmm3EkSEAC&ME_7p:3"]&LAcR4Q0rcjoS8ihInpVP/hBk\e2cbX$Gc263>f#5GaS5='2k9pa_ER^Rfe!%`V%m$p/ZDUhLQW=.k1C:?g5,F`'&$9Mf\Vk?sdD9:)6;Y@:o[qB&?3o(]tM`ZW`PB:Q;3Xs.CL]2c8GJ!N,]tftLVp<\W]"IKu5:E(O%+!2SiS[.rB4,'b0/MOR37t%;\fi`<m,F^oW_G5q;U&PqQeJj59IoFk]F\/K8`dCB#96\Q?7:E+@.?9=PGIF_Sn?L6/n]\/)Z_T6n%p\\+"&c8ch/%p-\HCK2@/.::',6nUo'j>Fg?JX-HDLjgG]L!4h7[as<4ZfY<DWn8]k\rVr0_'lE'Yee[J_'VPD"Q&:Yp56NXS.#(%fpVf#deO[ia,.c0S?GAV\Gi^)".apDI%:-61!?#aqpji4g\!W,),3/Z<]c+OO[aE+DGID7fbAb<SanrVgKRq<W%7lZB9X>+qoECs%?ToHZMI24;.gKnW](J,WK)Yfk;T;$[Z@cZllSFGXp9q8Wb0"WC+4AJTQk-CL\fjX0N#:&cq4O1k8*=O\+0hESkE9fiMC!2SasC\k%?b>P"cNi"'f$&'SghV&$+8l9ll2#M8HjB&8PE5/nmGI9B#[`6ZPF<Tf_D?Qq?+sFkpM]B]?Nr`)^LcA5Pr*Y^);/#J:UaHGO,9d`%*\g<jXJ!]@o6P4^]:Y?af"J%epLmpF?29uQXuJf0;pmBB)Y370/F2!!=F4"/87l5OHA!(e]c1<:b`0g/XeZ8-^OTO8j,m6:=hBZO%K9nDpk/P<OI2;jQX)?DAg24V4hCE!g"]RK^J7r:Jm'/KrXa[.eriqC/c:^;QBW,Se`pNHLET+!6olseAj#ehTDa0_>A3nW'KOPFt%EO"@k@<t7p.6KP,%iaPC?!Z9``N>%Gh6IS=GI9+hjsNA08a5sUdRYfM;hE-2O0uuQpPnF:m`'R'5*i(Xl]IKVf%l5]lcnK*>O^_O%?I!H4MLVA6&j_C;>27aT't,o]q[jWT8$n#6Y=IH;KoIs>4j5J<a#3lr,kl5Y-YrBr\>r-Pg!rZR(07jiGJPMB87K9\T]k_%Ft'Vs%b'LM#/=U\*9U/L0Fk.FqrVaHqk,N^3'X(uJhJ%K.K%I`EVhk%\n2J8HMhUsa3t<\Z.?Tm94;CgVlL3><d?'Y?c-#up/#cn]4/d7&%Y7jq1Y?(+fdT*-i]:b^NWbbVAH4Q!`T=EbAC0V(SbVth'."+f&ZEbCo=(n[3X6X?9,d/6(MPW=:Q]mC+>)=?@>!5$<9,k%g+I.r#%[H![oQUS_LQsMhB&pcV6\Qr4KY18GPL$brfhD812gnkguHsPRo_GD$<=O$+^eI/p&,V(CH:3Elr^G\DW_KI$X=#CbNG5Ab2.FdVt%L(Y#m\quakLp4h::c`TI.K`9.QLR5G\n-XSksY4_bOENC8p$H-LfusTEk8U!79D=1A/+)'49rD]UbnpEan;"g3[er^m(gEm.b%mK%m%](ra:-P?GhnIUW+a;G#/L:q_h;6DFp>kbBR]!tgA?Tq>FL'AXp^71kJLs;[Jj(&/*O7H5a/Z0T7<9:@M[QA;Jhsf(35.5?"<XD%g#RX+N$%3'=]^O#XjlXI`TiW)9,>_<6<<4b.o#"2021Bj=Nt,?M3$ks2o"3eL;XH^,ZE`cLI@2:k2'4Nd9'Cu-Tu`k*fbhI7WATu%lu#jR:Su.=Y>26BC6Lfl2\b`EDGDbWi:je>2/]&T5%Q&T`@STfd-b]D5.[6uZcBp1VoOK_/^%/+K<HrG$>,/sVo2r;Z3&.g<*r!^%R78g7O]J=QZDr"D#EncgP\FUrU]%@O*fIiKm:XI<=VH8>98gV;7b#!\K_+X;5VIIe)-FhB9(76-rGYs8fkK9JR`j8g3j.5n:FML%%)WAtE"Wr(?"*iVE839hcFL<f:6!(i%@R5e*O0r-8lM))pVh-PE]&hH&9KIZUAp&FL(#>.BYf)."?A0Gjpi*snQ-[!A=l,jWAejsd%G[#5O)3#O4ns)(9cfNb.4Ll/-H.T'S]QD(AgJ6Ialub-tO1"g,g<iD?A1P'Fm9I'2nbm+^Ss9--=?8e$<FZoUpt!hWWGa-=P+\A5%7TC6CRS&L-[%G)``sY@@'(dW/nJ*JbV]REAV5f!A3Ehk$^J7L=38/B0*)5kEahn*<g@Ll$$)uKkFcQ0C<ugk[EAW]glV/fbB(aEr%a?V^'l(@[1.r_jF["$ji7q;FMgZ_q?i)U$nHf]FR$:AIL`pLrh1W#iM/td1_oTm0F$Jc/jcsb5[VP]&:".A)gqr2]EWN4(X#L2U2%fShH5`[c`'Bfdh!fil'-S#++s[JFnjS*%iB=PqdBaOA8"N,%^e1-'8XXNu"-'FJf<g?G9O<?+^Xj6c*=SLU(9X[5+gPg`b]=/-)W%R+Xu>Bh-b(Cdo0I55&\uqYeBs:)8"en\N61+M`*)Ya2IPNZ+s/5'G5K5Z:Ft#MTod?'!d$oe49Jp$L1j]ALAPs/Ag1Fsk6m<RC2W%Xf0dXEBCj)_h&>EB9i7U]9e7C$(oJ`6CIY4E;lH*iG"]Y3D,hT);Rn/7cF8ZA7&Z$[Nr8FOrt.-D_MqfBU"c>?#%N]`qcZ3p\^iA%afA6hEQ9U'YCa?d[0O%*Hs2ZXbG(n&$5qH<`cKZjSM!""@Nnf+U/k8J2)IeV=]M_+l^1.;-=r$r<ZuN9D==*.F6SUKZ3kTRT&,G8%.,,Ms4`q;fML6k6hOq-??BI4^@TE?JMMdOR%&A)&PC-TqK8gd":bgN>c'%-l'dK01_itT['*dhQ=&me778gXm5IFg8o#$ieSA!>h%SdX\`\;%0!K!&,r9FY9Q"^S5oQl<R,$G+IG%6`=iPul>/WWi9uTe!=>932Mp?:.e#6'n\hm'VSN]Rm:e+&!,LGm.KN>-R0.](-3>%W:m@^)S5JH3a'AT?ObgbBa%e9LSW*3](-1h`HP1JOBc&ap/o/p:$9;.<rsshZd5W].C!1ia4m-t[hip//!L;(Z<Yg9E`Gp7iHU,_%o'2fQ>,T8UEle]uDITD?Sl4*]b#[2k;i>CQN3?7j2Ug2;aej+P$Q>KTd/9'<\V0ZtR<2Hlf;LAK8E:,18dBFK*g0FsfYJ"tZ;)E5%k1H<]_09,n@F&Q?Kk?sG3S^TaWjk1%;^t>Xiqp%/O4uWO[5fPrZQr2G_pl7h"Y%U$5F[)N-%g;DQl,XWqssAs<"7U#<g'%R:nLdi%o2c>[d'>'!=iCq$0ghnE_YPgD=`eI2SUs9gldea5M:aAgah-KQf-@2I5,A`YD`5(;ZYGV:`tHke:!*BDT%pqp^KDJu(2aaZVFl^*%E$k$#q7]k&J>cqql7OJ;m&s4hQDrn+IjnGHWn6d;S1U0Lpb(jI3n=eSHVeeA9*Y'pZs+Y"X-XU-#G)-"S-,BsJsH$_*7O:^03JE<%%q`l\/$%^r=;+UN)6bdiEtEZ;XF_'&-"bP!@jP:Nh633[Au<T`.h78T4\>TL#aJIBmJ-A/g!k=IqK/auWhs2(h!S:[(_M+ghm.=:%>X9%/JO5)9.j%!Eih$_1rN`5qmda204t<"Bm?ST9>#idM4W>87H`anuiq07.eKVmLq3mGo;RrehP`Lb;gH<G$DOkH*ZP_Dr1om\=%W)+_:am2TcUJ,a^mX4*;BUNd$X[cQ]cSpij*kBb!.Q4%j(1Zpso=o1u(7iV.8h,SD>c5(UW^:uO21:Df<Me]U0Y!P!a"C^G`s8nF%':C$*15Ms5;n76&K*!?j/$=lt`m[aH,hi2,B,Th$Z=ldPG>bND_QGDM9OW+U/;rh*S^JRI-$/f@GBSa)(-ZoGl)Ju=QH[&/#q.rI%WU4ltOX\M*^Y^&n7u!m!d=2AJD?Z(pX\'I7h]<Y7$\hH*-OB1,HXr@ue5#[^I<]:3%m1W)X7De?iZ),@Y7`0`bE>tVc./N5^E;m6%2dSpUIbYl1:#aU+=e7?Ee^2s4/fgK)VCSRij'IG`fimPo["YKnbK#]+>'=pgeag!9F2M`m8/IP$IFXAcMf5f>I(`cj>sScg\l-%Z%Jd<1E'd$=R5eX18R7Yr(Sjt.`O]6p,Q=j`B"eEY^ffHbfF?Q/NcTgW>\4YqFoj&(EAO0rYiW`[!f3O,GYOukf]Y:.l<0(SUiVKMh%XBlDbH7@&K*)Je'>`YDXL`:G!>i\a%<6VJ;*_poO_"b_2iSp&*b#0g<We\dN@Kg0\peh;mdP8G@q:qZMXE%'Hk)eP2h6KXJA1gNL%2qgLa^UtU]W+%)aKm*%->'(eD76;CI\]<)_M=8'>$gi$uM_rS-n!roq>j;md:ei-6/45/\:`bMH\fem!&Z.)eg5*HRKjDkA"O+rY%4`S%o)/`]L<1oa<+"JVSNJk-*IRWE+m$I^nnEb-;VZCj#?'&JlQ5\Hp!#_Mr]Iht,=Z<(G$J")a`P.GOTX",$1S%:1.e--Kf4U,f%AFbTXlQF!C):YTM)FR$Z`R=f;;Q6q;<MWq`%A4oq*6AuPoMgs!4n<L!.t1PrO\5!LJ8\=98n=a$G,gp**@k$g*s5g.dY`HF+HVaR%;nGaZ!dg<"7%!U%5M9Hi.[$L6'Me5(DQ@ok.><[;fHU@R?qTCB's$EAl)bZ&425@1V/RIAaoRdEJR43[m@[)1KNFj6V.j;5E/B(G%>1t"XB+HB,(J<bXkB);D%s<#8P+]tSZY2.S($5X2c5s(F5Xo5e#8q]g_q[AP%iOdm\A0D,b)&/")_2I0a?(dc15lgQH3Ni3eC@R:%LobQO]q[nV6p@:<imp(@3i?j(pOA_5nCKmCSfB=@?WLAMm4SiK$Qn!hbdH!`m\fa*gYJXtV4"*>[JIbXf,9YKhE%Gk-e:1O0/gRL%'8n+$66*8B=7IZ1jQk*Cr?\ie.s#"OkfMLd.RQ(!!k()'G(*IklulQ7m+-Xa3cAUk<@dEp9k4$*6)WT'R/^U[ZDcEX[)27Y/uu52%)Z>%gf]g?":#fk`/_3mu(+XGJT5,mHVG"^r-i@t0eSDVG%9Hg6/Z:_".]oooft;2:G%tj]]fdq1e/PMOqs.UI/*sF]MVZ:bi_Hu>%O+&_F'_h.J%t;:*/ul/Q:f9rr^NWT2l,La5B$(3Oh2[<o$f\pq>.iJOKk>Z*$f85AN:Q`&>F<0#c`^;]EG#4/AOD>MRe)r2<CE#N%NYJB`4n;cZc@*`tgJ"(6oSP^V,=FldYBQDm<*\.`TM6u\`[n,qqN]Wb3tFoTF%(^bl]=nGZ-)OGF3[c]2p#cg<3K;EnohZ;Y,W:u%O$+H'3^':XI-8/VDD%(;k_8@$'"KL`Msl(pR]G1W80..;W4_=oCB`d\ZsJFnpW$8U'&5FB2bWGa?$j/50'DKd]:,n.+/Z5V3aF>.%Z=3p9VUJ8A2XkIm,'k,C2-mt^O1g=RV*lA(24[LF-bf,%<RXr0+f+"1\h57K+4YJtm1csM'ti+'<n$=2/BS8u"0/6Ie^>2qp@MN_%Vc+!]\NP@Adj^-c8M+5i\I(K#e*1W3fWH3-24\VUML6:<24^n90!-Q3U7+iTS0jiaJQ:1`p.sm+K<1s!WIqlRG`/WeFA6n\YO&]d%Y'e1m<DBBlV<_d53[oe(<iiK>3aET!0F,>TC-&2B`%`+4=P$8hA2n<U*D>IE<n$;Si!3O^Ve\Qej?Zhql,q'AL>7>\e*2hS>.I;;%LMAlp@T_/VTda6,$KA2_KYq,sl#\DSH66Ll$e%-UJ4l*lm>M'Z>sA:9WDuCHncH)Tno_-9/ps[(H`Q]!-p2c?pXLj1DQE+%hLqX#%l?)eMXOlHSl?KXPaZ@ODi]PjgMFBB:=FVd4LK7G=<uP$sX?[YdrcYi$n0p5jX*,k-]]qP#]R;]U@7g`HgYoXO*Qs]@OPhg]f^o&Z%=sRePO/dHeFpF-=<UlNikY.7^Q+ZR$mS^O;<J_7\FNn+ZrlU7TFM41NT#jdZ?ZaoeKQ>]"'lhFF18V.W\^Pj=ZPVG?=cnf\k,pKe%=3Eo]^ZM\tp8qNfaBgp!)6JDtjl]l3mL?8C@VPi?7$YIPXE;q@jsU&/ja#X^P`([EcW&HddW)tKI6/H%'?h7-AaRWTKll/5rb>si%.L_6!33(ljV\HmH]-F^KJ_mG2:SaMW<dM[7iI/G3kjZ<dT^*.*6b-BqrsR9[R149qaD@fMm\QJgo!(^E9@jtTaZtZTQX8DqYGmeh%#eRC<SO(bH:=\WX;]rPJcF[(n]L-9I2qE+[X]d*D/ZdJB;,"3JE[b;m<'W:KQ7ZJ.9#F:ZAQ?BQ8<I239DRao\pPrLpUumS:m8=G%Pq?Mh=GKP<ZBf`D%eXhl40$IS;beA<UIg9=#'Y^Ya[=TFL/Q`T^?aaLg2*egoZEZfg&UOXb+2Gc;m`"Jl)UC3^;h^I6ufE:8f+D'%:H5FZarh"dX$VP9&RO[-e%'e!M5Lh&;:Pajh/V%RLciE1Xu%At1)Y8HiNA)cX8BEc/mJ/(pU05=)t&$c.Bbi(.D@6L+SD8j"0"qn%Gf*f%hg#/[gh#r$c/*HL=QP:LWi):18YsjXd@CWMo][8WS3)VJXt%r<.V]IXQA(%#f-<4S>R%%%b9tST)F3CoKu7plSoZ43l-l-@%^2[n#!/7goV'+/7@uGJIVtaN,Os6d!1*q9Q?I/<3q*=T%>dXBB1-Frn%$UNEUP+[CQ8'+*j]/q*A0o?QWDplZg8!?(h3ZTA*Gph6%aDC>$Djaq:Ene88]+Tgh4Vfb$r\9WTSeO!CmM&"s.@[Bbjf//\`Ghq6QW"=E)TmSg:2R"AT:JulmSQ"5U@X@d^C!bOk]#@Q7NYiM%F>/V&+&,0u\Xcd&HB%5o,C;=UcT4`PJ"tcV6MbT9rbGbY8R>`al)UC+'P<Z&nWjn"-"dc\qDF_2=*(tPi\Ijp[<?o=XG[_)O%]K*%qWH,0O6`Dsg<2#$hT+GUI;QC^D/F-t\VE#eUW6L/eGlD$(O;?&pTPZ&r]Slb_n@'SQ^(LdGEJp(HU!"YU/J!4DW]3QK;'PPpXaNc%mI5b2domaq>K+""cQeq:Rt[CORib_h(Ner%ar7NupX<,O?V<H9RL>BUZhL]KcTESG.]$je3\R^YqQ':dT_<;7ZEQ0frVG%q0#F*'%qrV3J)(]!H=)tpEF*:kjq00"o2iOfc2BP,3eBO7?*H0d5qHh\9D-7J-qpQ7gba.5TT5PHd)Jl<(0?eV95.@F0'9<>_Ij^UIYBs4>%hO@.+3>\f>I:_r<;hsAG85-HSNRA[XmcNimgtbc&Ic=pE<d@j%j@oPp\\mrm6/?!NQjQdU+XsSoH0TB?RJ8rTWiK*dibGNYVVBGA%/Ec>io%K=l>!$tl%OX<5TN0W*[`-PD]1]7UWCkVe<qT@UegWsBO%i&U&YSEl'KNdmhq;L@fn1UB.n@if2hUC;lUg&sda83Ih0%#l%W\u+[9.P@)`j-FWhU5!%X2[Me?(K5((@&22h3mhFUW;k8WpWl.DHt^??@'RK1?NN6$&96(i%H#OM"8pB0)G7%IG&#C<knVgg@GXp%lV?VH&&bfe&c'KD?^T"/@NDQd1mU<UY2UTh$+J,(NSIVHfrE`kO]M:JX)aRHlZFm>ElJu%Hl?sXW:sn<cCAA;V=Q8H]IGmoXSB$#%$8/rD.[+XZpgf1[!l7q#;\qLY,LT'\^/Z?s].5-7?8DA5k0B46V1;pqcT13h`i;sDI**C40I6@PhA2](:dH%%LQle&-:;6jXNOMW%1r$4lb#tMhh1Zl/J]dk61=t3bW8:WrbtfPXX#Ho8Xd>*Li)V1>XQ/EWe]252ElEnhg$3"bMD+ei@E"bR`cC1X`S+a"".5B-h,XOl%OAr@eYj<?m_Buk.;(lFmG$+uN[0A>Er&sn?X4@9:k`us`!3=ZN<k?8O?qmZYW)lkI>+l;-C(4R9.\#EI_!3dXL!.m"0efF]J6gjL%7FAU8)Si.X.(@;9mA\u9q9!Vd)q:^3h0It*]p,^teHUm8ea'&ZRN'rZK1l%4Hu./ro$oek_gu(8a''R&_#$n\jX\%sCQOnR(#E<N%a/+0O+gmhuFAu5a#W]%e)B@Z#-c_mleZYmWTeuN?ooKR5_nCL&.i-t+2i+f6E3EXKfsXoKp$8!C1m!(_b&?sRHo=rZHi9t9%Fs@L%I^0ruoPCHin+A2,=[Y-f+R\nQ=4hX57(qCAQ^r$j<^3]^WJ>j!b4D$9SK5;,me&*&>-0uUHi4.g"%_U%rQ6K%8[6"uons4Gb"ah_%s'EJ2N&,lV@ZTV@C?eAgI"Z"$`E`8Sf2#K&-E4/OWjIdfO]4JpWp79Hjecps.J8%k?bG+h>Q).JO)G"UmlfRo=+72W5PO\J&#^2o%N-'9I?YLDq=/6>c?G@n];K/\/;T%7-GtQ2\I]9u<548(o%7SPVmn7m!qIs1BO(kU6`4^W]\,$Q2.W)M>cD+!jYHN<Oaobq[>1"D[%oddf-YE/SU]!s#qlor.t:[ptnoc(u#Hl\LI$Ip-lHi5GF4_V0=qmtBT;tlq).B<$gf=cWJc>rnb^E0H(]$/K.9HM!_I\lSs25:&#%h!8$Z7X&nq?gi2]Vs`Ra!#b'?p$;!/^2@e%h<>CEHi:OeMD*^`p-bH8me&*FeZYe>Z)`6MqW;:Qme&)3F!Qe=GHY@c>T'TRQW'Aq%p\OR@lg*M9^S4aYT&*<6?GB5m,D3PYYIkVD.D78*Z$0@B<,emF(MBXYaY7k@T<,-B9t]*\hqbtp3]00f@Y;5CYC%d=YNR+soh/=Z%lcmPD$Wj1e.=\O.GCI_An+A1aR+.WgfgF$5<P/00^TOjI9CDI'<t#g-f%7TajbdJ!P1\g.IK`@^h<J&U)<pj$^[d1TXZi,!rQ=__%[FMZJh!8%O@U(A/3L3Y3$GH!1::e$FpNuk]KgW;+Ze'R&oYR<`1fu`5HYGJd6Pa^9lk!*=mFl(/>r1NnXjqPkbc6Nol*A:092#,c%KWH.hOo=@SlLJE(S6Q?:AHHiX<1l:ae!;EI_1j>`Vd>/ARM5/"`[Vsd?YVa5gXbu=nFY'#qrV.3Ibaqpc<YG'RHIp=c%jp:M='%?%S6e5uq`HXHo.i29ZMC1SEq[JA+$9<U\mE/KGLW(krUi/5*OVKAr4DF"T?DFcpOC`YHacLR\::d^FE1nUmeo-Ap&=^Cj/qIUf9<8;%WQD3A[@+!YBC;CEqnng\59=H$0>Fm[8!=VR[QQN2no4KQX;bZahFr?8I63i'BAQ?85)nC-N:6Fhlg=Dor8I/;jVH*PfNLH547hU(%ZYXFr98ggPa%r2Ef'(#cZ$!;NX53cg1tR3T[5d\=0tVpfM%<+AQA\NX1CM%u3OWIcbMJ2;'E>*2r,[)3BHGqYgSB.AUOD+td`(C9%p!9*XXj)QbKl?Mh89'^K`9PeVrF5^_SYKQ4@o)LRJ):1oVu=:HSnY=0Sa5Un`n9p.rUb%[Gk6-eIX&6-47VuWB>Fnphg%"LE@>\Q%`Q"G*)ZN0<0sg[<ZFMbMh#;`T6ilHU&hO@UPV"5\6u#e1l[MjI<N$Rn^NEOO9hHLM*L?V[q=+^5g%_rNFL'\LR9h6N'08(seI?;@%R@s"lQ[^!)ggAb.^@'=#m_[Ca3;2>.g?%bd2UBlV4e(+9K[&+]/oH*+`*\]ala-99c,o@D*HU8ar7eX:f1cpJo5E[Dh,=T*3PCog%Y-u*k)U7TG3QUtMA44Z#CD*!B%sR`qnOS;%NHtEb"<0]tdrhP_-`u%l"9"a^iL`N^+.h]ZnlumjTb_QZq/:WHmG"h6=&\:/`fDdr%5F:97L>+QQ4a!F(`kS_!K5("p>5]dn0WRAs2S[l/aeOUeki]gDjFO!eQlFfU'gL?CigH6>Xc_oP2P[ptoqh2<+0^a;5Gp\kS2UF`%7O#\)2c-`#Df0nR$U65jp<AqMde<PUn]K+O3JX5J$,[W*<12P(?J[WZ9AdB>[.E/4A)kgPgB[X4CA-EFF-Fi_UNs:.dsQ@]B@G=j%Zi&=Ao&d^-SUPC2?Atkg^p*eZOVHQ;%B$ok^G/L'<0U)!1"jFf=K`UCPF??#Ra![XaHnNK23_^tk32EkRH$5CDt2K5?h#ea:C=\%%qKt,i@.N!][;u;oH=#;%o]`DE1i)CLqd$i?T+nZ;f!cHg'7LR=DQSEF0a.TZIlhVE^]#9Yd9j*??Qp#n[4ufPQ'6c\CeE7E_IHk[%!""'S?i[SqZN-_@k:QZ*G'CLmr4'[M@/]cpn3G.s1ABs$\@?l=N!a%A;`kNKA%PF@1PlV%SidTFcSi!4PP"J+):+d.)^hQ<=NZOM%VqEpTq4^Tt&X.\?dt7:s7ueR,)qN7Imfq6)QWh9BCH8"YZCeK-Rbf+^D[#b1EBJ`RFcI#G\;7@7q$.GSfnj'1d.*>mi8G'i`SFH!%G.'71b1`<u<&4?i^J23<2;t0DYC4)gq$pEdn*8emJ"'Si!9E1B"&il8lZ;5F^p1$')=6*>\a`!Z8Qut;0SaEmFO%GIUjA12_6okS%(4l.k9Th;Y'oL&Aqk2^L.psT;.jO]FLDRUNP,e<nqT+oT_!LNL9EW)kYpEiRnFb&WA9_]Z.F#)ZOi=0!87>VFQr_`e_HN+aRs!D7%EBE/<1C_k!Vl,;#8JAid'lAsu9.Zf^LGgdAbh;#pc:u0RoiWtRU!#3M<9]U$J6b?Gfo2_r)qMWOrjotK)=#?Xp5?6aXIntC`P^&-%7cYF!OF\X$E0dYnT1C=$C\k\\ho(9o/DH+nn,=VW*+.,ZSZV7(#n`NA^,TbtV7Mo*^,Wh.P*SNV/Wh#b:ofY*\@91_0<Gm$>(8_.%-Bu%sHDY**kprf'D8M&E54;tGMk\I)Z.(<m^7[l-:Xk%[6"B`>oJPr):ociiLCa2bT@`Pa"Gffk8<<Y+\e0FQpPUr(=h#'3D.!m2%DBkm#Ci]*ef=6Y@9/\MM1\Te%Vu^I,C\@6q'K%W"eJMt,nkI@$4,l^A.J`VHm\XD,m)FXBH>g6:`A36/4'Su/AFSRgp&4[$OIo"r%7fGGa(:RC[P-^J@9&Ou:$Hq:0k(LY7ZneS0p7"G:.42E<PNe]<l(?5m:G^JCD#3hXl1E<4oZqVhZUT8V1RVL%k%sm>]!5jn@@HGh%S!g_6)r%_TqpMiMc`NW-ch'K(oK]MM5cjTC/0d1,RWL42@@!O>`1C;G=R"ZZ.Puj(`<Kl^'q.IHrR/G8<+lUf^%?4O'q.He[iBoQ%<+lUN*ug_)<+lUFO5b\KTgD\V2Fq>VckIZsHuR)%c4mQfI``&=)P/WI(="7\q6=qE_R)9C,KS8BoEp^#rB,^ti(P'6QcTF^GHmUG%4b:2F-QLqP+gX<XDCrUn:n@^[ce1Z1,.ZgobD<IT=H>Qi`UWWg:@n5E91.bnr19IO@D602^"M&g7<.[jPPr0COsp@HUZ4n/>4e_U%<PB`]j3t.`0$G`Jl]E2CPnqu=p*Zumcc8Zjf3-mC)Xbl,&lU":P*dLf-]b=U93_!dOgRJj95Gpd>@MIj:BmVnrB,leOHojT=S%0\%*=CT;+)67LrHm9_B`J)-qqob:m7j^nZ=B?Ds1U^6[Vp(KhYuE!onRIhpUC0/L?=8[.n=A:4+Y"mqsEA>/\R0=q<B=a3$#P8,@@BT%j<T/+HZW<?ItV$MgS5i+Y1J.?B8]n/lBJuq!#OpU>((X-na>d`rRTaCT)J?F#X:8%4t8,HN*fnY9j\2?]]mi:g\0pu`lu'GVtI`o%i?N&9Z-hP0^"IX6s1A[0@qFDcYHKV(r&S3`\o/VbHco'go^gh-Y`7=09=pW9"oQ:l]q;<)A'=.KI!FrD^4U-i@+=L!Qa-4V3BTC2%]F=#lnBCclrSa/_NI<ok)P10<^CSZ)45CsLIN!&*dt?:Cn8Ln0C<_Q?,m3m9[.0Ve=##gY4tm;m"L/LOs1'OoG/<A07Mqi>8E7F6%0oX4D;qU*=f2n0`?[lskR:8R6$GGrTq+3-W[P3r"\K3UopA%?tcL2S_X,ZN4QS:nh1^V5@AE[E;D'=A47KQRRb0Yfh5]lgC-%9f@%-4dg-ieYFQKkUilHeqqqjTj9C5>q@7g1e@Q0hqB&"\\#-'$#K.l+mUgJ!,$uVOrXeZL'0feKEKkMsY4f@CN:rD/aFsm+Q=\llW*k%%[umLbYe[AA+]A[S"1=adl]b%':D835PfPf4YbGPj.:L=CJOHe\/30[ca70Ic0Mk!o0<7L*,iRIE;jAV<lEGCX.d!^rYEQ0=s8mp%hjS@Yf:HC*Q!92q:>FjYDX]gu[PjI"DEk;mHs[_NW9NZuN*5pGMoADm/d0JLhlG.,>[9G5e?;mE\iF0D3?'^)S)\+6p,An(H.1K8%U;'7[$OLkF`EE[o/D@.oCE$"LqE#\tdlHc)Z;7F),2%UWh[2QUMgq#qmE[sZ*pC^0i@>Mn2od0;LCf.-r^G9q\=FC%G%0Ed?#7`K%2dcTj1(*Y/,$"9a`jLnK7-p#$gQOrLhEKi5]\8s;8DG2!Z3-$KG[WKBW,iqr,M60%iVCstTHa4[^-]lrD!HYa`"-;[6'>6<Bgn9O%OH_gi,;PaYS<'XnSu4<b8p@BY6^MG>:_`criatPd$CB'tGJYpjqm^7>n%O3(nm$^4^=YJU"m5O2T1,HP$;=L<`1>\iN6Z<!ka/-M%fYtcqAnL"8j#`ElKP0UT.d"f)h7%a''^sc0`u?Dd*5c3Qn)=Pcf!>guhAe_a%khsu%$,nHG-c)%iJ"W8`!ps]Es"I9LE6;Kp<NJ^%iY&PgO4'pm\jEM7`4("L@85R]qS:HL1'2nC_!.g(G5X6<_<sd)Y^^QM5lNCf*B;'khn*[Gi*2+3*D=mTR;6NBgnbRg#<q7O`/tk&%i/2TT`.Zd:U-EKq*1#+%OdGa!87tZ:K/3HH&!*2N*-lJj5K"/e.@b&jN_3qgY0K!JFfhg*S"1qS7[T0E+!4j[fStY>HT:6m`tS=>%f$Z5gV__gZS=:8kN"`4D[>Qaf8XU7Wf(Lp0Yfo,`;MnG+.anr#(\oC11UsV@H$[F^Z>XL/<nF(9]s5-5*U(iHV=uqQUi;8m-93MP%cIcGf\k0L0QT[$K9#^o,FQVZ/bCm^65r!7H&nKtFkt36L*@;Dos.r=/F3FSa--(n*;Z7c=jGM7_+0+D]i0E4b<lqU""Y0-E<H=AB%r-'VNocefLs-ZIh*$_:B;9;o$Q;roG=,9lbMm'=/FbOLOrkRa#j4,rVUXb6s[b#bH5$Ip_rt]BgBU*a7o4m=CGL[F-X4IYuFSkY*%L_njIe_?_2s0]$0pU4?`LW'3$qB,]P\aGP$ir=r\(VnTrD=[]`XJqoE^KUT9\^Gq0s8D?HpVXc3pAYWI"*FCBFhG%E1d<8BHS[KM%K.sIl9`e,,m;tc!];c`9/+ik>s&49@s%U8Z!eVV4!ZfdL+n<=ZRLtO5?Mn1,YtKTE+jg5t3CE7ic7b0NmqC`Kc1:7Vm5s`tA%7N6%%\9<jRMCJbcgc`0gM(nuBb%Oc<bOC=__WU_$Cuq9#8TZH_[$S.d:^rq!r5=CKakqBPdbJHCq,esaHgY[DM4>E9?=T2!j`f=Dtl-n%^hhJAdkJ+:\X!A$U#.OdRfS'ZMG](n",P?Dm(h^[H1]IY0j$7p_mfFte#)(aQJ\oPNrbO_cluRu_kb6_Es[6J;4:!"[&Ip7D_t/>%ZA7d#BUF@<?JpMo.r$4!Jq+t],7FXC+b:Rl4M:m[26:I<<l=[q:Om91GD=HdrEt.cd7Rp$VI>i)JjENK)_3&g$A+#u6u@j:!iP#S%<mhk6PsD&ed14W<[UY5`(m^0\NJ?VC3XAd%EL_OaOMFO.*MIlgigYlE">QhoLUPQO/<bi#1ue294jT"?^`uoh^=b3Y._#pLTTpjk%LP<"]0UJ*O#?k7_ehMo)oO8_N1i*7"8V?UCJ_W!(`X^H7LB%WcgZ>Di0$V2.WApKi!/DK3%,rn'XX:Dm=D"qjTkT,gd$BOI-^tWK%LaLX%Q`q;M/Cu4jF-LO;62@Bj.pME96nj&s*uq0j3e=KKA5S8NV_hq>7"S$DoU,j(0fcV_5r?=Z7YkguQ@]b[c-UR-`<ujb\*]89%4)fV>Z4f(mO>bYuM-N07SjSu<"/O2H6*Z)%"S#1CipHI[n/)H<BO_<.^XXUR2Mn[*J33B+^P\G0@oEJi_C=spm?YmD=pdgk3LV%L%:Z5%c\o$..Rj1ldXWYmNBWk)4(R2Da#&TFD0O<ZhL9Ii32%B<Y>Ph9e4pG6#Brrr,"K"3h_l'C"#t>WgdZ-Bn2O4%lD.phr6C19l%pDlajYT\JR@.FY`fTZgp[tl;(8)[(K73'be6PWU<g)J?b3`f-CJL.se)@M-^iE[9KnPt8pfd>)r;6u.][L";J\E[9dMLccr/K#ZW%b>aR'!Qe1VZqZjW@VI)=Lq>/[g.,W;^;ilV>1B`I"<2Y1Es'JVGfmC5JK8/BOYtIGE85X=`^?@^U;c[B%Yas7F94rt!XsV+PXroH%S?YZH)#+bKDLr".0R40g5eU:X-T3m7Z5F8X*m]mT,l7]q,b!]$*0tsT#c#^.Mu/PXij6Gkc1G56LN,tCgG%hEd2hT\J*4h-8UlDj%Gfqs]+d%E(B7OoT!oUR0MeEY+GU.7[o5.e^,#6Ub2$<4RIS%[X+pVqgeW?(7aD/4.NuFOR'F@6'f*q-T&X+06qaSNb==P6K4&!F_%E@_9ZTI-&5';:s^-nl4a=&IFt\1sKfC(bFj6PWmDYXm)`Q'Q6I31&a,W$t#Q<!3TQ^e)EFaEHZ.gEC,#SVXWK=9f-=C!g4kkRe4R%BR6=PE,!o?o#u5n*iEoV2/!L?;db>5R'gE8O#C)Og6O2;+Vg;Q3FGA>coSj7:H[6=$D?fl0I$rnj@^%&`G/W,!%9q5(aji-&F'TN%f:$5s#(#k\Oq"+0mK\@:,qs"U#-g&?K*8Xu/oSA/:ql7pI,B+""pm1LV):kI_YFK=^]@\/0;T`'crM!sm?&6[X]/H<9e;g%9W5Vc%HP'1J>4P$Y(tH(Z4"*1AYJ(/kncLUEh_eXB@M'asG2p1;7[k+s(=:2:oKo$AapLl#%Np@s%%32DU%jY6g4toGT&pneY(/onJ3kdi%:1su4oaNk-B0k=MmJ8<s.Bo2`+HI_S=+JZ)kF8/358\pEW\<mQHs;#W0J>+k6c>(";JH+P5iB7`Yi)CS"%'#=m?!jUHBV[r6^oJ&%DU@^s5++=NW!([L?kB63<N*,i_m+XLDl0Lk8tXJY$f)L]$AbMj:J4QqKI-PPOM_>u.6VO?`bqg##?YSmR>(4ILr7_HK`*1FAOA1M%.gmXh$BL-Z7"one__=4WQ;AN$JM];e6EmeID0VkjjQSM[(NQot^1PIaJu7rkV8P'h&/66BBbD82,Zp*p.YPpeSj8)=4<[fQLmYK!%9qmA9;AtsJ4P%"K#n3/W21bf7LlOgV;VuM&;[Jc+oHAu"LdaD3VO:2J@0,h%4&@bsH\)jDLFIUi8@p%5U(EMU)MoE;8J`gf$&#G)%d)E48N2@QH2E)A'0U'l&LJd(<UPhX8E5Q4Z$9(pl#rb7^UuNr91!#(T?VuIs;C]QuK\@fQigI7O(?nS)@L#Lu;!'@Q<k4n*PN*jH%.L^qdM"DN">0.aUiXipoH9G6'";%[M)NR2SP-uVe1"DGqjlSr5:g%-f:3BVa/7F>(U_@ngY=h3sam(<SSuf3f<jWC#Y9oV`!,EM6%"*-_rU\9pX-'X)6!P;P'K`h@3Z<Lj'>)$mkp6;XP.o`tlp9JB_iliR2NRWs[Q:dP"5LRPV,I=;tI-?@NSmi6p%uXt=k_NZQP%+Y^%>GgP"p_7,8&YJPTJ[M;:Osq_?1h;V$Tg7EAg!Cn=KC)Rb3!8,'Lc:dhG#pO80RA7CF\c`<QL2e27a$@b)!I?D'.UEuedf:!&Z@>p%.oH,Nj+)"f:Z:%.frctb7a#B),20Rq(N`3GUR`2lD*uq`7!I=Y-+RrKXHJcB'=#2pm/Za_4MKn2kg;*;L8JNnAO8^s\P1&'`YH<6%@Y8.SW@g2QB6lk4kt"d<]:MAca\ccMA!&1MW>gh',s5)Y>hT?m,<_D(OV:Bldhngbdf_#NB`^oZC#$4g>!)q1C@P,!8=mUB5:(#\%Kn7AM8]hG>4!?-3&N7<pHdEc2a;6A`$@LfNOY+C.b8.-FHj'%3bk&=q(TJV71-K'`$I]TUQ"::<D&F\H-_M4E0Lt@_",m[F//O]e%(dfEZ$E]d@m)$OP^7ka^YuCO[Ttjh=$m(6JC>TSS4p@^hJ>&OLW-,C(**.DL(S`=-CLam\lTL0rT@Sau8j<?a(kh"WLm.U9&,L,J%:g&TkfJ]$k63q]9G4d==;AMXX7FVeb0r41u6aA3tT0cI-H86[r\UiE.AD!%;K:.Fp=VHc5bZ?P!!!j?-e?t3ClIs5&*sDk%pXgub%g+'_R,U>&fHSpOcW,O$XT(3Yu#bcBq7+2thWT&Rl_?M-0R)]@H[#YYD$Scak_1Zcpn>p>@*-aR/6cW[P-ep7JBTm`#paV10^rHjP%YRq'OSgoanbf'52P^rD)_([/XM6MZ!*k*A^7j9'sr'^)oQ\;7KJed#+\G(g2&DsBSAcGC+"2q,50ma=VC;GV9c",6/4<rd\Tp9`)%4Ya%WYgA7I7qAdL>!`RA&MXk("Ukut)>3,!4V]ZCGn1dZ!OPcb=5b/tW'5dZ4@.WWGi5aL]HMm7#Y)E=Gq31H_oQ]Iq[+ioiP9H(%Pk9.XBF%Kub_8\8A]5:3U^ps0%PE5rI+XQ<!8I'-DTReS*PrW,_bGE][[o;ZpD9=n[P0<7nUbF[33IqCLr(.)U^d'R/\Vl0YVk>4%<=!GgBSQF*kot[++q$#?.?B$R%k$il6Ni(e27`1!&1bF+K\Ac!,_@>DV8-cP>uE%M(eDl*Qd^YniWP-*l,&bf-b,mr\F:4oBm5[@%Mq&CUN^kae2!)S]M'Y`,_^-oP_HEd5&2A4i+qnn"4`!a(`\gKLfTXgbJE3)RUNp`bV.&"l7o?D8TC'4Ik;e*$Xbc8[BN,&1XD*\M%'rlt^VqSOH[%r\dm\^O"^-sP0*)c*=>9-E@:t1+#P\::.,ZYD<L(ghaFK[(tnL,..5_:7aOZ"5+TgIJ?&4Ckri_jf&prT%jC-W^W%.<3I6*ioiIV/-Z'YN)E,>JfI*8/[7@D?WKJ5g'(HTd5>hUT?fa8W55-P/^N(PKP"+/pAW`Jk?C?:t7^oY_3]Q=Dki@=C)n%:qS)V%5WadR(,77GR4Z<VhhnidBdgg(=I/#%:Eh+L_3'HUbU&ZI=:&(PSE.D'd^9c+E<q`(:'sH`CE(2XaeFpO'/.**7r;Y0:s;;Z_`(Mo%[/s!_%'@(6)IrMtm!Y2f1&?.!8E!BEON\r_acH*qnJ8u+VJ>CA(7$To^K4f`>Sb0aJWkg#^GJqWo&,.4PCt's0`qR\$U%l&OG(_X%Hidde#2oqTCrH.S>=;<u6bJLj$W6+)D1U*=NL#6]8UHB4C,D'?+;1&mW0%X%0arK9AP4!T+VP$?h&m8TV2Eql)#Mo1AkQ6Xfmsr$%BHr0=8<>j3!osQiOjuuA[I1pjFO[d->EIeo)^<8KFC!F$W.<rrfK5MH'HjfGrcH[.qEZ)jMt-o`LdMg#(ScjrYXD3X3C<im-?"Qj%pLM#OMbl,5@kaDq8?p`jX=D,N0ZdRJS'2^,QNa-3)dL4"f+2@]Tk(=5YGQ"_:(OG=BrFc;(TP/].s/4si;j:8n.AWNE^V/eKEaOo%*p1JN<GZl+*iooW-phHY&B,7M1.>MD"<j:h]&]kFcR/'fH:e6lKTK/VI=lN&J^O7+9o6G$=2]K22[rTCRu$D:6JoW6m$`NhI#%F@%o3><-j$3WoLOPI2_6F,j'uA698U=4!KUE#rLPHc%O_mc'Ubd7+HMaiu!S!8?]@=/":eLsp,)CchPGSV(4eGg)[j1dnJAL:Acl>1T%TZ.:0//RT[HmsqG,jc/'fW!0c=TV79j<M`THRTL4ALr9c4$j#]"#ch5]:K@dQK_U*JL(dJd?H6,."n9]57NN/"u&E%8D>N:QLoWp%@ApCi%lR;#hG2/u8`qJsU?'jLKU%k^#i!WP&Zn<-:H4FcL;iR+O#6)lGArDmI*nQ6r'Cu`+B<*#l<=O8plX\PP(lO>ZEmgiEe&te%F##s&Iu(llaG<;5+:]PK6"gV&)aTRjK's>>ad/b+`23U%;`OW17RL'\5gqa)NG/0UoBf;ff=[g!WM.d:+rr>-LPIu',&:A-=qZb'%(%UZ]Sb2G"@^i%JH:,aq+l13"i2oQtQ3-P!hqTX%,_?U7OjV?$,p`#TJ3EgL(6OWn=[Oos^1.foH;4laWA%j5=:B8GCa&qc@ZPLa%irK;I4.Lj)/;O<tX!+j&_`2psD*l-;RW2I(Y[h,9/:kntOaUp^?5`r"Trh'$qNhLX6jj+;$M&a9QBE9.g4;\/^i0mYKLd4g`A=C5%OC7/ENfUOYbCbB1MJs^d79JK]lmqdlAE7_s($VP<r2^1dfnA!FUnn]f!AUkKVpQZI7jOmln0]H2o@jgYnfYLMjr)*X!MOdl!ePM,%5hK76+Q>KA/!4`^V_qa9%3^]t5THCZGCZrdNDX]\,Tn)A#)(AD&9_kt0"s!C,@nOsOHBZsaY"SZ'p:BWdZQA<+d:&AFu)qqY%b*g%jF;J!S31=,>Cjo;&@t`5#L%[)A7IZoiQM0e_BaVqTI1l#.r9@c'pqBb,]X*Z$kjjdBJV/7:lc;=Z5>/.4lL8<<Cu%%6ro@b"WS6A%ZAP4d-?7F'rg'$C=[*TQ15VX=!6u59"<1PK+A?9":.\R'.2isUM,B.r(YP;q-4)W'GCUFmD`e"98M`9F?Q;A<!=%Y`@9Jm07qF7_%TbbXmRrI&6K`[W4Vhebp!Bs69/iWi9,;$ng+*e)@/D"2TO+Xfd&aOBET`X+%0Ea)FW_#<3>fRX_j0=rg6Ll_'NPHd$9'+gk*aU,^%4ak=</g5cW&V+j"P/uZl"cK^+fS)V9/lL0f3i?jUoQnRr2b*-7[LndVfL<dhM08.f#r`@$4.lb>87]!ncRgp&,FaOcS,u'rh%5kf%RUS:600.2eCEV&U*2L<'JVo,NlN:Ko!b7b.li`_:0+Fm#'&esta/4.Q%U"7HX`AaK;>\GK;>ZM1Ka8iS*A\-4U;1A-ct:4$&ud-"%=AH\$,n/!KC.lDFiCfN>'85s_j;;?^3n>/!;IBO"C$]t-CRin:^lWI_P#B*q=DEuc#B`01HkV?6CeuE26)-o&9f@[C5,9AJO=8eC%@EPgU8:%1AN\D(+,SQ=`8Dleb8-gq]fIq"Y@T%58+b2o!<_6s2/0Qk4C5/]!)GHd=;<a$B'D=;W.bLE@aWr-":ti-PFN,q^0V*mB%OCZ\IS^860J1PgIpl:SH`m^=#?phdK*KqAHI+UP[a:,%bY)09GAB(cR5;4COiQEXA0d8E6Q245_o1@Me7]9uJ,VEKC.O=(FNY-uh%8-O-1?cjFZ<K9Us'$Yq9#8r\j0M,0F(GSr*#'ZLcJ'^BK`KJFXLdG\[9Hc1uModMa4i+pE$jrCK@o[J,JLP-L.]5T?a9lr)nIbnT%%M]m_MTd1u3%C3+`U_8TBGcV"^tHL1R3aOu=G4[XX0*q2E77[]R#j[%A.g)C/4W6'=PAS1-Jju6cFjeWFLcZNoR\?JQD<IeM+l4o%Lc8+\KHfe[A:FlPgcP`UD4YQ,Ss^RNgcRSt\KVY52ij`#Y/2AChWVHVMaYA21+ZA[4BOq%7$>%#oOI8X[KQUN94#/S&uH'F``NQe%77rQ)_FJi.$k<dp$R$\@Edau[=M1^e'c&HOdX&2baV^g[.`\Q*Xb8!H.>RV!WK(Ch*Lep>LcKG-KB]FW)B0WAOZ(DO`&j*g,1.uo%XD(L-5u6\lS4G4`9k:%&bjf19drE0p)**DIW;mQ(;h;n\7QQK<.OHFHHRptTaZF;lH7;3[J]SX:Kud:OGtp*b4_;TG%YDjbME.2N%-nS.=TD3lBn=gdu$/$G"=KV^([ZLjP[[]0*BXeBP.7^a76"4LgUe-G#:haT(..7J0(_]9c@ADV_UnNX`OT:)NM4mKD-EJW7cubA&%M;W5[B[X2K]^un*dijG"J:4C6RXfBG,.99.&E3B9?3EZhL9r`Wf%j&-I1(Kndn<&Edr8;K'/8$Z'KZs>p0&bc-GoCA`KkZonfGHZ%n5VO`aUqk#)>K>bkob$b%hh#<M&)h.BkJW:+l^("DfJT]Ad4-0L6Md1jhV5&gEIK<m^e'CoVBK#,>^K>(mPh.no\V+a9(p4lm0#M%#a6leLN]<U6"DLQ.\%'M+D1b=,P$tPDPlsS[i.0qcK4\+gU!F_R@+C)0f'Q30Jei"'O%Xr1E@6TClouT-3iB3TNGo+,%Zco9$6eM%o:+CV6r&JNR%A&),+XT/OCDgRLDZPr,u%!eh(=YXL1T+4S!f)PEn(I)\I_>DpC+Bj1'g7mE&ek)_Vd&"OA!Cqq^hnQ!)RD>7@?DI%5j50cq_q9)i4NJeC.Xd,Y\;9HRXYB+Ufc,q`j4'iFbo[\7)G*27(00HF^;)A'e6NCKq]<oVBQ<s@EQ)^"*@Ej'A9.V/R+*cF]l23%e-K*E'aP-lbod@^$CDik"PT.KK8V(`q+G.0+Z*Y]#eVDNSY`R0\X$n9"_Vu[6-(/44lFM4<$\Q^?k8W6;%jci]8%,FiEWj/KgK%Q%m$s;28"'Ib8;4Jd=Mb*#&eV\^V/lP;F7>!sOdt?TY/1/uXiBlW:I'M,kQHcO_9#VVL''u6_N`,H0f-^8jfGAok8KJ@*7W5>=UB'f%OX>cj`A#/SNr67`R)`o]a;ZlS<Ro,$/DG>G3b:'G78Z]cMGB#>A_0g2!otJDMQT?Ze2q\5?9rk4X':.Y]EMS"n5Y]3m>)@nO>RLC%.krsj0gU&Z]dSo!R!]Iqm1ML#4kJXp3+F/V@?Rf]Sq3%Cdub2p"G8+!(;g]0%3;7g`;p8OJR8m"$K&fV$kHqq#D?AYkb"C&m*Uit%qN*rRQF8%47Ih3!\/c/?i/">P^'[5lY`Z?1Te]"b4@f%aft\fU/rIi7_Zf`@#Qe3QA):lUjZ@1&+jG[NQm5Ee!9<`c7nb6l6*jZA%gG3W2X91Q,PE%m\CBIs%d,6T5#pCo;$F(gaW3pS)Z;%EZ1Dum#OKqQnR?:,cL4&%*L;5Q\jXiB!`'1G5&M%=XOi)ulLMsgLOZ[[&%=TE[siok!e\p!.-K8PAg[P\L\WQ5j2d'@+'Ord)Oa[jggL\)HZ#`)n1le,,pKGAA.Or/uf-4N?H(<oR^*g<QCK-Y%h<_:LJ-AgE.%p0t$W`e1;,fetRQHL/qa>a:[>iqHc@HAf.5Q^rIp9=3'3YPQc\UP#ZB`44Hn_@TH`9$!8?:/#jaWZ_sIK\jL_)0*ME@%?kI4XN<Z%6k^RoEp+(J,1Om1e-Q7T:f9SB>Cj0r(^XUaK!!!JjRRI/L571;/;>;lc,bPV.gP/;J@I4J848s*l,)YH)Mo2f@8W]QL>d^p:cAQ6%&2Bb"ln\r6V3`@"S.arkgHr=OKo=#m8G3;#cAfPra5n4559cUM"s5@**mK:i>8VXEW!+_>k^Xtt&9S:hR(@sU.B:6o8#"''F2q3&%^<"5hS;l/j.gQk[5>]40eqf1d`/>58[4T$Y_D![<5X4pS\,qD-BQ6_uA)3<&j]`]=G(b3,ZMQabj:,=Yg;#7Z!_!M"-@*$Dr\5)(%E'cu^5ZF8kn]<lbhoHBA2^;Hr@eAj:8l>N^\/$ERBS<)(+XE<q'&BdI-4a2O59B00i.-o_[?J!IEB;<Lbs[SF$1VY_Jj8-+$u?(u%_o*]"JN77uHk0:D9L<S08Hk]1Kb";gUX)b#MFh"t&IE!Z@H8oX&HR\nQp?K.bS[VnM'2F.0U9$Ob7s2+6j#uU0H!3J;?&9HKq;tH%6[JAF(luYTpP&s,R+Q4u&n"PCHR<9`@>Y)IObV[JO\j1AD%qO5"e-8ZXG%CnOB+`L:0k^BYh@JIT]Ueh1Z<^9`27U![7MQG+:lW/%O^;ZEK-^'lgCAYW>qqIgB7n=!MTMS]AI'65Hif!H+;PaCk3tBD;OSpS=MqBe[NnQLefp:mXT]>Y9NIQt+\9/lP<M>F`PW<"9#?HE%TrWp^?qM1K76ig?(>IrU&k+pLQ3W$FKbLM`Qf>;PiW;;\JDimraf(,PdfWr#qZrZXmr5_0$(ng1Z^5_s8W4lKN[l*c!(?qoPfqDb%rNiI,)\r$(=Hh+k&mdLXk$tM_g(O:Lg"1fX]L`9K)$$Lf'I5Y[Ym*0bK`8SaK-T(18-!0Efe#bX0u*eJ%mu3pKK^J[5le@dkp(#E%+ejOH"25Xu1c[Zh-6d.PXJ=aa!-j6[)M4[n>OEDn9c3+t3-bPj@Z.@$;+Kn$neE,Vs($k:Clj18+IEd63^If1h,*bk*3QYX-9Mi?%KN?Tr(`\^j3Dn[m>i7TW#\h-E(.Lb$$52"?/onsJ5$j"E/[?+"TeP2iU8/SD[f?_o'^rmhKda'Wef\;7Bq]/`9oM8VKWg*Qc`h[O%H.Jm'E^jUBM\aJIdFbiF[I:mEJP%em,cS_0+qYE=%t0\(hfilK'6J%cqI:$lRRcca/1Zc[XoTZfA9!@@5$+8b'S(A:+0p<35#$n"%>C\$h/0\5JeOu$DBLr3O&=A0J_SFh5:5M5F+7Rs:'?Xm@jGM(pU'EZgCfA9Zq&B[(<#^aj`YM4m+k)4a`o=BL_k.g"%qOWi\05s5%icFTK`*A4^,gW:<8-mH0)*s4F-t_sWhTWN*jDf,?iPq@.\L(+6&9BP<'3Ln=jRnq2rADXgR]Ke>U/Yie'EJlFU'Qb2*1Go_IDBc`%g`eM%kLa_<Lb'3/O?&j!^ulC8^/4.XBQq@EZNk?0o1.]+EKi&NZ+t-7LQ#jj3gbOEqf=03%&4K7XH86MXYtre=+&<S%`O!!Eup)q%UIn'T/SO'1s->VXK9d0M2hsbTHs<+76>VWnLXV61iHf\Om3'2ZgEJZ+F+&U\J]PhfiI[i@R;nc)8f]%gYcf0VPk^E[Zj"a[K,A05%9NO2&K4CAd+";c37KT#L0BSEPU/j'!(1>7>ZVh3,I)Ed*1gi".)ZV6HCl%j^..R@,i@Cm`;!&d/:9q5P6-lDTb0DsIh?$-=&<NfL%/.]\1JE'*u9B?b/+FP/@TV3d^14:<F*3fP68[I^k_MIp,AEP][4(KZr''4ZuLCFp0gI+6,KAnS`jY4\VMXp">*hO7&n)2.#@UM5l%oURX11LV,Pc@D#Ek)&PgLVjZugB<2*&dou7%0D:&A`>^;5o=l(Hs;j+`8mKi#T(<EOT:Q[jq']:gd0TWig1[A6[7gCnJa=oE(J;p%P,TZSc@KaAPS6K<*Ka2g)!G@1I:6Lg.#XR9E5I8WI(%8Zk2<?%1GVLL@#k`16XhF@PaLg&RcEmo+c)`MQ?b@gk!8&l1glBLK3%uC%+e7]9E?Q;L!Ofjo1Tk!fXTH?Wjr=MU[^sHsU>t4V&LU2k?q?*;@SejL>r%(4EJjoH*0(fl)9>3T*6(!?cm!ba3<U!nPCRVSZT.Wr%AA-8Uq(eQ[?jbqV[8/0mP%Jn(7(!T1D%0Qo`CdhenNBcTn.mSej,=]nLdL,GQ@epaC"mG=J@1T_'f'pcN6*+R#=KFYWA#KrZ16cS%bj=OD(\.\X_GDGMS[ll,FU/[i8Ph)L,n^d_38l[e]nlkj%q[DX?VVtZ?3%AZ;1?&FckK^B-H@]-fgJYmK>8),C$Ys+`!rHpCJMdf%G;^OZ,q94rcWkHV,)d)%'Hj3\MYq\P5o+ug'P2I_5U5V8b4oq1(&!gc'",Z<!,c#2R0\N%N-^+R#dNe7ZM;`Lp7(Pa3*aG^M0%21%1YWRUQN8U-S"[91/69h>'gtQ"R=*AI.GeJd(rS7/9VO"*G!hE@_[0]0>V=UK=Hc6Y#TjdJelJTgMb7b_Q<Y\rZJI3Q^_>n>6&k#:%:4O(6+!sT8QNLDN$QssH%G-$Lou3G0!rZ2jd)JS`3D9W:mE4t;M&@9^62n=7C$I=2Xs4_KMs(bF!"gp.-*D%cMf@+"M>0.F<Oc!4%*\Tp6pf'ZrEoZ3kS>&E_E[VD?"Gk;m7*iAK6faC61]p33,8?uDoSjfTHt11caV$iQK,K4G>BB#R(A[3"TgBiPZ:&C\fot8(dOHsp%G^<d1nHh4Y).i:35[ciGLGRILjI&!7_\$jT"7/WF:t-34k<:*p31)Z7%`PIQb\SQBH`TcBW.<@6ifZo,'XQ7YK^##OLSHSt$%)/*%Mj&eq'RY5Z4K)ImjOHcV#(3NgV`)s&HP!Vd^decd@"#j&7r6#Bq2e35jB=72aT[]D&:j$BS4m>uVl8X5C'=5U\QmI!6n*cX:9XcY%$6.][!i8GapQ35t(PaFpJk<CTS6$BG)_7pe:QF>;&7]q:_?s!kIlKQQ'kO`&8n;HU$doZe5O@fl&^<lT30c03`Z35;L$\:JZ#[n*%8\n[5h@mc9o+4O38#BBtBY9I>LStu)'kfSn=9@YTW\SYt7i6$3pL=QTgub7G4/G?I4M!E&U^:Im`@`JZ.#J!EIhR^n.L7ja&?[`?%63'pl,Mgn'L'p4&C7sL0$Um>jCGWabjDS8@PJ!h&M=Z4MkDBAD5njc]g4>&Cb%n5ZXOA:+mrJ'G(+AtfZp6*qab[aL2"1W874&n4%TgIf_#blCNJ20fs_BK=rQ=**!GlU"J@<-"I!Y>k&6Ah6I,s]r"`%oGN[RC@Y*Cm3KfL-6EEJbN[j@/T<deNSk?9Y0CcQHV-A[+<=%\U"N_X9nWP!>^8c#&o5;lYlm!`J,c*;GEr@U=KHPKH@H3A$NL"'M$^k0NjK:K30ia,F#uoWs9WH7QerS=?be&fA46%#Pl30,J;qZ%c(?";U(L$<4om+m,q$j_>/9HVMC%D<Q4P[1?Q@=%8B@r\'*l%_mD.P3(luk<3s:/3,&&e%6ueZ\W-s77-_0^o+*+a*jKl=CEGcUJ%G)Q##?W=35_BfB!,)TF-4bH,%!"jc@S</7t&9J[_D[dq'.+B)G#tW;'?,B\&-pkEl/Y=11VZk+`@,0rt3ir`[a.1'.1d@>e+C)Q2%D-4;)`K;eJ/;/i_m_W:"'+#_W-QG#KA4U18\tM)'N]mPCg4hSUOe(PK%X\Z:>n-Lb1R6q%Z8"?fR0F>$"j`On9F.<NHtF@/`S'OH%7RBX>)R6Lt^_HT@Apd*X3<4+cFonScUMA99TUdN:k(*4NAnc:)QM@*Zs-P$;i_i4'c"Btn%f"["$beuj_aA)UnlZG<+(u"2$X6_d%CCK1KP8BdhBu)S3cN9Jqm5&>UB#Uj="5"%@=>JnFm4]ZYGRBKJb7/h8qkN(O``]fPU_3-*JgfE=OMhQ!5Yr'Ff1i@Z-fY;!6fD^0%$I0Ms%b+1X;Ad<!;%1]@>YO/0%@bU1K9*sqg(*""[GtmO5PY,EIZ!r4a=gSC8Ti4JgRS0WC:78t$[IEI,F&c3nd([O@NDK3#U3&$%3m,U/T8#`kKUet6*(/)YNBD:(nK/4$atp=cZdZ1t*957!="Og*1[7(Yf<G1c@*$M$SUeh=Tp1eiMQr\Ub6p_/fZX`T]E$N=l)Z:/%M0Y'rOOFna\jTl\aD)t\SOKI.A6#7lDNrbFE]R5r$e&d(3GgCHmqHm\SDKW5/2b"O?9c\LYW3^_UBB\$A=Xd4e$ZO9\40uSC\9^$%5A(kpCko*7Ts6kg7S:s`aW!9$>:=,8jmB%;c'>c\1mV@s\BA$))@J947HWs\S10o5<cdD>hVucu`As\r@oqi0n!nO'Z/DrXIb"n"%nJ(&t#s!Kf`[?oA>NB'/H3[!d99OLpB\Y1bVi8W8UN,b`SNqHjOj9MnEB<2%;]>C1hT;&WK5#^E3JUepl)&UJko=qn+.pObQus5-%?&C\`UWu#jF^aPTSU#Emc=<=;WocFI)X"3IKq!;Yk+0=LQZ:TYXE-Migs]CRG2CWKGDG@Pjr2:O`r2KOdcVYH=bU.bdq@0ZNH*lc%F0I0$FLnnpF87''!BdUig;o115*M&dj<Hh`GYgS9UkpYaj%m3&PpVTXMfiT`@@D^L/uY'D]4jTQ\aWl_^8D8<k/)fI5[lq0QjZII%6C+(EVC));M3)JhW;0P24s$b_g?)nWReX'58t:qgkMsguW,sY6Xbgr]@c4ggGrD+_&%61=Ek/->2RJe]!9Sld\kjT2GN<LO:1,88%5K=IPM@*ukf?@kojK^(Pq%T9fMd0RX->u88foaV[aJO`+1.ZFg-Fl5Q9s.)HT-]urU<AD8jiujAC\$.;\I>$6%So:5-_C^0b8&0r%'BM!0ni9:1]VSkN;_IqrRidp=TZX-6j`7S'$!On+XaGk)4q12P.],ieb9ieAe'^(`C\\+B>Rm8V;(e21QclnfVWI'*pTb*S\hq3M%Z=#ki:m6'i:JT-q0C"]?o9k]NA4^'!V'b^fT:DlRiQNTok&Nb1q4d\\dX:%g54_@0+-k0GdNi#XP-Hk>>5>6PGZ@+V1(i<JVAkrN%7!+rMY4LrX:_IeQX5_:CNITj]_T99u>.oB0rU]_mqtg'EgNMuIoC`-o*P27En)<C)jn=h.%/k#"5/04eDhjp64o>g5oL\t,]tSKj%=o860&1WV~>%AI9_PrivateDataEnd